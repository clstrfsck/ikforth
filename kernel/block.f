\
\  block.f
\
\  Copyright (C) 1999-2001 Illya Kysil
\

CR .( Loading BLOCK definitions )

CREATE-REPORT @

<ENV
             TRUE  CONSTANT BLOCK
             TRUE  CONSTANT BLOCK-EXT
ENV>

USER SCR 1 CELLS USER-ALLOC

: ?BLK ?DUP 0= IF EXC-BAD-BLOCK THROW THEN ;

: --> BLK @ ?BLK REFILL DROP ; IMMEDIATE

: LIST ?BLK DUP
       SCR ! BLOCK BASE @ SWAP DECIMAL
       ." Block " SCR @ H.8
       16 0 DO CR I S>D <# # # #> TYPE ." . "
               64 OVER OVER TYPE + LOOP DROP BASE ! ;

: EMPTY-BUFFERS 0 BLOCK# ! FALSE BLOCK-UPDATED ! ;

: SAVE-BUFFERS BLOCK#        @ 0=     IF EXIT THEN
               BLOCK-UPDATED @ INVERT IF EXIT THEN
               BLOCK-DATA BLOCK# @ WRITE-BLOCK
               FALSE BLOCK-UPDATED ! ;

: FLUSH SAVE-BUFFERS EMPTY-BUFFERS ;

: BUFFER (S blk -- addr )
  SAVE-BUFFERS BLOCK# ! BLOCK-DATA ;

: LOAD ?BLK INPUT>R 0 >IN ! BLK ! ['] INTERPRET CATCH INPUT<R THROW ;

: THRU 1+ SWAP ?DO I LOAD LOOP ;

: UPDATE BLOCK# @ 0<> BLOCK-UPDATED ! ;

CREATE-REPORT !
