\
\  ikforth.f
\
\  Copyright (C) 1999-2001 Illya Kysil
\

CREATE-REPORT @
\ TRUE CREATE-REPORT !

-2 CONSTANT -2

-1 CONSTANT -1

 1 CONSTANT  1

 2 CONSTANT  2

 3 CONSTANT  3

 4 CONSTANT  4

 8 CONSTANT  8

 0 CONSTANT VEF-USUAL

 1 CONSTANT VEF-IMMEDIATE
 
 2 CONSTANT VEF-HIDDEN

 4 CONSTANT VEF-COMPILE-ONLY

VEF-IMMEDIATE VEF-COMPILE-ONLY OR
   CONSTANT VEF-IMMEDIATE/COMPILE-ONLY

\ [
(DO-:) VEF-IMMEDIATE/COMPILE-ONLY PARSE-CHECK-HEADER, [ DROP
   TRUE STATE ! \ entering compilation state
  FALSE STATE ! (;) [

\ ]
(DO-:) VEF-USUAL PARSE-CHECK-HEADER, ] DROP
   TRUE STATE ! \ entering compilation state
   TRUE STATE ! (;) [

\ ;
(DO-:) VEF-IMMEDIATE/COMPILE-ONLY PARSE-CHECK-HEADER, ; DROP ]
  POSTPONE (;) SMUDGE POSTPONE [ (;)
[

\ :
(DO-:) VEF-HIDDEN PARSE-CHECK-HEADER, : DROP ]
  (DO-:) VEF-HIDDEN PARSE-CHECK-HEADER, DROP ] ;

: VARIABLE
  (DO-VARIABLE) VEF-USUAL PARSE-CHECK-HEADER, DROP 0 , ;

: SVEF LATEST@ DUP C@ ROT OR SWAP C! ;

: RVEF LATEST@ DUP C@ ROT INVERT AND SWAP C! ;

: TVEF LATEST@ DUP C@ ROT XOR SWAP C! ;

: IMMEDIATE VEF-IMMEDIATE SVEF ;

: COMPILE-ONLY VEF-COMPILE-ONLY SVEF ;

: IMMEDIATE/COMPILE-ONLY VEF-IMMEDIATE/COMPILE-ONLY SVEF ;

: HIDE   VEF-HIDDEN SVEF ;

: REVEAL VEF-HIDDEN RVEF ;

: CHAR BL WORD COUNT DROP C@ ;

: [CHAR] CHAR POSTPONE LITERAL ; IMMEDIATE/COMPILE-ONLY

: .( [CHAR] ) PARSE TYPE ; IMMEDIATE

.( Loading IKForth definitions )

: +! SWAP OVER @ + SWAP ! ;

: USER       \ "name" -- 
  (DO-USER) VEF-USUAL PARSE-CHECK-HEADER, DROP USER-SIZE-VAR @ , ;

: USER-ALLOC \ user-size --
  USER-SIZE-VAR +! ;

: BINARY   2 BASE ! ;

: OCTAL    8 BASE ! ;

: DECIMAL 10 BASE ! ;

: HEX     16 BASE ! ;

: [BINARY]  BINARY  ; IMMEDIATE

: [OCTAL]   OCTAL   ; IMMEDIATE

: [DECIMAL] DECIMAL ; IMMEDIATE

: [HEX]     HEX     ; IMMEDIATE

: CHARS ;

: ALIGN ;

: ALIGNED ;

: >LINK \ (S: CFA -- LFA )
  [ 1 CELLS ] LITERAL - ;

: LINK> \ (S: LFA -- CFA )
  CELL+ ;

: LATEST>NAME 1+ ;

: NAME>LATEST 1- ;

: LATEST>CFA LATEST>NAME NAME> ;

: (;CODE) R> LATEST@ LATEST>NAME NAME> ! ;

: ;CODE VEF-HIDDEN RVEF POSTPONE (;CODE) POSTPONE [ ; IMMEDIATE/COMPILE-ONLY

HEX

: $NEXT
  AD C,           \ LODSD
  8B C, 18 C,     \ MOV   EBX,[DWORD PTR EAX]
  FF C, E3 C, ;   \ JMP   [DWORD PTR EBX]

: :NONAME
  (DO-:) 0 0 VEF-HIDDEN HEADER, ] ;

: CREATE
  (DO-CREATE) VEF-USUAL PARSE-CHECK-HEADER, DROP ;

: (DOES)
  R> LATEST@ LATEST>NAME NAME> ! ;

VARIABLE (DO-DOES>)

: DOES> POSTPONE (DOES) E8 C, (DO-DOES>) @ HERE - 4 - , ; IMMEDIATE/COMPILE-ONLY
        HERE (DO-DOES>) !
        83 C, ED C, 04 C,       \ SUB   EBP,4
        89 C, 75 C, 00 C,       \ MOV   [DWORD PTR EBP],ESI
        5E C,                   \ POP   ESI
        83 C, C0 C, 04 C,       \ ADD   EAX,4
        50 C,                   \ PUSH  EAX
        $NEXT

DECIMAL

CREATE CR-STR 2 C, 13 C, 10 C,

: CR CR-STR COUNT TYPE ;

: (C") R> DUP COUNT + >R ;

: ," [CHAR] " PARSE HERE OVER ALLOT SWAP CMOVE ; IMMEDIATE

: ,C" [CHAR] " PARSE DUP C, HERE OVER ALLOT SWAP CMOVE ; IMMEDIATE

: C" POSTPONE (C") POSTPONE ,C" ; IMMEDIATE/COMPILE-ONLY

: ." POSTPONE C" POSTPONE COUNT POSTPONE TYPE ; IMMEDIATE/COMPILE-ONLY

: SLITERAL
  POSTPONE (S") DUP , HERE OVER ALLOT SWAP CMOVE ; IMMEDIATE/COMPILE-ONLY

: */ >R M* R> SM/REM SWAP DROP ;

: */MOD >R M* R> SM/REM ;

: / >R S>D R> SM/REM SWAP DROP ;

: /MOD >R S>D R> SM/REM ;

: MOD >R S>D R> SM/REM DROP ;

: >MARK HERE 0 COMPILE, ; COMPILE-ONLY

: >RESOLVE HERE SWAP ! ; COMPILE-ONLY

: <MARK HERE ; COMPILE-ONLY

: <RESOLVE COMPILE, ; COMPILE-ONLY

: CFA>LATEST >NAME NAME>LATEST ;

: DEPTH SP0 SP@ - [ 1 CELLS ] LITERAL / 1- ;

: WITHIN OVER - >R - R> U< ;

\  IK
(DO-DEFER) VEF-USUAL PARSE-CHECK-HEADER, ?PAIRS DROP ]
  2DROP
[

\ -----------------------------------------------------------------------------
\  IF ELSE THEN
\ -----------------------------------------------------------------------------

: IF POSTPONE ?BRANCH >MARK 2 ; IMMEDIATE/COMPILE-ONLY

: THEN 2 ?PAIRS >RESOLVE ; IMMEDIATE/COMPILE-ONLY

: ELSE 2 ?PAIRS POSTPONE BRANCH >MARK SWAP >RESOLVE 2 ; IMMEDIATE/COMPILE-ONLY

\ -----------------------------------------------------------------------------
\  INT/COMP:
\ -----------------------------------------------------------------------------

: INT/COMP:
  (DO-INT/COMP) VEF-IMMEDIATE PARSE-CHECK-HEADER, DROP SWAP , , ;

\ -----------------------------------------------------------------------------
\  ' [']
\ -----------------------------------------------------------------------------

: (') BL WORD DUP COUNT 0= IF EXC-EMPTY-NAME THROW THEN
         DROP DUP FIND  0= IF EXC-UNDEFINED  THROW ELSE NIP THEN ;

: ' (') DUP IS-INT/COMP? IF INT/COMP>INT THEN ;

' '
:NONAME ' POSTPONE LITERAL ;
INT/COMP: [']

\ -----------------------------------------------------------------------------
\  THROW ABORT ABORT"
\ -----------------------------------------------------------------------------

: (COMP-THROW) \ (S exc-id throw-word -- )
  R@ [ 1 CELLS ] LITERAL - THROW-ADDRESS ! THROW-WORD ! ?DUP IF (THROW) THEN ;

' THROW
:NONAME LATEST@ LATEST>NAME POSTPONE LITERAL POSTPONE (COMP-THROW) ;
INT/COMP: THROW

: ABORT -1 THROW ;

USER ABORT"-MESSAGE 2 CELLS USER-ALLOC

: (ABORT") ABORT"-MESSAGE 2! IF EXC-ABORT" THROW THEN ;
: ABORT" POSTPONE S" POSTPONE (ABORT") ; IMMEDIATE/COMPILE-ONLY

\ -----------------------------------------------------------------------------
\  DEFER IS DEFER@
\ -----------------------------------------------------------------------------

:NONAME TRUE ABORT" un-initialized DEFER" ; CONSTANT (DEFUALT-DEFER)
: DEFER (DO-DEFER) VEF-USUAL PARSE-CHECK-HEADER, DROP (DEFUALT-DEFER) COMPILE, ;

:NONAME ' >BODY ! ;
:NONAME ' >BODY POSTPONE LITERAL POSTPONE ! ;
INT/COMP: IS

:NONAME ' >BODY @ ;
:NONAME ' >BODY POSTPONE LITERAL POSTPONE @ ;
INT/COMP: DEFER@

:NONAME - IF EXC-CONTROL-MISMATCH THROW THEN ; IS ?PAIRS

\ -----------------------------------------------------------------------------
\  LOOPS
\ -----------------------------------------------------------------------------

: BEGIN <MARK 1 ; IMMEDIATE/COMPILE-ONLY

: UNTIL 1 ?PAIRS POSTPONE ?BRANCH <RESOLVE ; IMMEDIATE/COMPILE-ONLY

: WHILE POSTPONE ?BRANCH >MARK 2 2SWAP ; IMMEDIATE/COMPILE-ONLY

: REPEAT 1 ?PAIRS POSTPONE BRANCH <RESOLVE 2 ?PAIRS >RESOLVE ; IMMEDIATE/COMPILE-ONLY

: AGAIN 1 ?PAIRS POSTPONE BRANCH <RESOLVE ; IMMEDIATE/COMPILE-ONLY

: DO POSTPONE (DO) >MARK 3 ; IMMEDIATE/COMPILE-ONLY

: ?DO POSTPONE (?DO) >MARK 3 ; IMMEDIATE/COMPILE-ONLY

: LOOP 3 ?PAIRS POSTPONE (LOOP) DUP CELL+ <RESOLVE >RESOLVE ; IMMEDIATE/COMPILE-ONLY

: +LOOP 3 ?PAIRS POSTPONE (+LOOP) DUP CELL+ <RESOLVE >RESOLVE ; IMMEDIATE/COMPILE-ONLY

: UNLOOP R> R> DROP R> DROP R> DROP >R ; COMPILE-ONLY

: LOOP>D R> R> SWAP R> SWAP R> SWAP >R ; COMPILE-ONLY

: D>LOOP R> SWAP >R SWAP >R SWAP >R >R ; COMPILE-ONLY

: RECURSE LATEST@ LATEST>NAME NAME> COMPILE, ; IMMEDIATE/COMPILE-ONLY

: FM/MOD 2DUP XOR 0<
         IF
           >R R@ SM/REM OVER
           IF
             1- SWAP R> + SWAP
           ELSE
             R> DROP
           THEN
         ELSE
           SM/REM
         THEN ;

: MAX 2DUP < IF SWAP THEN DROP ;

: MIN 2DUP > IF SWAP THEN DROP ;

: CONVERT COUNT >NUMBER DROP ;

: ( SOURCE-ID 0>
    IF
      BEGIN
        [CHAR] ) PARSE 2DROP
        >IN @ 1- SOURCE DROP + C@ [CHAR] ) = IF EXIT THEN
        REFILL INVERT
      UNTIL
    ELSE [CHAR] ) PARSE 2DROP THEN ; IMMEDIATE

: SPACE BL EMIT ;

: SPACES BEGIN DUP 0> WHILE SPACE 1- REPEAT DROP ;

: ROLL DUP 0>
    IF
      DUP 1+ PICK >R
      DUP 1- BEGIN ROT >R 1- DUP 0< UNTIL DROP NIP
      BEGIN R> SWAP 1- DUP 0= UNTIL DROP R>
    ELSE
      DROP
    THEN ;

: MOVE >R 2DUP U< IF R> CMOVE> ELSE R> CMOVE THEN ;

: EVALUATE INPUT>R 0 >IN ! 0 BLK ! -1 SOURCE-ID!
           #EVAL ! EVAL ! ['] INTERPRET CATCH INPUT<R THROW ;

: SAVE-INPUT SOURCE-ID BLK @ >IN @ CURRENT-FILE-POSITION 2@ 5 ;

: RESTORE-INPUT
    5 = IF CURRENT-FILE-POSITION 2! >IN ! BLK ! DUP SOURCE-ID!
           0> IF CURRENT-FILE-POSITION 2@ SOURCE-ID REPOSITION-FILE 0<>
                 REFILL DROP
              ELSE
                 FALSE
              THEN
        ELSE
           TRUE
        THEN ;

: QUERY REFILL DROP ;

: DROPS DUP 0> IF
                 DEPTH 1 - MIN 0 ?DO DROP LOOP
               ELSE
                 EXC-INVALID-NUM-ARGUMENT THROW
               THEN ;

DEFER (S ' ( IS (S IMMEDIATE

DEFER (R ' ( IS (R IMMEDIATE

DEFER (C ' ( IS (C IMMEDIATE

: ON TRUE SWAP ! ;

: OFF FALSE SWAP ! ;

: CELLS+ CELLS + ;

: CELLS- CELLS - ;

: CELL- 1 CELLS- ;

: CHARS+ CHARS + ;

: CHARS- CHARS - ;

: CHAR- 1 CHARS- ;

: BYTES ;

: BYTES+ BYTES + ;

: BYTES- BYTES - ;

: BYTE+ 1 BYTES+ ;

: BYTE- 1 BYTES- ;

: /WORDS 2* ;

: WORDS+ /WORDS + ;

: WORDS- /WORDS - ;

: WORD+ 1 WORDS+ ;

: WORD- 1 WORDS- ;

: -ROT ROT ROT ;

: $ BASE @ >R HEX BL WORD INTERPRET-WORD R> BASE ! ; IMMEDIATE

: & BASE @ >R OCTAL BL WORD INTERPRET-WORD R> BASE ! ; IMMEDIATE

: <= > INVERT ;

: >= < INVERT ;

: WORD-SPLIT DUP $ FF AND SWAP $ FF00 AND 8 RSHIFT ;

: WORD-JOIN $ FF AND 8 LSHIFT SWAP $ FF AND OR ;

: DWORD-SPLIT DUP $ FFFF AND SWAP $ FFFF0000 AND 16 RSHIFT ;

: DWORD-JOIN $ FFFF AND 16 LSHIFT SWAP $ FFFF AND OR ;

: W, WORD-SPLIT SWAP C, C, ;

: W@ @ $ FFFF AND ;

: W! SWAP WORD-SPLIT -ROT OVER C! C! ;

DEFER KEY
DEFER KEY?
DEFER EKEY
DEFER EKEY?
DEFER EKEY>CHAR
\ DEFER ACCEPT

USER SPAN 1 CELLS USER-ALLOC

: EXPECT ACCEPT SPAN ! ;

CREATE-REPORT !
