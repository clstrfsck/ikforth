Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 1
meta.asm



      1					 ;******************************************************************************
      2					 ;
      3					 ;  meta.asm
      4					 ;
      5					 ;  Copyright (C) 1999-2001 Illya Kysil
      6					 ;
      7					 ;******************************************************************************
      8					 ;
      9					 ;  This is minimal IKForth kernel, which supports meta-compilation from files.
     10					 ;
     11					 ;******************************************************************************
     12					 ;
     13					 ;  Register usage:
     14					 ;  * EDI - UDP	user data area pointer
     15					 ;  * ESI - IP	instruction pointer
     16					 ;  * ESP - DSP	data stack pointer
     17					 ;  * EBP - RSP	return stack pointer
     18					 ;
     19					 ;    EBX - W pointer
     20					 ;
     21					 ;  * -	register should	remain unchanged in low-level primitives if
     22					 ;	such operation is not pritive's	function
     23					 ;
     24					 ;  All	other registers	have no	special	meaning.
     25					 ;
     26					 ;******************************************************************************
     27
     28								 IDEAL
     29								 P386
     30
     31	00000000						 SEGMENT MAIN USE32
     32
     33								 ASSUME	 CS:MAIN,DS:MAIN,ES:MAIN,SS:MAIN
     34
     35								 INCLUDE "macro.inc"
1    36					 ;******************************************************************************
1    37					 ;
1    38					 ;  macro.inc
1    39					 ;  IKForth
1    40					 ;
1    41					 ;  Copyright (C) 1999-2001 Illya Kysil
1    42					 ;
1    43					 ;******************************************************************************
1    44
1    45		  = 0FFFFFFFFh		 TRUE			 EQU	 0FFFFFFFFh
1    46		  = 0			 FALSE			 EQU	 0
1    47
1    48		  = 4			 CELL_SIZE		 EQU	 4
1    49
1    50		  = 32			 MAX_NAME_LENGTH	 EQU	 32
1    51
1    52					 ;******************************************************************************
1    53					 ;
1    54					 ;******************************************************************************
1    55								 MACRO	 $JMP
1    56								 MOV	 EBX,[DWORD PTR	EAX]
1    57								 JMP	 EBX			 ; execute
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 2
meta.asm



1    58								 ENDM	 $JMP
1    59
1    60					 ;******************************************************************************
1    61					 ;  Because of usage of	indirect threaded code the $NEXT macro is used at the end
1    62					 ;  of each definition to perform execution of next word.
1    63					 ;  Simply fetch a code	pointer	[DWORD PTR ESI]	and jump there.
1    64					 ;******************************************************************************
1    65								 MACRO	 $NEXT			 ;
1    66								 LODSD				 ; fetch address
1    67								 $JMP
1    68								 ENDM	 $NEXT
1    69
1    70		  =0000			 VOC_LINK		 =	 0			 ; link	to previous word
1    71					 ;******************************************************************************
1    72					 ;  Vocabulary entry flags
1    73					 ;******************************************************************************
1    74		  = 00h			 VEF_USUAL		 EQU	 00h
1    75		  = 01h			 VEF_IMMEDIATE		 EQU	 01h			 ; IMMEDIATE entry
1    76		  = 02h			 VEF_HIDDEN		 EQU	 02h			 ; hidden word
1    77		  = 04h			 VEF_COMPILE_ONLY	 EQU	 04h			 ; compile only	mode
1    78
1    79					 ;******************************************************************************
1    80					 ;  Macro $DEF defines a vocabulary entry.
1    81					 ;  Parameters:
1    82					 ;    NAME	 the name of the entry to be created
1    83					 ;    CODE	 label of the CFA
1    84					 ;    EXECUTOR	 the executor of a word	( = [DWORD PTR CODE] if	ommited)
1    85					 ;    FLAGS	 entry flags
1    86					 ;******************************************************************************
1    87								 MACRO	 $DEF NAME,CODE,EXECUTOR,FLAGS
1    88								 LOCAL	 $$DEF,$$PREVFLD,$$LBLNAME,$$CODE
1    89					 $$DEF:
1    90					 LASTWORD		 =	 $$DEF
1    91								 IFNB	 <FLAGS>
1    92								   DB	 FLAGS
1    93								 ELSE
1    94								   DB	 VEF_USUAL
1    95								 ENDIF
1    96					 ;; NFA
1    97								 DB	 $$PREVFLD - $ - 1
1    98								 DB	 NAME
1    99					 $$PREVFLD:
1   100								 DB	 $$PREVFLD - $$DEF
1   101					 ;; LFA
1   102								 DD	 VOC_LINK
1   103					 VOC_LINK		 =	 $$DEF + DESIRED_BASE_EQU
1   104
1   105					 ;; CFA
1   106								 IFNB	 <CODE>
1   107								   LABEL   &CODE FAR
1   108								 ENDIF
1   109								 IFNB	 <EXECUTOR>
1   110								   DD	   EXECUTOR + DESIRED_BASE_EQU
1   111								 ELSE
1   112								   DD	   $$CODE + DESIRED_BASE_EQU
1   113								 ENDIF
1   114					 $$CODE:
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 3
meta.asm



1   115					 ;; PFA
1   116								 ENDM	 $DEF
1   117
1   118					 ;******************************************************************************
1   119					 ;  Use	this macro to compile FORTH threaded definitions
1   120					 ;******************************************************************************
1   121								 MACRO	 CW NAME
1   122								 DD	 NAME +	DESIRED_BASE_EQU
1   123								 ENDM	 CW
1   124
1   125					 ;******************************************************************************
1   126					 ;  Use	this macro to compile constants
1   127					 ;******************************************************************************
1   128								 MACRO	 CC VALUE
1   129								 DD	 VALUE
1   130								 ENDM	 CC
1   131
1   132					 ;******************************************************************************
1   133					 ;  Push a value to return stack
1   134					 ;******************************************************************************
1   135								 MACRO	 PUSHRS	SRC
1   136								 SUB	 EBP,CELL_SIZE
1   137								 MOV	 [DWORD	PTR EBP],SRC
1   138								 ENDM	 PUSHRS
1   139
1   140					 ;******************************************************************************
1   141					 ;  Pop	a value	from return stack
1   142					 ;******************************************************************************
1   143								 MACRO	 POPRS DST
1   144								 MOV	 DST,[DWORD PTR	EBP]
1   145								 ADD	 EBP,CELL_SIZE
1   146								 ENDM	 POPRS
1   147
1   148					 ;******************************************************************************
1   149					 ;  Fetch a value from the return stack
1   150					 ;******************************************************************************
1   151								 MACRO	 FETCHRS DST,NUM
1   152								 IFNB	  <NUM>
1   153								   MOV	   DST,[DWORD PTR EBP +	&NUM * CELL_SIZE]
1   154								 ELSE
1   155								   MOV	   DST,[DWORD PTR EBP]
1   156								 ENDIF
1   157								 ENDM	 FETCHRS
1   158
1   159					 ;******************************************************************************
1   160					 ;  Push a value to data stack
1   161					 ;******************************************************************************
1   162								 MACRO	 PUSHDS	SRC
1   163								 PUSH	 SRC
1   164								 ENDM	 PUSHDS
1   165
1   166					 ;******************************************************************************
1   167					 ;  Pop	a value	from data stack
1   168					 ;******************************************************************************
1   169								 MACRO	 POPDS DST
1   170								 POP	 DST
1   171								 ENDM	 POPDS
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 4
meta.asm



1   172
1   173					 ;******************************************************************************
1   174					 ;  Fetch a value from the data	stack
1   175					 ;******************************************************************************
1   176								 MACRO	 FETCHDS DST,NUM
1   177								 IFNB	  <NUM>
1   178								   MOV	   DST,[DWORD PTR ESP +	&NUM * CELL_SIZE]
1   179								 ELSE
1   180								   MOV	   DST,[DWORD PTR ESP]
1   181								 ENDIF
1   182								 ENDM	 FETCHDS
1   183
1   184					 ;******************************************************************************
1   185					 ;
1   186					 ;******************************************************************************
1   187								 MACRO	 $CONST	NAME,CODE
1   188								 $DEF	 NAME,CODE,$DOCONST
1   189								 ENDM	 $CONST
1   190
1   191								 MACRO	 $VAR NAME,CODE
1   192								 $DEF	 NAME,CODE,$DOVAR
1   193								 ENDM	 $VAR
1   194
1   195								 MACRO	 $USER NAME,CODE
1   196								 $DEF	 NAME,CODE,$DOUSER
1   197								 ENDM	 $USER
1   198
1   199								 MACRO	 $COLON	NAME,CODE,FLAGS
1   200								 $DEF	 NAME,CODE,$ENTER,FLAGS
1   201								 ENDM	 $COLON
1   202
1   203								 MACRO	 $DEFER	NAME,CODE,FLAGS
1   204								 $DEF	 NAME,CODE,$DODEFER,FLAGS
1   205								 ENDM	 $DEFER
1   206
1   207					 ;******************************************************************************
1   208					 ;
1   209					 ;******************************************************************************
1   210								 MACRO	 $WRITE	TEXT
1   211								 LOCAL	 @@S_END
1   212								 CW	 $PTYPE
1   213								 DB	 @@S_END - $ - 1,'&TEXT'
1   214					 @@S_END:
1   215								 ENDM	 $WRITE
1   216
1   217					 ;******************************************************************************
1   218					 ;
1   219					 ;******************************************************************************
1   220								 MACRO	 $CR
1   221								 CW	 $LIT
1   222								 CC	 13
1   223								 CW	 $EMIT
1   224								 CW	 $LIT
1   225								 CC	 10
1   226								 CW	 $EMIT
1   227								 ENDM	 $CR
1   228
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 5
meta.asm



    229
    230					 ;******************************************************************************
    231					 ;  Header
    232					 ;******************************************************************************
    233	00000000			 SIGN:
    234	00000000  49 4B	46 49					 DB	 'IKFI'			 ; MAX.	15 bytes !!!
    235
    236	00000004  0C*(00)					 DB	 16 - (	$ - SIGN ) DUP ( 0 )
    237
    238		  = 20000000h		 DESIRED_BASE_EQU	 EQU	 20000000h
    239		  = 00040000h		 DESIRED_SIZE_EQU	 EQU	 00040000h		 ; 256KB
    240
    241		  = 00001000h		 DATA_STACK_SIZE	 EQU	 00001000h		 ; 4KB
    242		  = 00001000h		 RETURN_STACK_SIZE	 EQU	 00001000h		 ; 4KB
    243
    244		  = 00010000h		 USER_AREA_SIZE0	 EQU	 00010000h		 ; 64KB
    245
    246	00000010  20000000					 DD	 DESIRED_BASE_EQU
    247	00000014			 DESIRED_SIZE_VAR:
    248	00000014  00040000					 DD	 DESIRED_SIZE_EQU
    249	00000018  2000278C					 DD	 OFFSET	START +	DESIRED_BASE_EQU
    250	0000001C  2000089A					 DD	 OFFSET	THREAD_PROC + DESIRED_BASE_EQU
    251	00000020			 FUNC_TABLE_PTR:
    252	00000020  00000000					 DD	 0
    253	00000024  00011A6C					 DD	 USER_AREA_SIZE0 + USER_AREA_SIZE
    254	00000028  00001000					 DD	 DATA_STACK_SIZE
    255
    256					 ;******************************************************************************
    257					 ;  Include functions table
    258					 ;******************************************************************************
    259	0000002C			 FUNC_TABLE:
    260								 INCLUDE "ftable.inc"
1   261					 ;******************************************************************************
1   262					 ;
1   263					 ;  ftable.inc
1   264					 ;  IKForth
1   265					 ;
1   266					 ;  Copyright (C) 1999-2001 Illya Kysil
1   267					 ;
1   268					 ;******************************************************************************
1   269					 ;  Functions provided by loader.
1   270					 ;  Define these functions as stdcall.
1   271					 ;  First argument is on the top of the	data stack.
1   272					 ;  Result ( if	any ) is returned via EAX ( int	), EDX:EAX ( long int ).
1   273					 ;******************************************************************************
1   274		  =0000			 FUNC_AREA_SIZE		 =	 0
1   275								 MACRO	 FUNC_ALLOC SIZE
1   276					 FUNC_AREA_SIZE		 =	 FUNC_AREA_SIZE	+ SIZE
1   277								 ENDM	 FUNC_ALLOC
1   278
1   279								 MACRO	 $FUNC NAME
1   280					 &NAME&_FUNC		 =	 FUNC_AREA_SIZE
1   281								 FUNC_ALLOC  1
1   282								 ENDM	 $FUNC
1   283
1   284								 MACRO	 FUNC_ALIGN
1   285					 FUNC_AREA_SIZE		 =	 ( FUNC_AREA_SIZE / CELL_SIZE +	1 ) * CELL_SIZE
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 6
meta.asm



1   286								 ENDM	 FUNC_ALIGN
1   287
1   288								 MACRO	 $CALL NAME
1   289								 PUSHRS	 EDI
1   290								 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
1   291								 ADD	 EBX,&NAME * CELL_SIZE
1   292								 MOV	 EBX,[DWORD PTR	EBX]
1   293								 CALL	 EBX
1   294								 POPRS	 EDI
1   295								 ENDM	 $CALL
1   296
1   297								 $FUNC	 GET_LAST_ERROR
1   298								 $FUNC	 LOAD_LIBRARY
1   299								 $FUNC	 FREE_LIBRARY
1   300								 $FUNC	 GET_PROC_ADDRESS
1   301								 $FUNC	 BYE
1   302								 $FUNC	 EMIT
1   303								 $FUNC	 TYPE
1   304								 $FUNC	 ACCEPT
1   305								 $FUNC	 READ_BLOCK
1   306								 $FUNC	 WRITE_BLOCK
1   307								 $FUNC	 FILE_CLOSE
1   308								 $FUNC	 FILE_CREATE
1   309								 $FUNC	 FILE_POSITION
1   310								 $FUNC	 FILE_OPEN
1   311								 $FUNC	 FILE_READ
1   312								 $FUNC	 FILE_REPOSITION
1   313								 $FUNC	 FILE_WRITE
1   314								 $FUNC	 FILE_READ_LINE
1   315								 $FUNC	 FILE_RESIZE
1   316								 $FUNC	 AT_XY
1   317								 $FUNC	 START_THREAD
1   318								 $FUNC	 COMPARE
1   319								 $FUNC	 PAGE
1   320
    321
    322					 ;******************************************************************************
    323					 ;  Include user area variables. These variables are unique to any thread.
    324					 ;******************************************************************************
    325								 INCLUDE "user.inc"
1   326					 ;******************************************************************************
1   327					 ;
1   328					 ;  user.inc
1   329					 ;  IKForth
1   330					 ;
1   331					 ;  Copyright (C) 1999-2001 Illya Kysil
1   332					 ;
1   333					 ;******************************************************************************
1   334					 ;
1   335					 ;******************************************************************************
1   336
1   337		  =0000			 USER_AREA_SIZE		 =	 0
1   338								 MACRO	 _ALLOC	SIZE
1   339					 USER_AREA_SIZE		 =	 USER_AREA_SIZE	+ SIZE
1   340								 ENDM	 _ALLOC
1   341
1   342								 MACRO	 _VAR  NAME,SIZE
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 7
meta.asm



1   343					 &NAME&_VAR		 =	 USER_AREA_SIZE
1   344								 IFNB	 <SIZE>
1   345								   _ALLOC  SIZE
1   346								 ELSE
1   347								   _ALLOC  CELL_SIZE
1   348								 ENDIF
1   349								 ENDM	 _VAR
1   350
1   351								 MACRO	 _ALIGN
1   352					 USER_AREA_SIZE		 =	 ( USER_AREA_SIZE / CELL_SIZE +	1 ) * CELL_SIZE
1   353								 ENDM	 _ALIGN
1   354
1   355								 _VAR	 RETURN_ADDR
1   356								 _VAR	 EDI
1   357								 _VAR	 ESI
1   358								 _VAR	 EBP
1   359								 _VAR	 EBX
1   360								 _VAR	 ESP
1   361								 _VAR	 STATE
1   362								 _VAR	 BASE
1   363								 _VAR	 TOIN
1   364								 _VAR	 SOURCE_ID
1   365								 _VAR	 CASE_SENSITIVE
1   366								 _VAR	 TONUMBER_SIGNED
1   367								 _VAR	 #EVAL
1   368								 _VAR	 EVAL
1   369
1   370								 _VAR	 CURR_FILE_POS
1   371								 _ALLOC	 CELL_SIZE
1   372
1   373		  = 128			 MAX_LINE_LENGTH	 EQU	 128
1   374								 _VAR	 #LINE
1   375								 _VAR	 LINE,<MAX_LINE_LENGTH + 1>
1   376
1   377		  = 128			 MAX_TIB_LENGTH		 EQU	 128
1   378								 _VAR	 #TIB
1   379								 _VAR	 TIB,<MAX_TIB_LENGTH + 1>
1   380
1   381								 _VAR	 CURRENT
1   382
1   383								 _VAR	 BLK
1   384
1   385								 _VAR	 BLOCK_NUM
1   386								 _VAR	 BLOCK_UPDATED
1   387								 _VAR	 BLOCK,<1024 + 1>
1   388
1   389								 _VAR	 EXCEPTION_HANDLER
1   390								 _VAR	 THROW_ADDRESS
1   391								 _VAR	 THROW_WORD
1   392
1   393								 _VAR	 SQUOTE_BUFFER,1024
1   394
1   395								 _VAR	 POCKET,256
1   396
1   397								 _ALIGN
1   398
1   399								 _ALLOC	 RETURN_STACK_SIZE
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 8
meta.asm



1   400								 _VAR	 RSTACK
1   401
    402
    403					 ;******************************************************************************
    404					 ;  Include core Forth definitions.
    405					 ;******************************************************************************
    406	0000002C  02*(87 DB)					 ALIGN	 16
    407
    408								 INCLUDE "words.inc"
1   409					 ;******************************************************************************
1   410					 ;
1   411					 ;  words.inc
1   412					 ;  IKForth
1   413					 ;
1   414					 ;  Copyright (C) 1999-2001 Illya Kysil
1   415					 ;
1   416					 ;******************************************************************************
1   417
1   418								 INCLUDE "primitives.inc"
2   419					 ;******************************************************************************
2   420					 ;
2   421					 ;  primitives.inc
2   422					 ;  IKForth
2   423					 ;
2   424					 ;  Copyright (C) 1999-2001 Illya Kysil
2   425					 ;
2   426					 ;******************************************************************************
2   427					 ;  Primitives
2   428					 ;******************************************************************************
2   429
2   430					 ;  ?BRANCH
2   431					 ;  Branch to address compiled next if flag on stack is	zero
2   432					 ;  D: flag --
2   433								 $DEF	 '?BRANCH',$QBRANCH
3   434	00000030			 ??0000:
3   435	00000030  00						   DB	 VEF_USUAL
3   436	00000031  07						 DB	 ??0001	- $ - 1
3   437	00000032  3F 42	52 41 4E 43 48				 DB	 '?BRANCH'
3   438	00000039			 ??0001:
3   439	00000039  09						 DB	 ??0001	- ??0000
3   440	0000003A  00000000					 DD	 VOC_LINK
3   441	0000003E						   LABEL   $QBRANCH FAR
3   442	0000003E  20000042					   DD	   ??0003 + DESIRED_BASE_EQU
3   443	00000042			 ??0003:
2   444								 POPDS	 EAX
3   445	00000042  58						 POP	 EAX
2   446	00000043  0B C0						 OR	 EAX,EAX
2   447	00000045  AD						 LODSD
2   448	00000046  75 02						 JNZ	 SHORT NOQBRANCH
2   449	00000048  8B F0						 MOV	 ESI,EAX
2   450	0000004A			 NOQBRANCH:
2   451								 $NEXT
3   452	0000004A  AD						 LODSD				 ; fetch address
4   453	0000004B  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4   454	0000004D  FF E3						 JMP	 EBX			 ; execute
2   455
2   456					 ;  BRANCH
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 9
meta.asm



2   457					 ;  Branch to address compiled next
2   458								 $DEF	 'BRANCH',$BRANCH
3   459	0000004F			 ??0004:
3   460	0000004F  00						   DB	 VEF_USUAL
3   461	00000050  06						 DB	 ??0005	- $ - 1
3   462	00000051  42 52	41 4E 43 48				 DB	 'BRANCH'
3   463	00000057			 ??0005:
3   464	00000057  08						 DB	 ??0005	- ??0004
3   465	00000058  20000030					 DD	 VOC_LINK
3   466	0000005C						   LABEL   $BRANCH FAR
3   467	0000005C  20000060					   DD	   ??0007 + DESIRED_BASE_EQU
3   468	00000060			 ??0007:
2   469	00000060  AD						 LODSD
2   470	00000061  8B F0						 MOV	 ESI,EAX
2   471								 $NEXT
3   472	00000063  AD						 LODSD				 ; fetch address
4   473	00000064  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4   474	00000066  FF E3						 JMP	 EBX			 ; execute
2   475
2   476					 ;  LIT
2   477					 ;  Compiled by	LITERAL
2   478								 $DEF	 'LIT',$LIT
3   479	00000068			 ??0008:
3   480	00000068  00						   DB	 VEF_USUAL
3   481	00000069  03						 DB	 ??0009	- $ - 1
3   482	0000006A  4C 49	54					 DB	 'LIT'
3   483	0000006D			 ??0009:
3   484	0000006D  05						 DB	 ??0009	- ??0008
3   485	0000006E  2000004F					 DD	 VOC_LINK
3   486	00000072						   LABEL   $LIT	FAR
3   487	00000072  20000076					   DD	   ??000B + DESIRED_BASE_EQU
3   488	00000076			 ??000B:
2   489	00000076  AD						 LODSD
2   490								 PUSHDS	 EAX
3   491	00000077  50						 PUSH	 EAX
2   492								 $NEXT
3   493	00000078  AD						 LODSD				 ; fetch address
4   494	00000079  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4   495	0000007B  FF E3						 JMP	 EBX			 ; execute
2   496
2   497					 ;  2LIT
2   498					 ;  Compiled by	2LITERAL
2   499								 $DEF	 '2LIT',$2LIT
3   500	0000007D			 ??000C:
3   501	0000007D  00						   DB	 VEF_USUAL
3   502	0000007E  04						 DB	 ??000D	- $ - 1
3   503	0000007F  32 4C	49 54					 DB	 '2LIT'
3   504	00000083			 ??000D:
3   505	00000083  06						 DB	 ??000D	- ??000C
3   506	00000084  20000068					 DD	 VOC_LINK
3   507	00000088						   LABEL   $2LIT FAR
3   508	00000088  2000008C					   DD	   ??000F + DESIRED_BASE_EQU
3   509	0000008C			 ??000F:
2   510	0000008C  AD						 LODSD
2   511								 PUSHDS	 EAX
3   512	0000008D  50						 PUSH	 EAX
2   513	0000008E  AD						 LODSD
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 10
meta.asm



2   514								 PUSHDS	 EAX
3   515	0000008F  50						 PUSH	 EAX
2   516								 $NEXT
3   517	00000090  AD						 LODSD				 ; fetch address
4   518	00000091  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4   519	00000093  FF E3						 JMP	 EBX			 ; execute
2   520
2   521					 ;  (DO-VARIABLE)
2   522								 $DEF	 '(DO-VARIABLE)',,$DOVAR
3   523	00000095			 ??0010:
3   524	00000095  00						   DB	 VEF_USUAL
3   525	00000096  0D						 DB	 ??0011	- $ - 1
3   526	00000097  28 44	4F 2D 56 41 52+				 DB	 '(DO-VARIABLE)'
    527		  49 41	42 4C 45 29
3   528	000000A4			 ??0011:
3   529	000000A4  0F						 DB	 ??0011	- ??0010
3   530	000000A5  2000007D					 DD	 VOC_LINK
3   531	000000A9  200000AD					   DD	   $DOVAR + DESIRED_BASE_EQU
3   532	000000AD			 ??0013:
2   533	000000AD						 LABEL	 $DOVAR	FAR
2   534	000000AD  83 C0	04					 ADD	 EAX,CELL_SIZE
2   535								 PUSHDS	 EAX
3   536	000000B0  50						 PUSH	 EAX
2   537								 $NEXT
3   538	000000B1  AD						 LODSD				 ; fetch address
4   539	000000B2  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4   540	000000B4  FF E3						 JMP	 EBX			 ; execute
2   541
2   542					 ;  (DO-:)
2   543								 $DEF	 '(DO-:)',,$DOVAR
3   544	000000B6			 ??0014:
3   545	000000B6  00						   DB	 VEF_USUAL
3   546	000000B7  06						 DB	 ??0015	- $ - 1
3   547	000000B8  28 44	4F 2D 3A 29				 DB	 '(DO-:)'
3   548	000000BE			 ??0015:
3   549	000000BE  08						 DB	 ??0015	- ??0014
3   550	000000BF  20000095					 DD	 VOC_LINK
3   551	000000C3  200000AD					   DD	   $DOVAR + DESIRED_BASE_EQU
3   552	000000C7			 ??0017:
2   553	000000C7						 LABEL	 $ENTER	FAR
2   554								 PUSHRS	 ESI			 ; push	current	IP on return stack
3   555	000000C7  83 ED	04					 SUB	 EBP,CELL_SIZE
3   556	000000CA  89 75	00					 MOV	 [DWORD	PTR EBP],ESI
2   557	000000CD  83 C0	04					 ADD	 EAX,CELL_SIZE
2   558	000000D0  8B F0						 MOV	 ESI,EAX
2   559								 $NEXT				 ; fetch next word address and	    +
    560					 execute it
3   561	000000D2  AD						 LODSD				 ; fetch address
4   562	000000D3  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4   563	000000D5  FF E3						 JMP	 EBX			 ; execute
2   564
2   565					 ;  (DO-CREATE)
2   566								 $DEF	 '(DO-CREATE)',,$DOVAR
3   567	000000D7			 ??0018:
3   568	000000D7  00						   DB	 VEF_USUAL
3   569	000000D8  0B						 DB	 ??0019	- $ - 1
3   570	000000D9  28 44	4F 2D 43 52 45+				 DB	 '(DO-CREATE)'
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 11
meta.asm



    571		  41 54	45 29
3   572	000000E4			 ??0019:
3   573	000000E4  0D						 DB	 ??0019	- ??0018
3   574	000000E5  200000B6					 DD	 VOC_LINK
3   575	000000E9  200000AD					   DD	   $DOVAR + DESIRED_BASE_EQU
3   576	000000ED			 ??001B:
2   577	000000ED  83 C0	04					 ADD	 EAX,CELL_SIZE
2   578								 PUSHDS	 EAX
3   579	000000F0  50						 PUSH	 EAX
2   580								 $NEXT
3   581	000000F1  AD						 LODSD				 ; fetch address
4   582	000000F2  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4   583	000000F4  FF E3						 JMP	 EBX			 ; execute
2   584
2   585					 ;  (DO-CONSTANT)
2   586								 $DEF	 '(DO-CONSTANT)',,$DOVAR
3   587	000000F6			 ??001C:
3   588	000000F6  00						   DB	 VEF_USUAL
3   589	000000F7  0D						 DB	 ??001D	- $ - 1
3   590	000000F8  28 44	4F 2D 43 4F 4E+				 DB	 '(DO-CONSTANT)'
    591		  53 54	41 4E 54 29
3   592	00000105			 ??001D:
3   593	00000105  0F						 DB	 ??001D	- ??001C
3   594	00000106  200000D7					 DD	 VOC_LINK
3   595	0000010A  200000AD					   DD	   $DOVAR + DESIRED_BASE_EQU
3   596	0000010E			 ??001F:
2   597	0000010E						 LABEL	 $DOCONST FAR
2   598								 PUSHDS	 <[DWORD PTR EAX + CELL_SIZE]>
3   599	0000010E  FF 70	04					 PUSH	 [DWORD	PTR EAX	+ CELL_SIZE]
2   600								 $NEXT
3   601	00000111  AD						 LODSD				 ; fetch address
4   602	00000112  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4   603	00000114  FF E3						 JMP	 EBX			 ; execute
2   604
2   605					 ;  (DO-USER)
2   606								 $DEF	 '(DO-USER)',,$DOVAR
3   607	00000116			 ??0020:
3   608	00000116  00						   DB	 VEF_USUAL
3   609	00000117  09						 DB	 ??0021	- $ - 1
3   610	00000118  28 44	4F 2D 55 53 45+				 DB	 '(DO-USER)'
    611		  52 29
3   612	00000121			 ??0021:
3   613	00000121  0B						 DB	 ??0021	- ??0020
3   614	00000122  200000F6					 DD	 VOC_LINK
3   615	00000126  200000AD					   DD	   $DOVAR + DESIRED_BASE_EQU
3   616	0000012A			 ??0023:
2   617	0000012A						 LABEL	 $DOUSER FAR
2   618	0000012A  8B 58	04					 MOV	 EBX,[DWORD PTR	EAX + CELL_SIZE]
2   619	0000012D  03 DF						 ADD	 EBX,EDI
2   620								 PUSHDS	 EBX
3   621	0000012F  53						 PUSH	 EBX
2   622								 $NEXT
3   623	00000130  AD						 LODSD				 ; fetch address
4   624	00000131  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4   625	00000133  FF E3						 JMP	 EBX			 ; execute
2   626
2   627					 ;  (DO-DEFER)
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 12
meta.asm



2   628								 $DEF	 '(DO-DEFER)',,$DOVAR
3   629	00000135			 ??0024:
3   630	00000135  00						   DB	 VEF_USUAL
3   631	00000136  0A						 DB	 ??0025	- $ - 1
3   632	00000137  28 44	4F 2D 44 45 46+				 DB	 '(DO-DEFER)'
    633		  45 52	29
3   634	00000141			 ??0025:
3   635	00000141  0C						 DB	 ??0025	- ??0024
3   636	00000142  20000116					 DD	 VOC_LINK
3   637	00000146  200000AD					   DD	   $DOVAR + DESIRED_BASE_EQU
3   638	0000014A			 ??0027:
2   639	0000014A						 LABEL	 $DODEFER FAR
2   640	0000014A  8B 40	04					 MOV	 EAX,[DWORD PTR	EAX + CELL_SIZE]
2   641								 $JMP
3   642	0000014D  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
3   643	0000014F  FF E3						 JMP	 EBX			 ; execute
2   644
2   645					 ;  (DO-INT/COMP)
2   646								 $DEF	 '(DO-INT/COMP)',,$DOVAR
3   647	00000151			 ??0028:
3   648	00000151  00						   DB	 VEF_USUAL
3   649	00000152  0D						 DB	 ??0029	- $ - 1
3   650	00000153  28 44	4F 2D 49 4E 54+				 DB	 '(DO-INT/COMP)'
    651		  2F 43	4F 4D 50 29
3   652	00000160			 ??0029:
3   653	00000160  0F						 DB	 ??0029	- ??0028
3   654	00000161  20000135					 DD	 VOC_LINK
3   655	00000165  200000AD					   DD	   $DOVAR + DESIRED_BASE_EQU
3   656	00000169			 ??002B:
2   657	00000169						 LABEL	 $PDO_INT_COMP FAR
2   658	00000169  83 C0	04					 ADD	 EAX,CELL_SIZE
2   659	0000016C  83 7F	18 00					 CMP	 [DWORD	PTR EDI	+ STATE_VAR],FALSE
2   660	00000170  74 07	90 90 90 90				 JZ	 PDIC_INT
2   661	00000176  83 C0	04					 ADD	 EAX,CELL_SIZE
2   662	00000179			 PDIC_INT:
2   663	00000179  8B 00						 MOV	 EAX,[DWORD PTR	EAX]
2   664								 $JMP
3   665	0000017B  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
3   666	0000017D  FF E3						 JMP	 EBX			 ; execute
2   667
1   668								 INCLUDE "varconst.inc"
2   669					 ;******************************************************************************
2   670					 ;
2   671					 ;  varconst.inc
2   672					 ;  IKForth
2   673					 ;
2   674					 ;  Copyright (C) 1999-2001 Illya Kysil
2   675					 ;
2   676					 ;******************************************************************************
2   677					 ;  Variables &	constants
2   678					 ;******************************************************************************
2   679
2   680					 ;  D: -- 0
2   681								 $CONST	 '0',$ZERO
4   682	0000017F			 ??002C:
4   683	0000017F  00						   DB	 VEF_USUAL
4   684	00000180  01						 DB	 ??002D	- $ - 1
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 13
meta.asm



4   685	00000181  30						 DB	 '0'
4   686	00000182			 ??002D:
4   687	00000182  03						 DB	 ??002D	- ??002C
4   688	00000183  20000151					 DD	 VOC_LINK
4   689	00000187						   LABEL   $ZERO FAR
4   690	00000187  2000010E					   DD	   $DOCONST + DESIRED_BASE_EQU
4   691	0000018B			 ??002F:
2   692								 CC	 0
3   693	0000018B  00000000					 DD	 0
2   694
2   695					 ;  CASE-SENSITIVE
2   696					 ;  If CASE-SENSITIVE is true, then FIND is case sensitive
2   697								 $USER	 'CASE-SENSITIVE',$CASE_SENSITIVE
4   698	0000018F			 ??0030:
4   699	0000018F  00						   DB	 VEF_USUAL
4   700	00000190  0E						 DB	 ??0031	- $ - 1
4   701	00000191  43 41	53 45 2D 53 45+				 DB	 'CASE-SENSITIVE'
    702		  4E 53	49 54 49 56 45
4   703	0000019F			 ??0031:
4   704	0000019F  10						 DB	 ??0031	- ??0030
4   705	000001A0  2000017F					 DD	 VOC_LINK
4   706	000001A4						   LABEL   $CASE_SENSITIVE FAR
4   707	000001A4  2000012A					   DD	   $DOUSER + DESIRED_BASE_EQU
4   708	000001A8			 ??0033:
2   709								 CC	 CASE_SENSITIVE_VAR
3   710	000001A8  00000028					 DD	 CASE_SENSITIVE_VAR
2   711
2   712					 ;  TIB
2   713					 ;  String address of Terminal Input Buffer
2   714								 $USER	 'TIB',$TIB
4   715	000001AC			 ??0034:
4   716	000001AC  00						   DB	 VEF_USUAL
4   717	000001AD  03						 DB	 ??0035	- $ - 1
4   718	000001AE  54 49	42					 DB	 'TIB'
4   719	000001B1			 ??0035:
4   720	000001B1  05						 DB	 ??0035	- ??0034
4   721	000001B2  2000018F					 DD	 VOC_LINK
4   722	000001B6						   LABEL   $TIB	FAR
4   723	000001B6  2000012A					   DD	   $DOUSER + DESIRED_BASE_EQU
4   724	000001BA			 ??0037:
2   725								 CC	 TIB_VAR
3   726	000001BA  000000C8					 DD	 TIB_VAR
2   727
2   728					 ;  #TIB
2   729					 ;  String length of Terminal Input Buffer
2   730								 $USER	 '#TIB',$#TIB
4   731	000001BE			 ??0038:
4   732	000001BE  00						   DB	 VEF_USUAL
4   733	000001BF  04						 DB	 ??0039	- $ - 1
4   734	000001C0  23 54	49 42					 DB	 '#TIB'
4   735	000001C4			 ??0039:
4   736	000001C4  06						 DB	 ??0039	- ??0038
4   737	000001C5  200001AC					 DD	 VOC_LINK
4   738	000001C9						   LABEL   $#TIB FAR
4   739	000001C9  2000012A					   DD	   $DOUSER + DESIRED_BASE_EQU
4   740	000001CD			 ??003B:
2   741								 CC	 #TIB_VAR
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 14
meta.asm



3   742	000001CD  000000C4					 DD	 #TIB_VAR
2   743
2   744					 ;  EVAL
2   745					 ;  String address for EVALUATE
2   746								 $USER	 'EVAL',$EVAL
4   747	000001D1			 ??003C:
4   748	000001D1  00						   DB	 VEF_USUAL
4   749	000001D2  04						 DB	 ??003D	- $ - 1
4   750	000001D3  45 56	41 4C					 DB	 'EVAL'
4   751	000001D7			 ??003D:
4   752	000001D7  06						 DB	 ??003D	- ??003C
4   753	000001D8  200001BE					 DD	 VOC_LINK
4   754	000001DC						   LABEL   $EVAL FAR
4   755	000001DC  2000012A					   DD	   $DOUSER + DESIRED_BASE_EQU
4   756	000001E0			 ??003F:
2   757								 CC	 EVAL_VAR
3   758	000001E0  00000034					 DD	 EVAL_VAR
2   759
2   760					 ;  #EVAL
2   761					 ;  String length for EVALUATE
2   762								 $USER	 '#EVAL',$#EVAL
4   763	000001E4			 ??0040:
4   764	000001E4  00						   DB	 VEF_USUAL
4   765	000001E5  05						 DB	 ??0041	- $ - 1
4   766	000001E6  23 45	56 41 4C				 DB	 '#EVAL'
4   767	000001EB			 ??0041:
4   768	000001EB  07						 DB	 ??0041	- ??0040
4   769	000001EC  200001D1					 DD	 VOC_LINK
4   770	000001F0						   LABEL   $#EVAL FAR
4   771	000001F0  2000012A					   DD	   $DOUSER + DESIRED_BASE_EQU
4   772	000001F4			 ??0043:
2   773								 CC	 #EVAL_VAR
3   774	000001F4  00000030					 DD	 #EVAL_VAR
2   775
2   776					 ;  CURRENT-FILE-POSITION
2   777								 $USER	 'CURRENT-FILE-POSITION',$CURRENT_FILE_POSITION
4   778	000001F8			 ??0044:
4   779	000001F8  00						   DB	 VEF_USUAL
4   780	000001F9  15						 DB	 ??0045	- $ - 1
4   781	000001FA  43 55	52 52 45 4E 54+				 DB	 'CURRENT-FILE-POSITION'
    782		  2D 46	49 4C 45 2D 50+
    783		  4F 53	49 54 49 4F 4E
4   784	0000020F			 ??0045:
4   785	0000020F  17						 DB	 ??0045	- ??0044
4   786	00000210  200001E4					 DD	 VOC_LINK
4   787	00000214						   LABEL   $CURRENT_FILE_POSITION FAR
4   788	00000214  2000012A					   DD	   $DOUSER + DESIRED_BASE_EQU
4   789	00000218			 ??0047:
2   790								 CC	 CURR_FILE_POS_VAR
3   791	00000218  00000038					 DD	 CURR_FILE_POS_VAR
2   792
2   793					 ;  LINE
2   794					 ;  Line address for INCLUDED
2   795								 $USER	 'LINE',$LINE
4   796	0000021C			 ??0048:
4   797	0000021C  00						   DB	 VEF_USUAL
4   798	0000021D  04						 DB	 ??0049	- $ - 1
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 15
meta.asm



4   799	0000021E  4C 49	4E 45					 DB	 'LINE'
4   800	00000222			 ??0049:
4   801	00000222  06						 DB	 ??0049	- ??0048
4   802	00000223  200001F8					 DD	 VOC_LINK
4   803	00000227						   LABEL   $LINE FAR
4   804	00000227  2000012A					   DD	   $DOUSER + DESIRED_BASE_EQU
4   805	0000022B			 ??004B:
2   806								 CC	 LINE_VAR
3   807	0000022B  00000044					 DD	 LINE_VAR
2   808
2   809					 ;  #LINE
2   810					 ;  Line length	for INCLUDED
2   811								 $USER	 '#LINE',$#LINE
4   812	0000022F			 ??004C:
4   813	0000022F  00						   DB	 VEF_USUAL
4   814	00000230  05						 DB	 ??004D	- $ - 1
4   815	00000231  23 4C	49 4E 45				 DB	 '#LINE'
4   816	00000236			 ??004D:
4   817	00000236  07						 DB	 ??004D	- ??004C
4   818	00000237  2000021C					 DD	 VOC_LINK
4   819	0000023B						   LABEL   $#LINE FAR
4   820	0000023B  2000012A					   DD	   $DOUSER + DESIRED_BASE_EQU
4   821	0000023F			 ??004F:
2   822								 CC	 #LINE_VAR
3   823	0000023F  00000040					 DD	 #LINE_VAR
2   824
2   825					 ;  USER-SIZE-VAR
2   826								 $VAR	 'USER-SIZE-VAR'
4   827	00000243			 ??0050:
4   828	00000243  00						   DB	 VEF_USUAL
4   829	00000244  0D						 DB	 ??0051	- $ - 1
4   830	00000245  55 53	45 52 2D 53 49+				 DB	 'USER-SIZE-VAR'
    831		  5A 45	2D 56 41 52
4   832	00000252			 ??0051:
4   833	00000252  0F						 DB	 ??0051	- ??0050
4   834	00000253  2000022F					 DD	 VOC_LINK
4   835	00000257  200000AD					   DD	   $DOVAR + DESIRED_BASE_EQU
4   836	0000025B			 ??0053:
2   837								 CC	 USER_AREA_SIZE
3   838	0000025B  00001A6C					 DD	 USER_AREA_SIZE
2   839
2   840					 ;  EXCEPTION-HANDLER
2   841								 $USER	 'EXCEPTION-HANDLER',$EXCEPTION_HANDLER
4   842	0000025F			 ??0054:
4   843	0000025F  00						   DB	 VEF_USUAL
4   844	00000260  11						 DB	 ??0055	- $ - 1
4   845	00000261  45 58	43 45 50 54 49+				 DB	 'EXCEPTION-HANDLER'
    846		  4F 4E	2D 48 41 4E 44+
    847		  4C 45	52
4   848	00000272			 ??0055:
4   849	00000272  13						 DB	 ??0055	- ??0054
4   850	00000273  20000243					 DD	 VOC_LINK
4   851	00000277						   LABEL   $EXCEPTION_HANDLER FAR
4   852	00000277  2000012A					   DD	   $DOUSER + DESIRED_BASE_EQU
4   853	0000027B			 ??0057:
2   854								 CC	 EXCEPTION_HANDLER_VAR
3   855	0000027B  00000558					 DD	 EXCEPTION_HANDLER_VAR
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 16
meta.asm



2   856
2   857					 ;  THROW-ADDRESS
2   858								 $USER	 'THROW-ADDRESS',$THROW_ADDRESS
4   859	0000027F			 ??0058:
4   860	0000027F  00						   DB	 VEF_USUAL
4   861	00000280  0D						 DB	 ??0059	- $ - 1
4   862	00000281  54 48	52 4F 57 2D 41+				 DB	 'THROW-ADDRESS'
    863		  44 44	52 45 53 53
4   864	0000028E			 ??0059:
4   865	0000028E  0F						 DB	 ??0059	- ??0058
4   866	0000028F  2000025F					 DD	 VOC_LINK
4   867	00000293						   LABEL   $THROW_ADDRESS FAR
4   868	00000293  2000012A					   DD	   $DOUSER + DESIRED_BASE_EQU
4   869	00000297			 ??005B:
2   870								 CC	 THROW_ADDRESS_VAR
3   871	00000297  0000055C					 DD	 THROW_ADDRESS_VAR
2   872
2   873					 ;  THROW-WORD
2   874								 $USER	 'THROW-WORD',$THROW_WORD
4   875	0000029B			 ??005C:
4   876	0000029B  00						   DB	 VEF_USUAL
4   877	0000029C  0A						 DB	 ??005D	- $ - 1
4   878	0000029D  54 48	52 4F 57 2D 57+				 DB	 'THROW-WORD'
    879		  4F 52	44
4   880	000002A7			 ??005D:
4   881	000002A7  0C						 DB	 ??005D	- ??005C
4   882	000002A8  2000027F					 DD	 VOC_LINK
4   883	000002AC						   LABEL   $THROW_WORD FAR
4   884	000002AC  2000012A					   DD	   $DOUSER + DESIRED_BASE_EQU
4   885	000002B0			 ??005F:
2   886								 CC	 THROW_WORD_VAR
3   887	000002B0  00000560					 DD	 THROW_WORD_VAR
2   888
2   889					 ;  S"-BUFFER
2   890								 $USER	 'S"-BUFFER',$SQUOTE_BUFFER
4   891	000002B4			 ??0060:
4   892	000002B4  00						   DB	 VEF_USUAL
4   893	000002B5  09						 DB	 ??0061	- $ - 1
4   894	000002B6  53 22	2D 42 55 46 46+				 DB	 'S"-BUFFER'
    895		  45 52
4   896	000002BF			 ??0061:
4   897	000002BF  0B						 DB	 ??0061	- ??0060
4   898	000002C0  2000029B					 DD	 VOC_LINK
4   899	000002C4						   LABEL   $SQUOTE_BUFFER FAR
4   900	000002C4  2000012A					   DD	   $DOUSER + DESIRED_BASE_EQU
4   901	000002C8			 ??0063:
2   902								 CC	 SQUOTE_BUFFER_VAR
3   903	000002C8  00000564					 DD	 SQUOTE_BUFFER_VAR
2   904
2   905					 ;  POCKET
2   906								 $USER	 'POCKET',$POCKET
4   907	000002CC			 ??0064:
4   908	000002CC  00						   DB	 VEF_USUAL
4   909	000002CD  06						 DB	 ??0065	- $ - 1
4   910	000002CE  50 4F	43 4B 45 54				 DB	 'POCKET'
4   911	000002D4			 ??0065:
4   912	000002D4  08						 DB	 ??0065	- ??0064
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 17
meta.asm



4   913	000002D5  200002B4					 DD	 VOC_LINK
4   914	000002D9						   LABEL   $POCKET FAR
4   915	000002D9  2000012A					   DD	   $DOUSER + DESIRED_BASE_EQU
4   916	000002DD			 ??0067:
2   917								 CC	 POCKET_VAR
3   918	000002DD  00000964					 DD	 POCKET_VAR
2   919
2   920					 ;  CURRENT
2   921								 $USER	 'CURRENT',$CURRENT
4   922	000002E1			 ??0068:
4   923	000002E1  00						   DB	 VEF_USUAL
4   924	000002E2  07						 DB	 ??0069	- $ - 1
4   925	000002E3  43 55	52 52 45 4E 54				 DB	 'CURRENT'
4   926	000002EA			 ??0069:
4   927	000002EA  09						 DB	 ??0069	- ??0068
4   928	000002EB  200002CC					 DD	 VOC_LINK
4   929	000002EF						   LABEL   $CURRENT FAR
4   930	000002EF  2000012A					   DD	   $DOUSER + DESIRED_BASE_EQU
4   931	000002F3			 ??006B:
2   932								 CC	 CURRENT_VAR
3   933	000002F3  00000148					 DD	 CURRENT_VAR
2   934
2   935					 ;  Start file name
2   936					 ;  #SF
2   937								 $VAR	 '#SF',$#SF
4   938	000002F7			 ??006C:
4   939	000002F7  00						   DB	 VEF_USUAL
4   940	000002F8  03						 DB	 ??006D	- $ - 1
4   941	000002F9  23 53	46					 DB	 '#SF'
4   942	000002FC			 ??006D:
4   943	000002FC  05						 DB	 ??006D	- ??006C
4   944	000002FD  200002E1					 DD	 VOC_LINK
4   945	00000301						   LABEL   $#SF	FAR
4   946	00000301  200000AD					   DD	   $DOVAR + DESIRED_BASE_EQU
4   947	00000305			 ??006F:
2   948	00000305			 #SF_VAR:
2   949								 CC	 0
3   950	00000305  00000000					 DD	 0
2   951
2   952					 ;  SF
2   953								 $VAR	 'SF',$SF
4   954	00000309			 ??0070:
4   955	00000309  00						   DB	 VEF_USUAL
4   956	0000030A  02						 DB	 ??0071	- $ - 1
4   957	0000030B  53 46						 DB	 'SF'
4   958	0000030D			 ??0071:
4   959	0000030D  04						 DB	 ??0071	- ??0070
4   960	0000030E  200002F7					 DD	 VOC_LINK
4   961	00000312						   LABEL   $SF FAR
4   962	00000312  200000AD					   DD	   $DOVAR + DESIRED_BASE_EQU
4   963	00000316			 ??0073:
2   964	00000316			 SF_VAR:
2   965								 CC	 0
3   966	00000316  00000000					 DD	 0
2   967
2   968					 ;  DATA-AREA-BASE
2   969								 $CONST	 'DATA-AREA-BASE'
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 18
meta.asm



4   970	0000031A			 ??0074:
4   971	0000031A  00						   DB	 VEF_USUAL
4   972	0000031B  0E						 DB	 ??0075	- $ - 1
4   973	0000031C  44 41	54 41 2D 41 52+				 DB	 'DATA-AREA-BASE'
    974		  45 41	2D 42 41 53 45
4   975	0000032A			 ??0075:
4   976	0000032A  10						 DB	 ??0075	- ??0074
4   977	0000032B  20000309					 DD	 VOC_LINK
4   978	0000032F  2000010E					   DD	   $DOCONST + DESIRED_BASE_EQU
4   979	00000333			 ??0077:
2   980								 CC	 DESIRED_BASE_EQU
3   981	00000333  20000000					 DD	 DESIRED_BASE_EQU
2   982
2   983					 ;  DATA-AREA-SIZE
2   984								 $CONST	 'DATA-AREA-SIZE'
4   985	00000337			 ??0078:
4   986	00000337  00						   DB	 VEF_USUAL
4   987	00000338  0E						 DB	 ??0079	- $ - 1
4   988	00000339  44 41	54 41 2D 41 52+				 DB	 'DATA-AREA-SIZE'
    989		  45 41	2D 53 49 5A 45
4   990	00000347			 ??0079:
4   991	00000347  10						 DB	 ??0079	- ??0078
4   992	00000348  2000031A					 DD	 VOC_LINK
4   993	0000034C  2000010E					   DD	   $DOCONST + DESIRED_BASE_EQU
4   994	00000350			 ??007B:
2   995								 CW	 DESIRED_SIZE_VAR
3   996	00000350  20000014					 DD	 DESIRED_SIZE_VAR + DESIRED_BASE_EQU
2   997
2   998					 ;  DP
2   999					 ;  HERE = DP @
2  1000								 $VAR	 'DP',$DP
4  1001	00000354			 ??007C:
4  1002	00000354  00						   DB	 VEF_USUAL
4  1003	00000355  02						 DB	 ??007D	- $ - 1
4  1004	00000356  44 50						 DB	 'DP'
4  1005	00000358			 ??007D:
4  1006	00000358  04						 DB	 ??007D	- ??007C
4  1007	00000359  20000337					 DD	 VOC_LINK
4  1008	0000035D						   LABEL   $DP FAR
4  1009	0000035D  200000AD					   DD	   $DOVAR + DESIRED_BASE_EQU
4  1010	00000361			 ??007F:
2  1011	00000361			 DP_VAR:
2  1012								 CW	 HERE
3  1013	00000361  200028B0					 DD	 HERE +	DESIRED_BASE_EQU
2  1014
2  1015					 ;  6.1.2250 STATE
2  1016					 ;  D: -- a-addr
2  1017					 ;  a-addr is the address of a cell containing the compilation-state flag.
2  1018					 ;  STATE is true when in compilation state, false otherwise.
2  1019					 ;  The	true value in STATE is non-zero, but is	otherwise implementation-defined.
2  1020								 $USER	 'STATE',$STATE
4  1021	00000365			 ??0080:
4  1022	00000365  00						   DB	 VEF_USUAL
4  1023	00000366  05						 DB	 ??0081	- $ - 1
4  1024	00000367  53 54	41 54 45				 DB	 'STATE'
4  1025	0000036C			 ??0081:
4  1026	0000036C  07						 DB	 ??0081	- ??0080
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 19
meta.asm



4  1027	0000036D  20000354					 DD	 VOC_LINK
4  1028	00000371						   LABEL   $STATE FAR
4  1029	00000371  2000012A					   DD	   $DOUSER + DESIRED_BASE_EQU
4  1030	00000375			 ??0083:
2  1031								 CC	 STATE_VAR
3  1032	00000375  00000018					 DD	 STATE_VAR
2  1033
2  1034					 ;  6.1.0750 BASE
2  1035					 ;  a-addr is the address of a cell containing the current number-conversion
2  1036					 ;  radix {{2...36}}.
2  1037					 ;  D: -- a-addr
2  1038								 $USER	 'BASE',$BASE
4  1039	00000379			 ??0084:
4  1040	00000379  00						   DB	 VEF_USUAL
4  1041	0000037A  04						 DB	 ??0085	- $ - 1
4  1042	0000037B  42 41	53 45					 DB	 'BASE'
4  1043	0000037F			 ??0085:
4  1044	0000037F  06						 DB	 ??0085	- ??0084
4  1045	00000380  20000365					 DD	 VOC_LINK
4  1046	00000384						   LABEL   $BASE FAR
4  1047	00000384  2000012A					   DD	   $DOUSER + DESIRED_BASE_EQU
4  1048	00000388			 ??0087:
2  1049								 CC	 BASE_VAR
3  1050	00000388  0000001C					 DD	 BASE_VAR
2  1051
2  1052					 ;  6.1.0770 BL
2  1053					 ;  Push space character on stack
2  1054					 ;  D: -- char
2  1055								 $CONST	 'BL',$BL
4  1056	0000038C			 ??0088:
4  1057	0000038C  00						   DB	 VEF_USUAL
4  1058	0000038D  02						 DB	 ??0089	- $ - 1
4  1059	0000038E  42 4C						 DB	 'BL'
4  1060	00000390			 ??0089:
4  1061	00000390  04						 DB	 ??0089	- ??0088
4  1062	00000391  20000379					 DD	 VOC_LINK
4  1063	00000395						   LABEL   $BL FAR
4  1064	00000395  2000010E					   DD	   $DOCONST + DESIRED_BASE_EQU
4  1065	00000399			 ??008B:
2  1066								 CC	 ' '
3  1067	00000399  00000020					 DD	 ' '
2  1068
2  1069					 ;  MAIN
2  1070					 ;  First Forth	word to	EXECUTE
2  1071								 $DEFER	 'MAIN',$MAIN
4  1072	0000039D			 ??008C:
4  1073	0000039D  00						   DB	 VEF_USUAL
4  1074	0000039E  04						 DB	 ??008D	- $ - 1
4  1075	0000039F  4D 41	49 4E					 DB	 'MAIN'
4  1076	000003A3			 ??008D:
4  1077	000003A3  06						 DB	 ??008D	- ??008C
4  1078	000003A4  2000038C					 DD	 VOC_LINK
4  1079	000003A8						   LABEL   $MAIN FAR
4  1080	000003A8  2000014A					   DD	   $DODEFER + DESIRED_BASE_EQU
4  1081	000003AC			 ??008F:
2  1082	000003AC			 MAIN_PROC:
2  1083								 CW	 $DO_FORTH
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 20
meta.asm



3  1084	000003AC  200027C1					 DD	 $DO_FORTH + DESIRED_BASE_EQU
2  1085
2  1086					 ;  MAX-ORDER-COUNT
2  1087		  = 16			 MAX_ORDER_COUNT	 EQU	 16
2  1088								 $CONST	 'MAX-ORDER-COUNT'
4  1089	000003B0			 ??0090:
4  1090	000003B0  00						   DB	 VEF_USUAL
4  1091	000003B1  0F						 DB	 ??0091	- $ - 1
4  1092	000003B2  4D 41	58 2D 4F 52 44+				 DB	 'MAX-ORDER-COUNT'
   1093		  45 52	2D 43 4F 55 4E+
   1094		  54
4  1095	000003C1			 ??0091:
4  1096	000003C1  11						 DB	 ??0091	- ??0090
4  1097	000003C2  2000039D					 DD	 VOC_LINK
4  1098	000003C6  2000010E					   DD	   $DOCONST + DESIRED_BASE_EQU
4  1099	000003CA			 ??0093:
2  1100								 CC	 MAX_ORDER_COUNT
3  1101	000003CA  00000010					 DD	 MAX_ORDER_COUNT
2  1102
1  1103								 INCLUDE "ik.inc"
2  1104					 ;******************************************************************************
2  1105					 ;
2  1106					 ;  ik.inc
2  1107					 ;  IKForth
2  1108					 ;
2  1109					 ;  Copyright (C) 1999-2001 Illya Kysil
2  1110					 ;
2  1111					 ;******************************************************************************
2  1112					 ;  IK words
2  1113					 ;******************************************************************************
2  1114
2  1115					 ;  INIT-USER
2  1116								 $DEF	 'INIT-USER',$INIT_USER
3  1117	000003CE			 ??0094:
3  1118	000003CE  00						   DB	 VEF_USUAL
3  1119	000003CF  09						 DB	 ??0095	- $ - 1
3  1120	000003D0  49 4E	49 54 2D 55 53+				 DB	 'INIT-USER'
   1121		  45 52
3  1122	000003D9			 ??0095:
3  1123	000003D9  0B						 DB	 ??0095	- ??0094
3  1124	000003DA  200003B0					 DD	 VOC_LINK
3  1125	000003DE						   LABEL   $INIT_USER FAR
3  1126	000003DE  200003E2					   DD	   ??0097 + DESIRED_BASE_EQU
3  1127	000003E2			 ??0097:
2  1128	000003E2  FC						 CLD
2  1129	000003E3  C7 47	1C 0000000A				 MOV	 [DWORD	PTR EDI	+ BASE_VAR],10
2  1130	000003EA  C7 47	18 00000000				 MOV	 [DWORD	PTR EDI	+ STATE_VAR],FALSE
2  1131	000003F1  C7 87	00000148      +				 MOV	 [DWORD	PTR EDI	+ CURRENT_VAR],OFFSET FORTH_WORDLIST_EQU +  +
   1132		  200018F4		 DESIRED_BASE_EQU
2  1133								 $NEXT
3  1134	000003FB  AD						 LODSD				 ; fetch address
4  1135	000003FC  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  1136	000003FE  FF E3						 JMP	 EBX			 ; execute
2  1137
2  1138					 ;  SMUDGE
2  1139					 ;  Makes latest word hidden/visible in	search
2  1140								 $COLON	 'SMUDGE',$SMUDGE
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 21
meta.asm



4  1141	00000400			 ??0098:
4  1142	00000400  00						   DB	 VEF_USUAL
4  1143	00000401  06						 DB	 ??0099	- $ - 1
4  1144	00000402  53 4D	55 44 47 45				 DB	 'SMUDGE'
4  1145	00000408			 ??0099:
4  1146	00000408  08						 DB	 ??0099	- ??0098
4  1147	00000409  200003CE					 DD	 VOC_LINK
4  1148	0000040D						   LABEL   $SMUDGE FAR
4  1149	0000040D  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  1150	00000411			 ??009B:
2  1151								 CW	 $LATEST_FETCH
3  1152	00000411  20000E5C					 DD	 $LATEST_FETCH + DESIRED_BASE_EQU
2  1153								 CW	 $LIT
3  1154	00000415  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  1155								 CC	 VEF_HIDDEN
3  1156	00000419  00000002					 DD	 VEF_HIDDEN
2  1157								 CW	 $TOGGLE
3  1158	0000041D  20000432					 DD	 $TOGGLE + DESIRED_BASE_EQU
2  1159								 CW	 $EXIT
3  1160	00000421  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  1161
2  1162					 ;  TOGGLE
2  1163					 ;  D: c-addr mask --
2  1164								 $DEF	 'TOGGLE',$TOGGLE
3  1165	00000425			 ??009C:
3  1166	00000425  00						   DB	 VEF_USUAL
3  1167	00000426  06						 DB	 ??009D	- $ - 1
3  1168	00000427  54 4F	47 47 4C 45				 DB	 'TOGGLE'
3  1169	0000042D			 ??009D:
3  1170	0000042D  08						 DB	 ??009D	- ??009C
3  1171	0000042E  20000400					 DD	 VOC_LINK
3  1172	00000432						   LABEL   $TOGGLE FAR
3  1173	00000432  20000436					   DD	   ??009F + DESIRED_BASE_EQU
3  1174	00000436			 ??009F:
2  1175								 POPDS	 ECX
3  1176	00000436  59						 POP	 ECX
2  1177								 POPDS	 EBX
3  1178	00000437  5B						 POP	 EBX
2  1179	00000438  30 0B						 XOR	 [BYTE PTR EBX],CL
2  1180								 $NEXT
3  1181	0000043A  AD						 LODSD				 ; fetch address
4  1182	0000043B  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  1183	0000043D  FF E3						 JMP	 EBX			 ; execute
2  1184
2  1185
1  1186								 INCLUDE "loops.inc"
2  1187					 ;******************************************************************************
2  1188					 ;
2  1189					 ;  loops.inc
2  1190					 ;  IKForth
2  1191					 ;
2  1192					 ;  Copyright (C) 1999-2001 Illya Kysil
2  1193					 ;
2  1194					 ;******************************************************************************
2  1195					 ;  Loop support words
2  1196					 ;******************************************************************************
2  1197
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 22
meta.asm



2  1198					 ;  (DO)
2  1199								 $DEF	 '(DO)',$PDO
3  1200	0000043F			 ??00A0:
3  1201	0000043F  00						   DB	 VEF_USUAL
3  1202	00000440  04						 DB	 ??00A1	- $ - 1
3  1203	00000441  28 44	4F 29					 DB	 '(DO)'
3  1204	00000445			 ??00A1:
3  1205	00000445  06						 DB	 ??00A1	- ??00A0
3  1206	00000446  20000425					 DD	 VOC_LINK
3  1207	0000044A						   LABEL   $PDO	FAR
3  1208	0000044A  2000044E					   DD	   ??00A3 + DESIRED_BASE_EQU
3  1209	0000044E			 ??00A3:
2  1210	0000044E  AD						 LODSD
2  1211								 PUSHRS	 EAX			 ; address for LEAVE
3  1212	0000044F  83 ED	04					 SUB	 EBP,CELL_SIZE
3  1213	00000452  89 45	00					 MOV	 [DWORD	PTR EBP],EAX
2  1214								 POPDS	 EAX
3  1215	00000455  58						 POP	 EAX
2  1216								 POPDS	 EBX
3  1217	00000456  5B						 POP	 EBX
2  1218								 PUSHRS	 EBX			 ; limit
3  1219	00000457  83 ED	04					 SUB	 EBP,CELL_SIZE
3  1220	0000045A  89 5D	00					 MOV	 [DWORD	PTR EBP],EBX
2  1221								 PUSHRS	 EAX			 ; current
3  1222	0000045D  83 ED	04					 SUB	 EBP,CELL_SIZE
3  1223	00000460  89 45	00					 MOV	 [DWORD	PTR EBP],EAX
2  1224								 $NEXT
3  1225	00000463  AD						 LODSD				 ; fetch address
4  1226	00000464  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  1227	00000466  FF E3						 JMP	 EBX			 ; execute
2  1228
2  1229					 ;  (?DO)
2  1230								 $DEF	 '(?DO)',$PQDO
3  1231	00000468			 ??00A4:
3  1232	00000468  00						   DB	 VEF_USUAL
3  1233	00000469  05						 DB	 ??00A5	- $ - 1
3  1234	0000046A  28 3F	44 4F 29				 DB	 '(?DO)'
3  1235	0000046F			 ??00A5:
3  1236	0000046F  07						 DB	 ??00A5	- ??00A4
3  1237	00000470  2000043F					 DD	 VOC_LINK
3  1238	00000474						   LABEL   $PQDO FAR
3  1239	00000474  20000478					   DD	   ??00A7 + DESIRED_BASE_EQU
3  1240	00000478			 ??00A7:
2  1241	00000478  AD						 LODSD
2  1242								 POPDS	 ECX
3  1243	00000479  59						 POP	 ECX
2  1244								 POPDS	 EBX
3  1245	0000047A  5B						 POP	 EBX
2  1246	0000047B  3B CB						 CMP	 ECX,EBX
2  1247	0000047D  74 17						 JZ	 SHORT PQDO_EXIT
2  1248								 PUSHRS	 EAX			 ; address for LEAVE
3  1249	0000047F  83 ED	04					 SUB	 EBP,CELL_SIZE
3  1250	00000482  89 45	00					 MOV	 [DWORD	PTR EBP],EAX
2  1251								 PUSHRS	 EBX			 ; limit
3  1252	00000485  83 ED	04					 SUB	 EBP,CELL_SIZE
3  1253	00000488  89 5D	00					 MOV	 [DWORD	PTR EBP],EBX
2  1254								 PUSHRS	 ECX			 ; current
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 23
meta.asm



3  1255	0000048B  83 ED	04					 SUB	 EBP,CELL_SIZE
3  1256	0000048E  89 4D	00					 MOV	 [DWORD	PTR EBP],ECX
2  1257								 $NEXT
3  1258	00000491  AD						 LODSD				 ; fetch address
4  1259	00000492  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  1260	00000494  FF E3						 JMP	 EBX			 ; execute
2  1261	00000496			 PQDO_EXIT:
2  1262	00000496  8B F0						 MOV	 ESI,EAX
2  1263								 $NEXT
3  1264	00000498  AD						 LODSD				 ; fetch address
4  1265	00000499  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  1266	0000049B  FF E3						 JMP	 EBX			 ; execute
2  1267
2  1268					 ;  (LOOP)
2  1269								 $DEF	 '(LOOP)',$PLOOP
3  1270	0000049D			 ??00A8:
3  1271	0000049D  00						   DB	 VEF_USUAL
3  1272	0000049E  06						 DB	 ??00A9	- $ - 1
3  1273	0000049F  28 4C	4F 4F 50 29				 DB	 '(LOOP)'
3  1274	000004A5			 ??00A9:
3  1275	000004A5  08						 DB	 ??00A9	- ??00A8
3  1276	000004A6  20000468					 DD	 VOC_LINK
3  1277	000004AA						   LABEL   $PLOOP FAR
3  1278	000004AA  200004AE					   DD	   ??00AB + DESIRED_BASE_EQU
3  1279	000004AE			 ??00AB:
2  1280	000004AE  AD						 LODSD
2  1281								 POPRS	 ECX			 ; current
3  1282	000004AF  8B 4D	00					 MOV	 ECX,[DWORD PTR	EBP]
3  1283	000004B2  83 C5	04					 ADD	 EBP,CELL_SIZE
2  1284								 FETCHRS EBX			 ; limit
3  1285	000004B5  8B 5D	00					   MOV	   EBX,[DWORD PTR EBP]
2  1286	000004B8  41						 INC	 ECX
2  1287	000004B9  3B CB						 CMP	 ECX,EBX
2  1288	000004BB  75 11						 JNZ	 SHORT PLOOP_NOEQ
2  1289								 POPRS	 EAX
3  1290	000004BD  8B 45	00					 MOV	 EAX,[DWORD PTR	EBP]
3  1291	000004C0  83 C5	04					 ADD	 EBP,CELL_SIZE
2  1292								 POPRS	 EAX
3  1293	000004C3  8B 45	00					 MOV	 EAX,[DWORD PTR	EBP]
3  1294	000004C6  83 C5	04					 ADD	 EBP,CELL_SIZE
2  1295								 $NEXT
3  1296	000004C9  AD						 LODSD				 ; fetch address
4  1297	000004CA  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  1298	000004CC  FF E3						 JMP	 EBX			 ; execute
2  1299	000004CE			 PLOOP_NOEQ:
2  1300								 PUSHRS	 ECX			 ; current
3  1301	000004CE  83 ED	04					 SUB	 EBP,CELL_SIZE
3  1302	000004D1  89 4D	00					 MOV	 [DWORD	PTR EBP],ECX
2  1303	000004D4  8B F0						 MOV	 ESI,EAX
2  1304								 $NEXT
3  1305	000004D6  AD						 LODSD				 ; fetch address
4  1306	000004D7  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  1307	000004D9  FF E3						 JMP	 EBX			 ; execute
2  1308
2  1309					 ;  (+LOOP)
2  1310								 $DEF	 '(+LOOP)',$PADDLOOP
3  1311	000004DB			 ??00AC:
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 24
meta.asm



3  1312	000004DB  00						   DB	 VEF_USUAL
3  1313	000004DC  07						 DB	 ??00AD	- $ - 1
3  1314	000004DD  28 2B	4C 4F 4F 50 29				 DB	 '(+LOOP)'
3  1315	000004E4			 ??00AD:
3  1316	000004E4  09						 DB	 ??00AD	- ??00AC
3  1317	000004E5  2000049D					 DD	 VOC_LINK
3  1318	000004E9						   LABEL   $PADDLOOP FAR
3  1319	000004E9  200004ED					   DD	   ??00AF + DESIRED_BASE_EQU
3  1320	000004ED			 ??00AF:
2  1321	000004ED  AD						 LODSD				 ; loop	addr
2  1322								 POPDS	 EDX			 ; loop	index increment
3  1323	000004EE  5A						 POP	 EDX
2  1324								 POPRS	 ECX			 ; current
3  1325	000004EF  8B 4D	00					 MOV	 ECX,[DWORD PTR	EBP]
3  1326	000004F2  83 C5	04					 ADD	 EBP,CELL_SIZE
2  1327								 FETCHRS EBX			 ; limit
3  1328	000004F5  8B 5D	00					   MOV	   EBX,[DWORD PTR EBP]
2  1329	000004F8  2B D9						 SUB	 EBX,ECX
2  1330	000004FA  0B D2						 OR	 EDX,EDX
2  1331	000004FC  78 28	90 90 90 90				 JS	 PADDLOOP_NEGATIVE	 ; jump	if increment is	negative
2  1332	00000502  3B DA						 CMP	 EBX,EDX
2  1333	00000504  7E 0F						 JLE	 SHORT PADDLOOP_LOOP_EXIT
2  1334	00000506			 PADDLOOP_LOOP_CONT:
2  1335	00000506  03 CA						 ADD	 ECX,EDX
2  1336								 PUSHRS	 ECX			 ; current
3  1337	00000508  83 ED	04					 SUB	 EBP,CELL_SIZE
3  1338	0000050B  89 4D	00					 MOV	 [DWORD	PTR EBP],ECX
2  1339	0000050E  8B F0						 MOV	 ESI,EAX
2  1340								 $NEXT
3  1341	00000510  AD						 LODSD				 ; fetch address
4  1342	00000511  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  1343	00000513  FF E3						 JMP	 EBX			 ; execute
2  1344	00000515			 PADDLOOP_LOOP_EXIT:
2  1345								 POPRS	 EAX
3  1346	00000515  8B 45	00					 MOV	 EAX,[DWORD PTR	EBP]
3  1347	00000518  83 C5	04					 ADD	 EBP,CELL_SIZE
2  1348								 POPRS	 EAX
3  1349	0000051B  8B 45	00					 MOV	 EAX,[DWORD PTR	EBP]
3  1350	0000051E  83 C5	04					 ADD	 EBP,CELL_SIZE
2  1351								 $NEXT
3  1352	00000521  AD						 LODSD				 ; fetch address
4  1353	00000522  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  1354	00000524  FF E3						 JMP	 EBX			 ; execute
2  1355
2  1356	00000526			 PADDLOOP_NEGATIVE:
2  1357	00000526  3B DA						 CMP	 EBX,EDX
2  1358	00000528  7F EB						 JG	 SHORT PADDLOOP_LOOP_EXIT
2  1359	0000052A  EB DA						 JMP	 SHORT PADDLOOP_LOOP_CONT
2  1360
2  1361
1  1362								 INCLUDE "source.inc"
2  1363					 ;******************************************************************************
2  1364					 ;
2  1365					 ;  source.inc
2  1366					 ;  IKForth
2  1367					 ;
2  1368					 ;  Copyright (C) 1999-2001 Illya Kysil
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 25
meta.asm



2  1369					 ;
2  1370					 ;******************************************************************************
2  1371					 ;
2  1372					 ;******************************************************************************
2  1373
2  1374					 ;  6.2.2218 SOURCE-ID
2  1375					 ;  Identifies the input source	as follows:
2  1376					 ;
2  1377					 ;  SOURCE-ID	    Input source
2  1378					 ;  -1		    String (via	EVALUATE)
2  1379					 ;   0		    User input device
2  1380								 $DEF	 'SOURCE-ID',$SOURCE_ID
3  1381	0000052C			 ??00B0:
3  1382	0000052C  00						   DB	 VEF_USUAL
3  1383	0000052D  09						 DB	 ??00B1	- $ - 1
3  1384	0000052E  53 4F	55 52 43 45 2D+				 DB	 'SOURCE-ID'
   1385		  49 44
3  1386	00000537			 ??00B1:
3  1387	00000537  0B						 DB	 ??00B1	- ??00B0
3  1388	00000538  200004DB					 DD	 VOC_LINK
3  1389	0000053C						   LABEL   $SOURCE_ID FAR
3  1390	0000053C  20000540					   DD	   ??00B3 + DESIRED_BASE_EQU
3  1391	00000540			 ??00B3:
2  1392	00000540  FF 77	24					 PUSH	 [DWORD	PTR EDI	+ SOURCE_ID_VAR]
2  1393								 $NEXT
3  1394	00000543  AD						 LODSD				 ; fetch address
4  1395	00000544  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  1396	00000546  FF E3						 JMP	 EBX			 ; execute
2  1397
2  1398					 ;  SOURCE-ID!
2  1399								 $DEF	 'SOURCE-ID!',$SOURCE_ID_STORE
3  1400	00000548			 ??00B4:
3  1401	00000548  00						   DB	 VEF_USUAL
3  1402	00000549  0A						 DB	 ??00B5	- $ - 1
3  1403	0000054A  53 4F	55 52 43 45 2D+				 DB	 'SOURCE-ID!'
   1404		  49 44	21
3  1405	00000554			 ??00B5:
3  1406	00000554  0C						 DB	 ??00B5	- ??00B4
3  1407	00000555  2000052C					 DD	 VOC_LINK
3  1408	00000559						   LABEL   $SOURCE_ID_STORE FAR
3  1409	00000559  2000055D					   DD	   ??00B7 + DESIRED_BASE_EQU
3  1410	0000055D			 ??00B7:
2  1411								 POPDS	 <[DWORD PTR EDI + SOURCE_ID_VAR]>
3  1412	0000055D  8F 47	24					 POP	 [DWORD	PTR EDI	+ SOURCE_ID_VAR]
2  1413								 $NEXT
3  1414	00000560  AD						 LODSD				 ; fetch address
4  1415	00000561  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  1416	00000563  FF E3						 JMP	 EBX			 ; execute
2  1417
2  1418					 ;  6.1.2216 SOURCE
2  1419					 ;  c-addr is the address of, and u is the number of characters	in
2  1420					 ;  the	input buffer.
2  1421					 ;  D: -- c-addr u
2  1422								 $DEF	 'SOURCE',$SOURCE,$ENTER
3  1423	00000565			 ??00B8:
3  1424	00000565  00						   DB	 VEF_USUAL
3  1425	00000566  06						 DB	 ??00B9	- $ - 1
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 26
meta.asm



3  1426	00000567  53 4F	55 52 43 45				 DB	 'SOURCE'
3  1427	0000056D			 ??00B9:
3  1428	0000056D  08						 DB	 ??00B9	- ??00B8
3  1429	0000056E  20000548					 DD	 VOC_LINK
3  1430	00000572						   LABEL   $SOURCE FAR
3  1431	00000572  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
3  1432	00000576			 ??00BB:
2  1433								 CW	 $BLK
3  1434	00000576  20001B17					 DD	 $BLK +	DESIRED_BASE_EQU
2  1435								 CW	 $FETCH
3  1436	0000057A  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  1437								 CW	 $QDUP
3  1438	0000057E  200010EF					 DD	 $QDUP + DESIRED_BASE_EQU
2  1439								 CW	 $QBRANCH
3  1440	00000582  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  1441								 CW	 SOURCE_NOT_BLOCK
3  1442	00000586  2000059E					 DD	 SOURCE_NOT_BLOCK + DESIRED_BASE_EQU
2  1443								   CW	   $BLOCK
3  1444	0000058A  20001B75					 DD	 $BLOCK	+ DESIRED_BASE_EQU
2  1445								   CW	   $LIT
3  1446	0000058E  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  1447								   CC	   1024
3  1448	00000592  00000400					 DD	 1024
2  1449								 CW	 $BRANCH
3  1450	00000596  2000005C					 DD	 $BRANCH + DESIRED_BASE_EQU
2  1451								 CW	 SOURCE_EXIT
3  1452	0000059A  200005F6					 DD	 SOURCE_EXIT + DESIRED_BASE_EQU
2  1453	0000059E			 SOURCE_NOT_BLOCK:
2  1454								   CW	   $SOURCE_ID
3  1455	0000059E  2000053C					 DD	 $SOURCE_ID + DESIRED_BASE_EQU
2  1456								   CW	   $ZEROLE
3  1457	000005A2  20001686					 DD	 $ZEROLE + DESIRED_BASE_EQU
2  1458								   CW	   $QBRANCH
3  1459	000005A6  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  1460								   CW	   SOURCE_NOT_EVALUATE
3  1461	000005AA  200005C6					 DD	 SOURCE_NOT_EVALUATE + DESIRED_BASE_EQU
2  1462								     CW	     $EVAL
3  1463	000005AE  200001DC					 DD	 $EVAL + DESIRED_BASE_EQU
2  1464								     CW	     $FETCH
3  1465	000005B2  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  1466								     CW	     $#EVAL
3  1467	000005B6  200001F0					 DD	 $#EVAL	+ DESIRED_BASE_EQU
2  1468								     CW	     $FETCH
3  1469	000005BA  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  1470								   CW	   $BRANCH
3  1471	000005BE  2000005C					 DD	 $BRANCH + DESIRED_BASE_EQU
2  1472								   CW	   SOURCE_NOT_EVALUATE_EXIT
3  1473	000005C2  200005F6					 DD	 SOURCE_NOT_EVALUATE_EXIT + DESIRED_BASE_EQU
2  1474	000005C6			 SOURCE_NOT_EVALUATE:
2  1475								   CW	   $SOURCE_ID
3  1476	000005C6  2000053C					 DD	 $SOURCE_ID + DESIRED_BASE_EQU
2  1477								   CW	   $ZEROEQ
3  1478	000005CA  200016A8					 DD	 $ZEROEQ + DESIRED_BASE_EQU
2  1479								   CW	   $QBRANCH
3  1480	000005CE  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  1481								   CW	   SOURCE_NOT_USER
3  1482	000005D2  200005EA					 DD	 SOURCE_NOT_USER + DESIRED_BASE_EQU
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 27
meta.asm



2  1483								     CW	     $TIB
3  1484	000005D6  200001B6					 DD	 $TIB +	DESIRED_BASE_EQU
2  1485								     CW	     $#TIB
3  1486	000005DA  200001C9					 DD	 $#TIB + DESIRED_BASE_EQU
2  1487								     CW	     $FETCH
3  1488	000005DE  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  1489								   CW	   $BRANCH
3  1490	000005E2  2000005C					 DD	 $BRANCH + DESIRED_BASE_EQU
2  1491								   CW	   SOURCE_NOT_USER_EXIT
3  1492	000005E6  200005F6					 DD	 SOURCE_NOT_USER_EXIT +	DESIRED_BASE_EQU
2  1493	000005EA			 SOURCE_NOT_USER:
2  1494								     CW	     $LINE
3  1495	000005EA  20000227					 DD	 $LINE + DESIRED_BASE_EQU
2  1496								     CW	     $#LINE
3  1497	000005EE  2000023B					 DD	 $#LINE	+ DESIRED_BASE_EQU
2  1498								     CW	     $FETCH
3  1499	000005F2  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  1500	000005F6			 SOURCE_NOT_USER_EXIT:
2  1501	000005F6			 SOURCE_NOT_EVALUATE_EXIT:
2  1502	000005F6			 SOURCE_EXIT:
2  1503								 CW	 $EXIT
3  1504	000005F6  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  1505
2  1506					 ;  6.2.2125 REFILL
2  1507								 $DEF	 'REFILL',$REFILL,$ENTER
3  1508	000005FA			 ??00BC:
3  1509	000005FA  00						   DB	 VEF_USUAL
3  1510	000005FB  06						 DB	 ??00BD	- $ - 1
3  1511	000005FC  52 45	46 49 4C 4C				 DB	 'REFILL'
3  1512	00000602			 ??00BD:
3  1513	00000602  08						 DB	 ??00BD	- ??00BC
3  1514	00000603  20000565					 DD	 VOC_LINK
3  1515	00000607						   LABEL   $REFILL FAR
3  1516	00000607  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
3  1517	0000060B			 ??00BF:
2  1518								 CW	 $BLK
3  1519	0000060B  20001B17					 DD	 $BLK +	DESIRED_BASE_EQU
2  1520								 CW	 $FETCH
3  1521	0000060F  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  1522								 CW	 $QDUP
3  1523	00000613  200010EF					 DD	 $QDUP + DESIRED_BASE_EQU
2  1524								 CW	 $QBRANCH
3  1525	00000617  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  1526								 CW	 REFILL_NOT_BLOCK
3  1527	0000061B  20000643					 DD	 REFILL_NOT_BLOCK + DESIRED_BASE_EQU
2  1528								   CW	   $1ADD
3  1529	0000061F  200013EB					 DD	 $1ADD + DESIRED_BASE_EQU
2  1530								   CW	   $BLK
3  1531	00000623  20001B17					 DD	 $BLK +	DESIRED_BASE_EQU
2  1532								   CW	   $STORE
3  1533	00000627  20001754					 DD	 $STORE	+ DESIRED_BASE_EQU
2  1534								   CW	   $ZERO
3  1535	0000062B  20000187					 DD	 $ZERO + DESIRED_BASE_EQU
2  1536								   CW	   $TOIN
3  1537	0000062F  20001BFA					 DD	 $TOIN + DESIRED_BASE_EQU
2  1538								   CW	   $STORE
3  1539	00000633  20001754					 DD	 $STORE	+ DESIRED_BASE_EQU
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 28
meta.asm



2  1540								   CW	   $TRUE
3  1541	00000637  200015E9					 DD	 $TRUE + DESIRED_BASE_EQU
2  1542								 CW	 $BRANCH
3  1543	0000063B  2000005C					 DD	 $BRANCH + DESIRED_BASE_EQU
2  1544								 CW	 REFILL_EXIT
3  1545	0000063F  200006CB					 DD	 REFILL_EXIT + DESIRED_BASE_EQU
2  1546	00000643			 REFILL_NOT_BLOCK:
2  1547								   CW	   $SOURCE_ID
3  1548	00000643  2000053C					 DD	 $SOURCE_ID + DESIRED_BASE_EQU
2  1549								   CW	   $QDUP
3  1550	00000647  200010EF					 DD	 $QDUP + DESIRED_BASE_EQU
2  1551								   CW	   $QBRANCH
3  1552	0000064B  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  1553								   CW	   REFILL_FROM_USER
3  1554	0000064F  200006A3					 DD	 REFILL_FROM_USER + DESIRED_BASE_EQU
2  1555								     CW	     $ZEROLE
3  1556	00000653  20001686					 DD	 $ZEROLE + DESIRED_BASE_EQU
2  1557								     CW	     $QBRANCH
3  1558	00000657  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  1559								     CW	     REFILL_FROM_FILE
3  1560	0000065B  2000066B					 DD	 REFILL_FROM_FILE + DESIRED_BASE_EQU
2  1561								       CW      $FALSE
3  1562	0000065F  200015D3					 DD	 $FALSE	+ DESIRED_BASE_EQU
2  1563								     CW	     $BRANCH
3  1564	00000663  2000005C					 DD	 $BRANCH + DESIRED_BASE_EQU
2  1565								     CW	     REFILL_EVAL_EXIT
3  1566	00000667  2000069B					 DD	 REFILL_EVAL_EXIT + DESIRED_BASE_EQU
2  1567	0000066B			 REFILL_FROM_FILE:
2  1568								       CW      $LINE
3  1569	0000066B  20000227					 DD	 $LINE + DESIRED_BASE_EQU
2  1570								       CW      $LIT
3  1571	0000066F  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  1572								       CC      MAX_LINE_LENGTH
3  1573	00000673  00000080					 DD	 MAX_LINE_LENGTH
2  1574								       CW      $SOURCE_ID
3  1575	00000677  2000053C					 DD	 $SOURCE_ID + DESIRED_BASE_EQU
2  1576								       CW      $READ_LINE
3  1577	0000067B  200025BD					 DD	 $READ_LINE + DESIRED_BASE_EQU
2  1578								       CW      $DROP
3  1579	0000067F  2000117B					 DD	 $DROP + DESIRED_BASE_EQU
2  1580								       CW      $SWAP
3  1581	00000683  200011EF					 DD	 $SWAP + DESIRED_BASE_EQU
2  1582								       CW      $#LINE
3  1583	00000687  2000023B					 DD	 $#LINE	+ DESIRED_BASE_EQU
2  1584								       CW      $STORE
3  1585	0000068B  20001754					 DD	 $STORE	+ DESIRED_BASE_EQU
2  1586								       CW      $ZERO
3  1587	0000068F  20000187					 DD	 $ZERO + DESIRED_BASE_EQU
2  1588								       CW      $TOIN
3  1589	00000693  20001BFA					 DD	 $TOIN + DESIRED_BASE_EQU
2  1590								       CW      $STORE
3  1591	00000697  20001754					 DD	 $STORE	+ DESIRED_BASE_EQU
2  1592	0000069B			 REFILL_EVAL_EXIT:
2  1593								   CW	   $BRANCH
3  1594	0000069B  2000005C					 DD	 $BRANCH + DESIRED_BASE_EQU
2  1595								   CW	   REFILL_EXIT
3  1596	0000069F  200006CB					 DD	 REFILL_EXIT + DESIRED_BASE_EQU
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 29
meta.asm



2  1597	000006A3			 REFILL_FROM_USER:
2  1598								     CW	     $TIB
3  1599	000006A3  200001B6					 DD	 $TIB +	DESIRED_BASE_EQU
2  1600								     CW	     $LIT
3  1601	000006A7  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  1602								     CC	     MAX_TIB_LENGTH
3  1603	000006AB  00000080					 DD	 MAX_TIB_LENGTH
2  1604								     CW	     $ACCEPT
3  1605	000006AF  2000182D					 DD	 $ACCEPT + DESIRED_BASE_EQU
2  1606								     CW	     $#TIB
3  1607	000006B3  200001C9					 DD	 $#TIB + DESIRED_BASE_EQU
2  1608								     CW	     $STORE
3  1609	000006B7  20001754					 DD	 $STORE	+ DESIRED_BASE_EQU
2  1610								     CW	     $ZERO
3  1611	000006BB  20000187					 DD	 $ZERO + DESIRED_BASE_EQU
2  1612								     CW	     $TOIN
3  1613	000006BF  20001BFA					 DD	 $TOIN + DESIRED_BASE_EQU
2  1614								     CW	     $STORE
3  1615	000006C3  20001754					 DD	 $STORE	+ DESIRED_BASE_EQU
2  1616								     CW	     $TRUE
3  1617	000006C7  200015E9					 DD	 $TRUE + DESIRED_BASE_EQU
2  1618	000006CB			 REFILL_EXIT:
2  1619								 CW	 $EXIT
3  1620	000006CB  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  1621
2  1622					 ;  INPUT>R
2  1623								 $COLON	 'INPUT>R',$INPUTTOR,VEF_COMPILE_ONLY
4  1624	000006CF			 ??00C0:
4  1625	000006CF  04						   DB	 VEF_COMPILE_ONLY
4  1626	000006D0  07						 DB	 ??00C1	- $ - 1
4  1627	000006D1  49 4E	50 55 54 3E 52				 DB	 'INPUT>R'
4  1628	000006D8			 ??00C1:
4  1629	000006D8  09						 DB	 ??00C1	- ??00C0
4  1630	000006D9  200005FA					 DD	 VOC_LINK
4  1631	000006DD						   LABEL   $INPUTTOR FAR
4  1632	000006DD  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  1633	000006E1			 ??00C3:
2  1634								 CW	 $RFROM
3  1635	000006E1  200012A8					 DD	 $RFROM	+ DESIRED_BASE_EQU
2  1636								 CW	 $SOURCE_ID
3  1637	000006E5  2000053C					 DD	 $SOURCE_ID + DESIRED_BASE_EQU
2  1638								 CW	 $TOR
3  1639	000006E9  2000128F					 DD	 $TOR +	DESIRED_BASE_EQU
2  1640								 CW	 $BLK
3  1641	000006ED  20001B17					 DD	 $BLK +	DESIRED_BASE_EQU
2  1642								 CW	 $FETCH
3  1643	000006F1  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  1644								 CW	 $TOR
3  1645	000006F5  2000128F					 DD	 $TOR +	DESIRED_BASE_EQU
2  1646								 CW	 $TOIN
3  1647	000006F9  20001BFA					 DD	 $TOIN + DESIRED_BASE_EQU
2  1648								 CW	 $FETCH
3  1649	000006FD  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  1650								 CW	 $TOR
3  1651	00000701  2000128F					 DD	 $TOR +	DESIRED_BASE_EQU
2  1652								 CW	 $CURRENT_FILE_POSITION
3  1653	00000705  20000214					 DD	 $CURRENT_FILE_POSITION	+ DESIRED_BASE_EQU
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 30
meta.asm



2  1654								 CW	 $2FETCH
3  1655	00000709  20001796					 DD	 $2FETCH + DESIRED_BASE_EQU
2  1656								 CW	 $2TOR
3  1657	0000070D  200012D8					 DD	 $2TOR + DESIRED_BASE_EQU
2  1658								 CW	 $TOR
3  1659	00000711  2000128F					 DD	 $TOR +	DESIRED_BASE_EQU
2  1660								 CW	 $EXIT
3  1661	00000715  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  1662
2  1663					 ;  INPUT<R
2  1664								 $COLON	 'INPUT<R',$INPUTFROMR,VEF_COMPILE_ONLY
4  1665	00000719			 ??00C4:
4  1666	00000719  04						   DB	 VEF_COMPILE_ONLY
4  1667	0000071A  07						 DB	 ??00C5	- $ - 1
4  1668	0000071B  49 4E	50 55 54 3C 52				 DB	 'INPUT<R'
4  1669	00000722			 ??00C5:
4  1670	00000722  09						 DB	 ??00C5	- ??00C4
4  1671	00000723  200006CF					 DD	 VOC_LINK
4  1672	00000727						   LABEL   $INPUTFROMR FAR
4  1673	00000727  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  1674	0000072B			 ??00C7:
2  1675								 CW	 $RFROM
3  1676	0000072B  200012A8					 DD	 $RFROM	+ DESIRED_BASE_EQU
2  1677								 CW	 $2RFROM
3  1678	0000072F  200012F9					 DD	 $2RFROM + DESIRED_BASE_EQU
2  1679								 CW	 $RFROM
3  1680	00000733  200012A8					 DD	 $RFROM	+ DESIRED_BASE_EQU
2  1681								 CW	 $DUP
3  1682	00000737  2000118F					 DD	 $DUP +	DESIRED_BASE_EQU
2  1683								 CW	 $TOIN
3  1684	0000073B  20001BFA					 DD	 $TOIN + DESIRED_BASE_EQU
2  1685								 CW	 $STORE
3  1686	0000073F  20001754					 DD	 $STORE	+ DESIRED_BASE_EQU
2  1687								 CW	 $STOD
3  1688	00000743  20002271					 DD	 $STOD + DESIRED_BASE_EQU
2  1689								 CW	 $DADD
3  1690	00000747  2000203E					 DD	 $DADD + DESIRED_BASE_EQU
2  1691								 CW	 $CURRENT_FILE_POSITION
3  1692	0000074B  20000214					 DD	 $CURRENT_FILE_POSITION	+ DESIRED_BASE_EQU
2  1693								 CW	 $2STORE
3  1694	0000074F  2000177E					 DD	 $2STORE + DESIRED_BASE_EQU
2  1695								 CW	 $RFROM
3  1696	00000753  200012A8					 DD	 $RFROM	+ DESIRED_BASE_EQU
2  1697								 CW	 $BLK
3  1698	00000757  20001B17					 DD	 $BLK +	DESIRED_BASE_EQU
2  1699								 CW	 $STORE
3  1700	0000075B  20001754					 DD	 $STORE	+ DESIRED_BASE_EQU
2  1701								 CW	 $RFROM
3  1702	0000075F  200012A8					 DD	 $RFROM	+ DESIRED_BASE_EQU
2  1703								 CW	 $DUP
3  1704	00000763  2000118F					 DD	 $DUP +	DESIRED_BASE_EQU
2  1705								 CW	 $SOURCE_ID_STORE
3  1706	00000767  20000559					 DD	 $SOURCE_ID_STORE + DESIRED_BASE_EQU
2  1707								 CW	 $ZEROGR
3  1708	0000076B  200016ED					 DD	 $ZEROGR + DESIRED_BASE_EQU
2  1709								 CW	 $QBRANCH
3  1710	0000076F  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 31
meta.asm



2  1711								 CW	 INPUTFROMR_EXIT
3  1712	00000773  2000078F					 DD	 INPUTFROMR_EXIT + DESIRED_BASE_EQU
2  1713								   CW	   $CURRENT_FILE_POSITION
3  1714	00000777  20000214					 DD	 $CURRENT_FILE_POSITION	+ DESIRED_BASE_EQU
2  1715								   CW	   $2FETCH
3  1716	0000077B  20001796					 DD	 $2FETCH + DESIRED_BASE_EQU
2  1717								   CW	   $SOURCE_ID
3  1718	0000077F  2000053C					 DD	 $SOURCE_ID + DESIRED_BASE_EQU
2  1719								   CW	   $REPOSITION_FILE
3  1720	00000783  20002524					 DD	 $REPOSITION_FILE + DESIRED_BASE_EQU
2  1721								   CW	   $REFILL
3  1722	00000787  20000607					 DD	 $REFILL + DESIRED_BASE_EQU
2  1723								   CW	   $2DROP
3  1724	0000078B  2000110C					 DD	 $2DROP	+ DESIRED_BASE_EQU
2  1725	0000078F			 INPUTFROMR_EXIT:
2  1726								 CW	 $TOR
3  1727	0000078F  2000128F					 DD	 $TOR +	DESIRED_BASE_EQU
2  1728								 CW	 $EXIT
3  1729	00000793  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  1730
2  1731
1  1732								 INCLUDE "dll.inc"
2  1733					 ;******************************************************************************
2  1734					 ;
2  1735					 ;  dll.inc
2  1736					 ;  IKForth
2  1737					 ;
2  1738					 ;  Copyright (C) 1999-2001 Illya Kysil
2  1739					 ;
2  1740					 ;******************************************************************************
2  1741					 ;  DLL	support
2  1742					 ;******************************************************************************
2  1743
2  1744					 ;  GetLastError
2  1745								 $DEF	 'GetLastError'
3  1746	00000797			 ??00C8:
3  1747	00000797  00						   DB	 VEF_USUAL
3  1748	00000798  0C						 DB	 ??00C9	- $ - 1
3  1749	00000799  47 65	74 4C 61 73 74+				 DB	 'GetLastError'
   1750		  45 72	72 6F 72
3  1751	000007A5			 ??00C9:
3  1752	000007A5  0E						 DB	 ??00C9	- ??00C8
3  1753	000007A6  20000719					 DD	 VOC_LINK
3  1754	000007AA  200007AE					   DD	   ??00CB + DESIRED_BASE_EQU
3  1755	000007AE			 ??00CB:
2  1756								 $CALL	 GET_LAST_ERROR_FUNC
4  1757	000007AE  83 ED	04					 SUB	 EBP,CELL_SIZE
4  1758	000007B1  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  1759	000007B4  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  1760	000007BA  83 C3	00					 ADD	 EBX,GET_LAST_ERROR_FUNC * CELL_SIZE
3  1761	000007BD  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  1762	000007BF  FF D3						 CALL	 EBX
4  1763	000007C1  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  1764	000007C4  83 C5	04					 ADD	 EBP,CELL_SIZE
2  1765								 PUSHDS	 EAX
3  1766	000007C7  50						 PUSH	 EAX
2  1767								 $NEXT
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 32
meta.asm



3  1768	000007C8  AD						 LODSD				 ; fetch address
4  1769	000007C9  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  1770	000007CB  FF E3						 JMP	 EBX			 ; execute
2  1771
2  1772					 ;  (LoadLibrary)
2  1773								 $DEF	 '(LoadLibrary)',$LOAD_LIBRARY
3  1774	000007CD			 ??00CC:
3  1775	000007CD  00						   DB	 VEF_USUAL
3  1776	000007CE  0D						 DB	 ??00CD	- $ - 1
3  1777	000007CF  28 4C	6F 61 64 4C 69+				 DB	 '(LoadLibrary)'
   1778		  62 72	61 72 79 29
3  1779	000007DC			 ??00CD:
3  1780	000007DC  0F						 DB	 ??00CD	- ??00CC
3  1781	000007DD  20000797					 DD	 VOC_LINK
3  1782	000007E1						   LABEL   $LOAD_LIBRARY FAR
3  1783	000007E1  200007E5					   DD	   ??00CF + DESIRED_BASE_EQU
3  1784	000007E5			 ??00CF:
2  1785								 $CALL	 LOAD_LIBRARY_FUNC
4  1786	000007E5  83 ED	04					 SUB	 EBP,CELL_SIZE
4  1787	000007E8  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  1788	000007EB  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  1789	000007F1  83 C3	04					 ADD	 EBX,LOAD_LIBRARY_FUNC * CELL_SIZE
3  1790	000007F4  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  1791	000007F6  FF D3						 CALL	 EBX
4  1792	000007F8  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  1793	000007FB  83 C5	04					 ADD	 EBP,CELL_SIZE
2  1794								 PUSHDS	 EAX
3  1795	000007FE  50						 PUSH	 EAX
2  1796								 $NEXT
3  1797	000007FF  AD						 LODSD				 ; fetch address
4  1798	00000800  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  1799	00000802  FF E3						 JMP	 EBX			 ; execute
2  1800
2  1801					 ;  FreeLibrary
2  1802								 $DEF	 'FreeLibrary',$FREE_LIBRARY
3  1803	00000804			 ??00D0:
3  1804	00000804  00						   DB	 VEF_USUAL
3  1805	00000805  0B						 DB	 ??00D1	- $ - 1
3  1806	00000806  46 72	65 65 4C 69 62+				 DB	 'FreeLibrary'
   1807		  72 61	72 79
3  1808	00000811			 ??00D1:
3  1809	00000811  0D						 DB	 ??00D1	- ??00D0
3  1810	00000812  200007CD					 DD	 VOC_LINK
3  1811	00000816						   LABEL   $FREE_LIBRARY FAR
3  1812	00000816  2000081A					   DD	   ??00D3 + DESIRED_BASE_EQU
3  1813	0000081A			 ??00D3:
2  1814								 $CALL	 FREE_LIBRARY_FUNC
4  1815	0000081A  83 ED	04					 SUB	 EBP,CELL_SIZE
4  1816	0000081D  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  1817	00000820  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  1818	00000826  83 C3	08					 ADD	 EBX,FREE_LIBRARY_FUNC * CELL_SIZE
3  1819	00000829  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  1820	0000082B  FF D3						 CALL	 EBX
4  1821	0000082D  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  1822	00000830  83 C5	04					 ADD	 EBP,CELL_SIZE
2  1823								 $NEXT
3  1824	00000833  AD						 LODSD				 ; fetch address
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 33
meta.asm



4  1825	00000834  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  1826	00000836  FF E3						 JMP	 EBX			 ; execute
2  1827
2  1828					 ;  (GetProcAddress)
2  1829								 $DEF	 '(GetProcAddress)'
3  1830	00000838			 ??00D4:
3  1831	00000838  00						   DB	 VEF_USUAL
3  1832	00000839  10						 DB	 ??00D5	- $ - 1
3  1833	0000083A  28 47	65 74 50 72 6F+				 DB	 '(GetProcAddress)'
   1834		  63 41	64 64 72 65 73+
   1835		  73 29
3  1836	0000084A			 ??00D5:
3  1837	0000084A  12						 DB	 ??00D5	- ??00D4
3  1838	0000084B  20000804					 DD	 VOC_LINK
3  1839	0000084F  20000853					   DD	   ??00D7 + DESIRED_BASE_EQU
3  1840	00000853			 ??00D7:
2  1841								 $CALL	 GET_PROC_ADDRESS_FUNC
4  1842	00000853  83 ED	04					 SUB	 EBP,CELL_SIZE
4  1843	00000856  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  1844	00000859  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  1845	0000085F  83 C3	0C					 ADD	 EBX,GET_PROC_ADDRESS_FUNC * CELL_SIZE
3  1846	00000862  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  1847	00000864  FF D3						 CALL	 EBX
4  1848	00000866  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  1849	00000869  83 C5	04					 ADD	 EBP,CELL_SIZE
2  1850								 PUSHDS	 EAX
3  1851	0000086C  50						 PUSH	 EAX
2  1852								 $NEXT
3  1853	0000086D  AD						 LODSD				 ; fetch address
4  1854	0000086E  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  1855	00000870  FF E3						 JMP	 EBX			 ; execute
2  1856
2  1857
1  1858								 INCLUDE "thread.inc"
2  1859					 ;******************************************************************************
2  1860					 ;
2  1861					 ;  thread.inc
2  1862					 ;  IKForth
2  1863					 ;
2  1864					 ;  Copyright (C) 1999-2001 Illya Kysil
2  1865					 ;
2  1866					 ;******************************************************************************
2  1867					 ;  THREAD & support words
2  1868					 ;******************************************************************************
2  1869
2  1870					 ;  THREAD-EXIT
2  1871								 $DEF	 'THREAD-EXIT',$THREAD_EXIT
3  1872	00000872			 ??00D8:
3  1873	00000872  00						   DB	 VEF_USUAL
3  1874	00000873  0B						 DB	 ??00D9	- $ - 1
3  1875	00000874  54 48	52 45 41 44 2D+				 DB	 'THREAD-EXIT'
   1876		  45 58	49 54
3  1877	0000087F			 ??00D9:
3  1878	0000087F  0D						 DB	 ??00D9	- ??00D8
3  1879	00000880  20000838					 DD	 VOC_LINK
3  1880	00000884						   LABEL   $THREAD_EXIT	FAR
3  1881	00000884  20000888					   DD	   ??00DB + DESIRED_BASE_EQU
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 34
meta.asm



3  1882	00000888			 ??00DB:
2  1883	00000888  8B 77	08					 MOV	 ESI,[DWORD PTR	EDI + ESI_VAR]
2  1884	0000088B  8B 6F	0C					 MOV	 EBP,[DWORD PTR	EDI + EBP_VAR]
2  1885	0000088E  8B 67	14					 MOV	 ESP,[DWORD PTR	EDI + ESP_VAR]
2  1886	00000891  8B 5F	10					 MOV	 EBX,[DWORD PTR	EDI + EBX_VAR]
2  1887								 PUSHDS	 <[DWORD PTR EDI + RETURN_ADDR_VAR]>
3  1888	00000894  FF 37						 PUSH	 [DWORD	PTR EDI	+ RETURN_ADDR_VAR]
2  1889	00000896  8B 7F	04					 MOV	 EDI,[DWORD PTR	EDI + EDI_VAR]
2  1890	00000899  C3						 RET
2  1891
2  1892	0000089A			 THREAD_PROC:
2  1893								 POPDS	 EDX			 ; return address
3  1894	0000089A  5A						 POP	 EDX
2  1895	0000089B  8B C7						 MOV	 EAX,EDI
2  1896								 POPDS	 EDI			 ; user	data pointer
3  1897	0000089D  5F						 POP	 EDI
2  1898	0000089E  89 17						 MOV	 [DWORD	PTR EDI	+ RETURN_ADDR_VAR],EDX
2  1899	000008A0  89 47	04					 MOV	 [DWORD	PTR EDI	+ EDI_VAR],EAX
2  1900	000008A3  89 77	08					 MOV	 [DWORD	PTR EDI	+ ESI_VAR],ESI
2  1901	000008A6  89 6F	0C					 MOV	 [DWORD	PTR EDI	+ EBP_VAR],EBP
2  1902	000008A9  89 5F	10					 MOV	 [DWORD	PTR EDI	+ EBX_VAR],EBX
2  1903	000008AC  8B EF						 MOV	 EBP,EDI
2  1904	000008AE  81 C5	00001A68				 ADD	 EBP,RSTACK_VAR
2  1905	000008B4  BE 200008C3					 MOV	 ESI,OFFSET DO_THREAD +	DESIRED_BASE_EQU
2  1906								 POPDS	 EAX
3  1907	000008B9  58						 POP	 EAX
2  1908	000008BA  89 67	14					 MOV	 [DWORD	PTR EDI	+ ESP_VAR],ESP
2  1909								 PUSHDS	 EAX
3  1910	000008BD  50						 PUSH	 EAX
2  1911								 $NEXT
3  1912	000008BE  AD						 LODSD				 ; fetch address
4  1913	000008BF  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  1914	000008C1  FF E3						 JMP	 EBX			 ; execute
2  1915	000008C3			 DO_THREAD:
2  1916								 CW	 $CATCH
3  1917	000008C3  2000228A					 DD	 $CATCH	+ DESIRED_BASE_EQU
2  1918								 CW	 $DROP
3  1919	000008C7  2000117B					 DD	 $DROP + DESIRED_BASE_EQU
2  1920								 CW	 $THREAD_EXIT
3  1921	000008CB  20000884					 DD	 $THREAD_EXIT +	DESIRED_BASE_EQU
2  1922
2  1923					 ;  THREAD
2  1924								 $DEF	 'THREAD',$THREAD
3  1925	000008CF			 ??00DC:
3  1926	000008CF  00						   DB	 VEF_USUAL
3  1927	000008D0  06						 DB	 ??00DD	- $ - 1
3  1928	000008D1  54 48	52 45 41 44				 DB	 'THREAD'
3  1929	000008D7			 ??00DD:
3  1930	000008D7  08						 DB	 ??00DD	- ??00DC
3  1931	000008D8  20000872					 DD	 VOC_LINK
3  1932	000008DC						   LABEL   $THREAD FAR
3  1933	000008DC  200008E0					   DD	   ??00DF + DESIRED_BASE_EQU
3  1934	000008E0			 ??00DF:
2  1935								 PUSHDS	 EDI
3  1936	000008E0  57						 PUSH	 EDI
2  1937								 $CALL	 START_THREAD_FUNC
4  1938	000008E1  83 ED	04					 SUB	 EBP,CELL_SIZE
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 35
meta.asm



4  1939	000008E4  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  1940	000008E7  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  1941	000008ED  83 C3	50					 ADD	 EBX,START_THREAD_FUNC * CELL_SIZE
3  1942	000008F0  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  1943	000008F2  FF D3						 CALL	 EBX
4  1944	000008F4  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  1945	000008F7  83 C5	04					 ADD	 EBP,CELL_SIZE
2  1946								 PUSHDS	 EAX
3  1947	000008FA  50						 PUSH	 EAX
2  1948								 $NEXT
3  1949	000008FB  AD						 LODSD				 ; fetch address
4  1950	000008FC  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  1951	000008FE  FF E3						 JMP	 EBX			 ; execute
2  1952
2  1953
1  1954								 INCLUDE "int_comp.inc"
2  1955					 ;******************************************************************************
2  1956					 ;
2  1957					 ;  int_comp.inc
2  1958					 ;  IKForth
2  1959					 ;
2  1960					 ;  Copyright (C) 1999-2001 Illya Kysil
2  1961					 ;
2  1962					 ;******************************************************************************
2  1963					 ;  Interpretation/compilation time helper words
2  1964					 ;******************************************************************************
2  1965
2  1966					 ;  IS-INT/COMP?
2  1967								 $COLON	 'IS-INT/COMP?',$IS_INT_COMPQ
4  1968	00000900			 ??00E0:
4  1969	00000900  00						   DB	 VEF_USUAL
4  1970	00000901  0C						 DB	 ??00E1	- $ - 1
4  1971	00000902  49 53	2D 49 4E 54 2F+				 DB	 'IS-INT/COMP?'
   1972		  43 4F	4D 50 3F
4  1973	0000090E			 ??00E1:
4  1974	0000090E  0E						 DB	 ??00E1	- ??00E0
4  1975	0000090F  200008CF					 DD	 VOC_LINK
4  1976	00000913						   LABEL   $IS_INT_COMPQ FAR
4  1977	00000913  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  1978	00000917			 ??00E3:
2  1979								 CW	 $FETCH
3  1980	00000917  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  1981								 CW	 $LIT
3  1982	0000091B  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  1983								 CW	 $PDO_INT_COMP
3  1984	0000091F  20000169					 DD	 $PDO_INT_COMP + DESIRED_BASE_EQU
2  1985								 CW	 $EQ
3  1986	00000923  20001640					 DD	 $EQ + DESIRED_BASE_EQU
2  1987								 CW	 $EXIT
3  1988	00000927  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  1989
2  1990					 ;  INT/COMP>INT
2  1991								 $COLON	 'INT/COMP>INT',$INT_COMP_TO_INT
4  1992	0000092B			 ??00E4:
4  1993	0000092B  00						   DB	 VEF_USUAL
4  1994	0000092C  0C						 DB	 ??00E5	- $ - 1
4  1995	0000092D  49 4E	54 2F 43 4F 4D+				 DB	 'INT/COMP>INT'
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 36
meta.asm



   1996		  50 3E	49 4E 54
4  1997	00000939			 ??00E5:
4  1998	00000939  0E						 DB	 ??00E5	- ??00E4
4  1999	0000093A  20000900					 DD	 VOC_LINK
4  2000	0000093E						   LABEL   $INT_COMP_TO_INT FAR
4  2001	0000093E  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  2002	00000942			 ??00E7:
2  2003								 CW	 $TOBODY
3  2004	00000942  20002162					 DD	 $TOBODY + DESIRED_BASE_EQU
2  2005								 CW	 $FETCH
3  2006	00000946  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  2007								 CW	 $EXIT
3  2008	0000094A  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  2009
2  2010					 ;  INT/COMP>COMP
2  2011								 $COLON	 'INT/COMP>COMP',$INT_COMP_TO_COMP
4  2012	0000094E			 ??00E8:
4  2013	0000094E  00						   DB	 VEF_USUAL
4  2014	0000094F  0D						 DB	 ??00E9	- $ - 1
4  2015	00000950  49 4E	54 2F 43 4F 4D+				 DB	 'INT/COMP>COMP'
   2016		  50 3E	43 4F 4D 50
4  2017	0000095D			 ??00E9:
4  2018	0000095D  0F						 DB	 ??00E9	- ??00E8
4  2019	0000095E  2000092B					 DD	 VOC_LINK
4  2020	00000962						   LABEL   $INT_COMP_TO_COMP FAR
4  2021	00000962  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  2022	00000966			 ??00EB:
2  2023								 CW	 $TOBODY
3  2024	00000966  20002162					 DD	 $TOBODY + DESIRED_BASE_EQU
2  2025								 CW	 $CELLADD
3  2026	0000096A  200017DF					 DD	 $CELLADD + DESIRED_BASE_EQU
2  2027								 CW	 $FETCH
3  2028	0000096E  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  2029								 CW	 $EXIT
3  2030	00000972  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  2031
2  2032					 ;  COMP'
2  2033								 $COLON	 'COMP''',$COMP_TICK
4  2034	00000976			 ??00EC:
4  2035	00000976  00						   DB	 VEF_USUAL
4  2036	00000977  05						 DB	 ??00ED	- $ - 1
4  2037	00000978  43 4F	4D 50 27				 DB	 'COMP'''
4  2038	0000097D			 ??00ED:
4  2039	0000097D  07						 DB	 ??00ED	- ??00EC
4  2040	0000097E  2000094E					 DD	 VOC_LINK
4  2041	00000982						   LABEL   $COMP_TICK FAR
4  2042	00000982  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  2043	00000986			 ??00EF:
2  2044								 CW	 $BL
3  2045	00000986  20000395					 DD	 $BL + DESIRED_BASE_EQU
2  2046								 CW	 $WORD
3  2047	0000098A  20001C88					 DD	 $WORD + DESIRED_BASE_EQU
2  2048								 CW	 $FIND
3  2049	0000098E  20001A20					 DD	 $FIND + DESIRED_BASE_EQU
2  2050								 CW	 $DUP
3  2051	00000992  2000118F					 DD	 $DUP +	DESIRED_BASE_EQU
2  2052								 CW	 $ZEROEQ
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 37
meta.asm



3  2053	00000996  200016A8					 DD	 $ZEROEQ + DESIRED_BASE_EQU
2  2054								 CW	 $QBRANCH
3  2055	0000099A  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2056								 CW	 CT_FOUND
3  2057	0000099E  200009AE					 DD	 CT_FOUND + DESIRED_BASE_EQU
2  2058								   CW	   $LIT
3  2059	000009A2  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  2060								   CC	   -13
3  2061	000009A6  FFFFFFF3					 DD	 -13
2  2062								   CW	   $THROW
3  2063	000009AA  20002320					 DD	 $THROW	+ DESIRED_BASE_EQU
2  2064	000009AE			 CT_FOUND:
2  2065								 CW	 $OVER
3  2066	000009AE  200011BD					 DD	 $OVER + DESIRED_BASE_EQU
2  2067								 CW	 $IS_INT_COMPQ
3  2068	000009B2  20000913					 DD	 $IS_INT_COMPQ + DESIRED_BASE_EQU
2  2069								 CW	 $TRUE
3  2070	000009B6  200015E9					 DD	 $TRUE + DESIRED_BASE_EQU
2  2071								 CW	 $EQ
3  2072	000009BA  20001640					 DD	 $EQ + DESIRED_BASE_EQU
2  2073								 CW	 $QBRANCH
3  2074	000009BE  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2075								 CW	 CT_NO_I_C
3  2076	000009C2  200009D2					 DD	 CT_NO_I_C + DESIRED_BASE_EQU
2  2077								   CW	   $SWAP
3  2078	000009C6  200011EF					 DD	 $SWAP + DESIRED_BASE_EQU
2  2079								   CW	   $INT_COMP_TO_COMP
3  2080	000009CA  20000962					 DD	 $INT_COMP_TO_COMP + DESIRED_BASE_EQU
2  2081								   CW	   $SWAP
3  2082	000009CE  200011EF					 DD	 $SWAP + DESIRED_BASE_EQU
2  2083	000009D2			 CT_NO_I_C:
2  2084								 CW	 $ZEROLE
3  2085	000009D2  20001686					 DD	 $ZEROLE + DESIRED_BASE_EQU
2  2086								 CW	 $QBRANCH
3  2087	000009D6  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2088								 CW	 CT_IMM
3  2089	000009DA  200009EE					 DD	 CT_IMM	+ DESIRED_BASE_EQU
2  2090								   CW	   $LIT
3  2091	000009DE  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  2092								   CW	   $COMPILEC
3  2093	000009E2  20001E53					 DD	 $COMPILEC + DESIRED_BASE_EQU
2  2094								   CW	   $BRANCH
3  2095	000009E6  2000005C					 DD	 $BRANCH + DESIRED_BASE_EQU
2  2096								   CW	   CT_EXIT
3  2097	000009EA  200009F6					 DD	 CT_EXIT + DESIRED_BASE_EQU
2  2098	000009EE			 CT_IMM:
2  2099								   CW	   $LIT
3  2100	000009EE  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  2101								   CW	   $EXECUTE
3  2102	000009F2  20001A9D					 DD	 $EXECUTE + DESIRED_BASE_EQU
2  2103	000009F6			 CT_EXIT:
2  2104								 CW	 $EXIT
3  2105	000009F6  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  2106
2  2107					 ;  POSTPONE,
2  2108								 $COLON	 'POSTPONE,',$POSTPONEC
4  2109	000009FA			 ??00F0:
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 38
meta.asm



4  2110	000009FA  00						   DB	 VEF_USUAL
4  2111	000009FB  09						 DB	 ??00F1	- $ - 1
4  2112	000009FC  50 4F	53 54 50 4F 4E+				 DB	 'POSTPONE,'
   2113		  45 2C
4  2114	00000A05			 ??00F1:
4  2115	00000A05  0B						 DB	 ??00F1	- ??00F0
4  2116	00000A06  20000976					 DD	 VOC_LINK
4  2117	00000A0A						   LABEL   $POSTPONEC FAR
4  2118	00000A0A  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  2119	00000A0E			 ??00F3:
2  2120								 CW	 $SWAP
3  2121	00000A0E  200011EF					 DD	 $SWAP + DESIRED_BASE_EQU
2  2122								 CW	 $LITERAL
3  2123	00000A12  20001F10					 DD	 $LITERAL + DESIRED_BASE_EQU
2  2124								 CW	 $COMPILEC
3  2125	00000A16  20001E53					 DD	 $COMPILEC + DESIRED_BASE_EQU
2  2126								 CW	 $EXIT
3  2127	00000A1A  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  2128
2  2129					 ;  POSTPONE
2  2130								 $COLON	 'POSTPONE',$POSTPONE,VEF_IMMEDIATE
4  2131	00000A1E			 ??00F4:
4  2132	00000A1E  01						   DB	 VEF_IMMEDIATE
4  2133	00000A1F  08						 DB	 ??00F5	- $ - 1
4  2134	00000A20  50 4F	53 54 50 4F 4E+				 DB	 'POSTPONE'
   2135		  45
4  2136	00000A28			 ??00F5:
4  2137	00000A28  0A						 DB	 ??00F5	- ??00F4
4  2138	00000A29  200009FA					 DD	 VOC_LINK
4  2139	00000A2D						   LABEL   $POSTPONE FAR
4  2140	00000A2D  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  2141	00000A31			 ??00F7:
2  2142								 CW	 $COMP_TICK
3  2143	00000A31  20000982					 DD	 $COMP_TICK + DESIRED_BASE_EQU
2  2144								 CW	 $POSTPONEC
3  2145	00000A35  20000A0A					 DD	 $POSTPONEC + DESIRED_BASE_EQU
2  2146								 CW	 $EXIT
3  2147	00000A39  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  2148
2  2149					 ;  [COMPILE]
2  2150								 $COLON	 '[COMPILE]',,VEF_IMMEDIATE
4  2151	00000A3D			 ??00F8:
4  2152	00000A3D  01						   DB	 VEF_IMMEDIATE
4  2153	00000A3E  09						 DB	 ??00F9	- $ - 1
4  2154	00000A3F  5B 43	4F 4D 50 49 4C+				 DB	 '[COMPILE]'
   2155		  45 5D
4  2156	00000A48			 ??00F9:
4  2157	00000A48  0B						 DB	 ??00F9	- ??00F8
4  2158	00000A49  20000A1E					 DD	 VOC_LINK
4  2159	00000A4D  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  2160	00000A51			 ??00FB:
2  2161								 CW	 $COMP_TICK
3  2162	00000A51  20000982					 DD	 $COMP_TICK + DESIRED_BASE_EQU
2  2163								 CW	 $DROP
3  2164	00000A55  2000117B					 DD	 $DROP + DESIRED_BASE_EQU
2  2165								 CW	 $COMPILEC
3  2166	00000A59  20001E53					 DD	 $COMPILEC + DESIRED_BASE_EQU
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 39
meta.asm



2  2167								 CW	 $EXIT
3  2168	00000A5D  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  2169
2  2170
1  2171								 INCLUDE "interpret.inc"
2  2172					 ;******************************************************************************
2  2173					 ;
2  2174					 ;  interpret.inc
2  2175					 ;  IKForth
2  2176					 ;
2  2177					 ;  Copyright (C) 1999-2001 Illya Kysil
2  2178					 ;
2  2179					 ;******************************************************************************
2  2180					 ;  INTERPRET support
2  2181					 ;******************************************************************************
2  2182
2  2183					 ;  >NUMBER-SIGNED
2  2184								 $USER	 '>NUMBER-SIGNED',$TONUMBER_SIGNED
4  2185	00000A61			 ??00FC:
4  2186	00000A61  00						   DB	 VEF_USUAL
4  2187	00000A62  0E						 DB	 ??00FD	- $ - 1
4  2188	00000A63  3E 4E	55 4D 42 45 52+				 DB	 '>NUMBER-SIGNED'
   2189		  2D 53	49 47 4E 45 44
4  2190	00000A71			 ??00FD:
4  2191	00000A71  10						 DB	 ??00FD	- ??00FC
4  2192	00000A72  20000A3D					 DD	 VOC_LINK
4  2193	00000A76						   LABEL   $TONUMBER_SIGNED FAR
4  2194	00000A76  2000012A					   DD	   $DOUSER + DESIRED_BASE_EQU
4  2195	00000A7A			 ??00FF:
2  2196								 CC	 TONUMBER_SIGNED_VAR
3  2197	00000A7A  0000002C					 DD	 TONUMBER_SIGNED_VAR
2  2198
2  2199					 ;  DO-INT-DEFINED
2  2200								 $COLON	 'DO-INT-DEFINED',$DO_INT_DEFINED
4  2201	00000A7E			 ??0100:
4  2202	00000A7E  00						   DB	 VEF_USUAL
4  2203	00000A7F  0E						 DB	 ??0101	- $ - 1
4  2204	00000A80  44 4F	2D 49 4E 54 2D+				 DB	 'DO-INT-DEFINED'
   2205		  44 45	46 49 4E 45 44
4  2206	00000A8E			 ??0101:
4  2207	00000A8E  10						 DB	 ??0101	- ??0100
4  2208	00000A8F  20000A61					 DD	 VOC_LINK
4  2209	00000A93						   LABEL   $DO_INT_DEFINED FAR
4  2210	00000A93  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  2211	00000A97			 ??0103:
2  2212								 CW	 $OVER
3  2213	00000A97  200011BD					 DD	 $OVER + DESIRED_BASE_EQU
2  2214								 CW	 $TONAME
3  2215	00000A9B  2000217A					 DD	 $TONAME + DESIRED_BASE_EQU
2  2216								 CW	 $1SUB
3  2217	00000A9F  20001400					 DD	 $1SUB + DESIRED_BASE_EQU
2  2218								 CW	 $CFETCH
3  2219	00000AA3  200017C4					 DD	 $CFETCH + DESIRED_BASE_EQU
2  2220								 CW	 $LIT
3  2221	00000AA7  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  2222								 CC	 VEF_COMPILE_ONLY
3  2223	00000AAB  00000004					 DD	 VEF_COMPILE_ONLY
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 40
meta.asm



2  2224								 CW	 $AND
3  2225	00000AAF  20001518					 DD	 $AND +	DESIRED_BASE_EQU
2  2226								 CW	 $ZERONOEQ
3  2227	00000AB3  200016CB					 DD	 $ZERONOEQ + DESIRED_BASE_EQU
2  2228								 CW	 $QBRANCH
3  2229	00000AB7  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2230								 CW	 DID_INTERPRET
3  2231	00000ABB  20000ACB					 DD	 DID_INTERPRET + DESIRED_BASE_EQU
2  2232								   CW	   $LIT
3  2233	00000ABF  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  2234								   CC	   -14
3  2235	00000AC3  FFFFFFF2					 DD	 -14
2  2236								   CW	   $THROW
3  2237	00000AC7  20002320					 DD	 $THROW	+ DESIRED_BASE_EQU
2  2238	00000ACB			 DID_INTERPRET:
2  2239								 CW	 $DROP
3  2240	00000ACB  2000117B					 DD	 $DROP + DESIRED_BASE_EQU
2  2241								 CW	 $EXECUTE
3  2242	00000ACF  20001A9D					 DD	 $EXECUTE + DESIRED_BASE_EQU
2  2243								 CW	 $EXIT
3  2244	00000AD3  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  2245
2  2246					 ;  DO-COMP-DEFINED
2  2247								 $COLON	 'DO-COMP-DEFINED',$DO_COMP_DEFINED
4  2248	00000AD7			 ??0104:
4  2249	00000AD7  00						   DB	 VEF_USUAL
4  2250	00000AD8  0F						 DB	 ??0105	- $ - 1
4  2251	00000AD9  44 4F	2D 43 4F 4D 50+				 DB	 'DO-COMP-DEFINED'
   2252		  2D 44	45 46 49 4E 45+
   2253		  44
4  2254	00000AE8			 ??0105:
4  2255	00000AE8  11						 DB	 ??0105	- ??0104
4  2256	00000AE9  20000A7E					 DD	 VOC_LINK
4  2257	00000AED						   LABEL   $DO_COMP_DEFINED FAR
4  2258	00000AED  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  2259	00000AF1			 ??0107:
2  2260								 CW	 $ZEROGR
3  2261	00000AF1  200016ED					 DD	 $ZEROGR + DESIRED_BASE_EQU
2  2262								 CW	 $QBRANCH
3  2263	00000AF5  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2264								 CW	 DCD_NOT_IMMEDIATE
3  2265	00000AF9  20000B09					 DD	 DCD_NOT_IMMEDIATE + DESIRED_BASE_EQU
2  2266								   CW	   $EXECUTE
3  2267	00000AFD  20001A9D					 DD	 $EXECUTE + DESIRED_BASE_EQU
2  2268								 CW	 $BRANCH
3  2269	00000B01  2000005C					 DD	 $BRANCH + DESIRED_BASE_EQU
2  2270								 CW	 DCD_EXIT
3  2271	00000B05  20000B0D					 DD	 DCD_EXIT + DESIRED_BASE_EQU
2  2272	00000B09			 DCD_NOT_IMMEDIATE:
2  2273								   CW	   $COMPILEC
3  2274	00000B09  20001E53					 DD	 $COMPILEC + DESIRED_BASE_EQU
2  2275	00000B0D			 DCD_EXIT:
2  2276								 CW	 $EXIT
3  2277	00000B0D  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  2278
2  2279					 ;  DO-DEFINED
2  2280								 $COLON	 'DO-DEFINED',$DO_DEFINED
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 41
meta.asm



4  2281	00000B11			 ??0108:
4  2282	00000B11  00						   DB	 VEF_USUAL
4  2283	00000B12  0A						 DB	 ??0109	- $ - 1
4  2284	00000B13  44 4F	2D 44 45 46 49+				 DB	 'DO-DEFINED'
   2285		  4E 45	44
4  2286	00000B1D			 ??0109:
4  2287	00000B1D  0C						 DB	 ??0109	- ??0108
4  2288	00000B1E  20000AD7					 DD	 VOC_LINK
4  2289	00000B22						   LABEL   $DO_DEFINED FAR
4  2290	00000B22  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  2291	00000B26			 ??010B:
2  2292								 CW	 $STATE
3  2293	00000B26  20000371					 DD	 $STATE	+ DESIRED_BASE_EQU
2  2294								 CW	 $FETCH
3  2295	00000B2A  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  2296								 CW	 $QBRANCH
3  2297	00000B2E  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2298								 CW	 DD_INTERPRETATION
3  2299	00000B32  20000B42					 DD	 DD_INTERPRETATION + DESIRED_BASE_EQU
2  2300								   CW	   $DO_COMP_DEFINED
3  2301	00000B36  20000AED					 DD	 $DO_COMP_DEFINED + DESIRED_BASE_EQU
2  2302								 CW	 $BRANCH
3  2303	00000B3A  2000005C					 DD	 $BRANCH + DESIRED_BASE_EQU
2  2304								 CW	 DD_EXIT
3  2305	00000B3E  20000B46					 DD	 DD_EXIT + DESIRED_BASE_EQU
2  2306	00000B42			 DD_INTERPRETATION:
2  2307								   CW	   $DO_INT_DEFINED
3  2308	00000B42  20000A93					 DD	 $DO_INT_DEFINED + DESIRED_BASE_EQU
2  2309	00000B46			 DD_EXIT:
2  2310								 CW	 $EXIT
3  2311	00000B46  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  2312
2  2313					 ;  IL-CHECK-SIGN
2  2314					 ;  ( C-ADDR --	C-ADDR U )
2  2315								 $COLON	 'IL-CHECK-SIGN',$ILCS
4  2316	00000B4A			 ??010C:
4  2317	00000B4A  00						   DB	 VEF_USUAL
4  2318	00000B4B  0D						 DB	 ??010D	- $ - 1
4  2319	00000B4C  49 4C	2D 43 48 45 43+				 DB	 'IL-CHECK-SIGN'
   2320		  4B 2D	53 49 47 4E
4  2321	00000B59			 ??010D:
4  2322	00000B59  0F						 DB	 ??010D	- ??010C
4  2323	00000B5A  20000B11					 DD	 VOC_LINK
4  2324	00000B5E						   LABEL   $ILCS FAR
4  2325	00000B5E  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  2326	00000B62			 ??010F:
2  2327								 CW	 $FALSE
3  2328	00000B62  200015D3					 DD	 $FALSE	+ DESIRED_BASE_EQU
2  2329								 CW	 $TONUMBER_SIGNED
3  2330	00000B66  20000A76					 DD	 $TONUMBER_SIGNED + DESIRED_BASE_EQU
2  2331								 CW	 $STORE
3  2332	00000B6A  20001754					 DD	 $STORE	+ DESIRED_BASE_EQU
2  2333								 CW	 $COUNT
3  2334	00000B6E  20001FF6					 DD	 $COUNT	+ DESIRED_BASE_EQU
2  2335								 CW	 $OVER
3  2336	00000B72  200011BD					 DD	 $OVER + DESIRED_BASE_EQU
2  2337								 CW	 $CFETCH
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 42
meta.asm



3  2338	00000B76  200017C4					 DD	 $CFETCH + DESIRED_BASE_EQU
2  2339								 CW	 $DUP
3  2340	00000B7A  2000118F					 DD	 $DUP +	DESIRED_BASE_EQU
2  2341								 CW	 $LIT
3  2342	00000B7E  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  2343								 CC	 '-'
3  2344	00000B82  0000002D					 DD	 '-'
2  2345								 CW	 $NOEQ
3  2346	00000B86  20001663					 DD	 $NOEQ + DESIRED_BASE_EQU
2  2347								 CW	 $QBRANCH
3  2348	00000B8A  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2349								 CW	 ILCS_SIGNED
3  2350	00000B8E  20000BAE					 DD	 ILCS_SIGNED + DESIRED_BASE_EQU
2  2351								 CW	 $LIT
3  2352	00000B92  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  2353								 CC	 '+'
3  2354	00000B96  0000002B					 DD	 '+'
2  2355								 CW	 $NOEQ
3  2356	00000B9A  20001663					 DD	 $NOEQ + DESIRED_BASE_EQU
2  2357								 CW	 $QBRANCH
3  2358	00000B9E  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2359								 CW	 ILCS_UNSIGNED
3  2360	00000BA2  20000BBE					 DD	 ILCS_UNSIGNED + DESIRED_BASE_EQU
2  2361								 CW	 $BRANCH
3  2362	00000BA6  2000005C					 DD	 $BRANCH + DESIRED_BASE_EQU
2  2363								 CW	 ILCS_EXIT
3  2364	00000BAA  20000BCE					 DD	 ILCS_EXIT + DESIRED_BASE_EQU
2  2365	00000BAE			 ILCS_SIGNED:
2  2366								 CW	 $DROP
3  2367	00000BAE  2000117B					 DD	 $DROP + DESIRED_BASE_EQU
2  2368								 CW	 $TRUE
3  2369	00000BB2  200015E9					 DD	 $TRUE + DESIRED_BASE_EQU
2  2370								 CW	 $TONUMBER_SIGNED
3  2371	00000BB6  20000A76					 DD	 $TONUMBER_SIGNED + DESIRED_BASE_EQU
2  2372								 CW	 $STORE
3  2373	00000BBA  20001754					 DD	 $STORE	+ DESIRED_BASE_EQU
2  2374	00000BBE			 ILCS_UNSIGNED:
2  2375								 CW	 $SWAP
3  2376	00000BBE  200011EF					 DD	 $SWAP + DESIRED_BASE_EQU
2  2377								 CW	 $CHARADD
3  2378	00000BC2  20001814					 DD	 $CHARADD + DESIRED_BASE_EQU
2  2379								 CW	 $SWAP
3  2380	00000BC6  200011EF					 DD	 $SWAP + DESIRED_BASE_EQU
2  2381								 CW	 $1SUB
3  2382	00000BCA  20001400					 DD	 $1SUB + DESIRED_BASE_EQU
2  2383	00000BCE			 ILCS_EXIT:
2  2384								 CW	 $EXIT
3  2385	00000BCE  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  2386
2  2387					 ;  IL-CHECK-LIT
2  2388					 ;  ( C-ADDR U - N TRUE	| C-ADDR U FALSE )
2  2389								 $COLON	 'IL-CHECK-LIT',$ILCL
4  2390	00000BD2			 ??0110:
4  2391	00000BD2  00						   DB	 VEF_USUAL
4  2392	00000BD3  0C						 DB	 ??0111	- $ - 1
4  2393	00000BD4  49 4C	2D 43 48 45 43+				 DB	 'IL-CHECK-LIT'
   2394		  4B 2D	4C 49 54
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 43
meta.asm



4  2395	00000BE0			 ??0111:
4  2396	00000BE0  0E						 DB	 ??0111	- ??0110
4  2397	00000BE1  20000B4A					 DD	 VOC_LINK
4  2398	00000BE5						   LABEL   $ILCL FAR
4  2399	00000BE5  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  2400	00000BE9			 ??0113:
2  2401								 CW	 $ZERO
3  2402	00000BE9  20000187					 DD	 $ZERO + DESIRED_BASE_EQU
2  2403								 CW	 $DUP
3  2404	00000BED  2000118F					 DD	 $DUP +	DESIRED_BASE_EQU
2  2405								 CW	 $2SWAP
3  2406	00000BF1  2000115F					 DD	 $2SWAP	+ DESIRED_BASE_EQU
2  2407								 CW	 $TONUMBER
3  2408	00000BF5  200021BD					 DD	 $TONUMBER + DESIRED_BASE_EQU
2  2409								 CW	 $DUP
3  2410	00000BF9  2000118F					 DD	 $DUP +	DESIRED_BASE_EQU
2  2411								 CW	 $ZEROEQ
3  2412	00000BFD  200016A8					 DD	 $ZEROEQ + DESIRED_BASE_EQU
2  2413								 CW	 $QBRANCH
3  2414	00000C01  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2415								 CW	 ILCL_NO
3  2416	00000C05  20000C31					 DD	 ILCL_NO + DESIRED_BASE_EQU
2  2417								   CW	   $2DROP
3  2418	00000C09  2000110C					 DD	 $2DROP	+ DESIRED_BASE_EQU
2  2419								   CW	   $DROP
3  2420	00000C0D  2000117B					 DD	 $DROP + DESIRED_BASE_EQU
2  2421								   CW	   $TONUMBER_SIGNED
3  2422	00000C11  20000A76					 DD	 $TONUMBER_SIGNED + DESIRED_BASE_EQU
2  2423								   CW	   $FETCH
3  2424	00000C15  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  2425								   CW	   $QBRANCH
3  2426	00000C19  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2427								   CW	   ILCL_UNSIGNED
3  2428	00000C1D  20000C25					 DD	 ILCL_UNSIGNED + DESIRED_BASE_EQU
2  2429								     CW	     $NEGATE
3  2430	00000C21  200014AE					 DD	 $NEGATE + DESIRED_BASE_EQU
2  2431	00000C25			 ILCL_UNSIGNED:
2  2432								   CW	   $TRUE
3  2433	00000C25  200015E9					 DD	 $TRUE + DESIRED_BASE_EQU
2  2434								 CW	 $BRANCH
3  2435	00000C29  2000005C					 DD	 $BRANCH + DESIRED_BASE_EQU
2  2436								 CW	 ILCL_EXIT
3  2437	00000C2D  20000C35					 DD	 ILCL_EXIT + DESIRED_BASE_EQU
2  2438	00000C31			 ILCL_NO:
2  2439								   CW	   $FALSE
3  2440	00000C31  200015D3					 DD	 $FALSE	+ DESIRED_BASE_EQU
2  2441	00000C35			 ILCL_EXIT:
2  2442								 CW	 $EXIT
3  2443	00000C35  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  2444
2  2445					 ;  DO-LIT
2  2446								 $COLON	 'DO-LIT',$DO_LIT
4  2447	00000C39			 ??0114:
4  2448	00000C39  00						   DB	 VEF_USUAL
4  2449	00000C3A  06						 DB	 ??0115	- $ - 1
4  2450	00000C3B  44 4F	2D 4C 49 54				 DB	 'DO-LIT'
4  2451	00000C41			 ??0115:
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 44
meta.asm



4  2452	00000C41  08						 DB	 ??0115	- ??0114
4  2453	00000C42  20000BD2					 DD	 VOC_LINK
4  2454	00000C46						   LABEL   $DO_LIT FAR
4  2455	00000C46  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  2456	00000C4A			 ??0117:
2  2457								 CW	 $STATE
3  2458	00000C4A  20000371					 DD	 $STATE	+ DESIRED_BASE_EQU
2  2459								 CW	 $FETCH
3  2460	00000C4E  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  2461								 CW	 $QBRANCH
3  2462	00000C52  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2463								 CW	 DL_EXIT
3  2464	00000C56  20000C5E					 DD	 DL_EXIT + DESIRED_BASE_EQU
2  2465								   CW	   $LITERAL
3  2466	00000C5A  20001F10					 DD	 $LITERAL + DESIRED_BASE_EQU
2  2467	00000C5E			 DL_EXIT:
2  2468								 CW	 $EXIT
3  2469	00000C5E  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  2470
2  2471					 ;  IL-CHECK-2LIT
2  2472					 ;  ( D	C-ADDR U - D TRUE | FALSE )
2  2473								 $COLON	 'IL-CHECK-2LIT',$ILC2L
4  2474	00000C62			 ??0118:
4  2475	00000C62  00						   DB	 VEF_USUAL
4  2476	00000C63  0D						 DB	 ??0119	- $ - 1
4  2477	00000C64  49 4C	2D 43 48 45 43+				 DB	 'IL-CHECK-2LIT'
   2478		  4B 2D	32 4C 49 54
4  2479	00000C71			 ??0119:
4  2480	00000C71  0F						 DB	 ??0119	- ??0118
4  2481	00000C72  20000C39					 DD	 VOC_LINK
4  2482	00000C76						   LABEL   $ILC2L FAR
4  2483	00000C76  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  2484	00000C7A			 ??011B:
2  2485								 CW	 $1SUB
3  2486	00000C7A  20001400					 DD	 $1SUB + DESIRED_BASE_EQU
2  2487								 CW	 $ZEROEQ
3  2488	00000C7E  200016A8					 DD	 $ZEROEQ + DESIRED_BASE_EQU
2  2489								 CW	 $QBRANCH
3  2490	00000C82  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2491								 CW	 ILC2L_EXIT2
3  2492	00000C86  20000CC2					 DD	 ILC2L_EXIT2 + DESIRED_BASE_EQU
2  2493								 CW	 $CFETCH
3  2494	00000C8A  200017C4					 DD	 $CFETCH + DESIRED_BASE_EQU
2  2495								 CW	 $LIT
3  2496	00000C8E  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  2497								 CC	 '.'
3  2498	00000C92  0000002E					 DD	 '.'
2  2499								 CW	 $EQ
3  2500	00000C96  20001640					 DD	 $EQ + DESIRED_BASE_EQU
2  2501								 CW	 $QBRANCH
3  2502	00000C9A  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2503								 CW	 ILC2L_EXIT1
3  2504	00000C9E  20000CC6					 DD	 ILC2L_EXIT1 + DESIRED_BASE_EQU
2  2505								 CW	 $TONUMBER_SIGNED
3  2506	00000CA2  20000A76					 DD	 $TONUMBER_SIGNED + DESIRED_BASE_EQU
2  2507								 CW	 $FETCH
3  2508	00000CA6  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 45
meta.asm



2  2509								 CW	 $QBRANCH
3  2510	00000CAA  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2511								 CW	 ILC2L_UNSIGNED
3  2512	00000CAE  20000CB6					 DD	 ILC2L_UNSIGNED	+ DESIRED_BASE_EQU
2  2513								 CW	 $DNEGATE
3  2514	00000CB2  20002123					 DD	 $DNEGATE + DESIRED_BASE_EQU
2  2515	00000CB6			 ILC2L_UNSIGNED:
2  2516								 CW	 $TRUE
3  2517	00000CB6  200015E9					 DD	 $TRUE + DESIRED_BASE_EQU
2  2518								 CW	 $BRANCH
3  2519	00000CBA  2000005C					 DD	 $BRANCH + DESIRED_BASE_EQU
2  2520								 CW	 ILC2L_EXIT
3  2521	00000CBE  20000CCE					 DD	 ILC2L_EXIT + DESIRED_BASE_EQU
2  2522	00000CC2			 ILC2L_EXIT2:
2  2523								 CW	 $DROP
3  2524	00000CC2  2000117B					 DD	 $DROP + DESIRED_BASE_EQU
2  2525	00000CC6			 ILC2L_EXIT1:
2  2526								 CW	 $2DROP
3  2527	00000CC6  2000110C					 DD	 $2DROP	+ DESIRED_BASE_EQU
2  2528								 CW	 $FALSE
3  2529	00000CCA  200015D3					 DD	 $FALSE	+ DESIRED_BASE_EQU
2  2530	00000CCE			 ILC2L_EXIT:
2  2531								 CW	 $EXIT
3  2532	00000CCE  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  2533
2  2534					 ;  DO-2LIT
2  2535								 $COLON	 'DO-2LIT',$DO_2LIT
4  2536	00000CD2			 ??011C:
4  2537	00000CD2  00						   DB	 VEF_USUAL
4  2538	00000CD3  07						 DB	 ??011D	- $ - 1
4  2539	00000CD4  44 4F	2D 32 4C 49 54				 DB	 'DO-2LIT'
4  2540	00000CDB			 ??011D:
4  2541	00000CDB  09						 DB	 ??011D	- ??011C
4  2542	00000CDC  20000C62					 DD	 VOC_LINK
4  2543	00000CE0						   LABEL   $DO_2LIT FAR
4  2544	00000CE0  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  2545	00000CE4			 ??011F:
2  2546								 CW	 $STATE
3  2547	00000CE4  20000371					 DD	 $STATE	+ DESIRED_BASE_EQU
2  2548								 CW	 $FETCH
3  2549	00000CE8  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  2550								 CW	 $QBRANCH
3  2551	00000CEC  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2552								 CW	 D2L_EXIT
3  2553	00000CF0  20000CF8					 DD	 D2L_EXIT + DESIRED_BASE_EQU
2  2554								   CW	   $2LITERAL
3  2555	00000CF4  20002015					 DD	 $2LITERAL + DESIRED_BASE_EQU
2  2556	00000CF8			 D2L_EXIT:
2  2557								 CW	 $EXIT
3  2558	00000CF8  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  2559
2  2560					 ;  INTERPRET-LITERAL
2  2561					 ;  ( C-ADDR --	)
2  2562								 $COLON	 'INTERPRET-LITERAL',$INTERPRET_LITERAL
4  2563	00000CFC			 ??0120:
4  2564	00000CFC  00						   DB	 VEF_USUAL
4  2565	00000CFD  11						 DB	 ??0121	- $ - 1
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 46
meta.asm



4  2566	00000CFE  49 4E	54 45 52 50 52+				 DB	 'INTERPRET-LITERAL'
   2567		  45 54	2D 4C 49 54 45+
   2568		  52 41	4C
4  2569	00000D0F			 ??0121:
4  2570	00000D0F  13						 DB	 ??0121	- ??0120
4  2571	00000D10  20000CD2					 DD	 VOC_LINK
4  2572	00000D14						   LABEL   $INTERPRET_LITERAL FAR
4  2573	00000D14  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  2574	00000D18			 ??0123:
2  2575								 CW	 $ILCS
3  2576	00000D18  20000B5E					 DD	 $ILCS + DESIRED_BASE_EQU
2  2577								 CW	 $ILCL
3  2578	00000D1C  20000BE5					 DD	 $ILCL + DESIRED_BASE_EQU
2  2579								 CW	 $QBRANCH
3  2580	00000D20  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2581								 CW	 IL_CHECK_2LIT
3  2582	00000D24  20000D34					 DD	 IL_CHECK_2LIT + DESIRED_BASE_EQU
2  2583								   CW	   $DO_LIT
3  2584	00000D28  20000C46					 DD	 $DO_LIT + DESIRED_BASE_EQU
2  2585								   CW	   $TRUE
3  2586	00000D2C  200015E9					 DD	 $TRUE + DESIRED_BASE_EQU
2  2587								   CW	   $EXIT
3  2588	00000D30  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  2589	00000D34			 IL_CHECK_2LIT:
2  2590								 CW	 $ILC2L
3  2591	00000D34  20000C76					 DD	 $ILC2L	+ DESIRED_BASE_EQU
2  2592								 CW	 $QBRANCH
3  2593	00000D38  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2594								 CW	 IL_UNKNOWN
3  2595	00000D3C  20000D4C					 DD	 IL_UNKNOWN + DESIRED_BASE_EQU
2  2596								   CW	   $DO_2LIT
3  2597	00000D40  20000CE0					 DD	 $DO_2LIT + DESIRED_BASE_EQU
2  2598								   CW	   $TRUE
3  2599	00000D44  200015E9					 DD	 $TRUE + DESIRED_BASE_EQU
2  2600								   CW	   $EXIT
3  2601	00000D48  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  2602	00000D4C			 IL_UNKNOWN:
2  2603								 CW	 $FALSE
3  2604	00000D4C  200015D3					 DD	 $FALSE	+ DESIRED_BASE_EQU
2  2605								 CW	 $EXIT
3  2606	00000D50  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  2607
2  2608					 ;  INTERPRET-WORD
2  2609					 ;  ( C-ADDR --	)
2  2610								 $COLON	 'INTERPRET-WORD',$INTERPRET_WORD
4  2611	00000D54			 ??0124:
4  2612	00000D54  00						   DB	 VEF_USUAL
4  2613	00000D55  0E						 DB	 ??0125	- $ - 1
4  2614	00000D56  49 4E	54 45 52 50 52+				 DB	 'INTERPRET-WORD'
   2615		  45 54	2D 57 4F 52 44
4  2616	00000D64			 ??0125:
4  2617	00000D64  10						 DB	 ??0125	- ??0124
4  2618	00000D65  20000CFC					 DD	 VOC_LINK
4  2619	00000D69						   LABEL   $INTERPRET_WORD FAR
4  2620	00000D69  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  2621	00000D6D			 ??0127:
2  2622								 CW	 $FIND
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 47
meta.asm



3  2623	00000D6D  20001A20					 DD	 $FIND + DESIRED_BASE_EQU
2  2624								 CW	 $QDUP
3  2625	00000D71  200010EF					 DD	 $QDUP + DESIRED_BASE_EQU
2  2626								 CW	 $QBRANCH
3  2627	00000D75  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2628								 CW	 IW_NOT_FOUND
3  2629	00000D79  20000D89					 DD	 IW_NOT_FOUND +	DESIRED_BASE_EQU
2  2630								   CW	   $DO_DEFINED
3  2631	00000D7D  20000B22					 DD	 $DO_DEFINED + DESIRED_BASE_EQU
2  2632								 CW	 $BRANCH
3  2633	00000D81  2000005C					 DD	 $BRANCH + DESIRED_BASE_EQU
2  2634								 CW	 IW_EXIT
3  2635	00000D85  20000DA5					 DD	 IW_EXIT + DESIRED_BASE_EQU
2  2636	00000D89			 IW_NOT_FOUND:
2  2637								   CW	   $INTERPRET_LITERAL
3  2638	00000D89  20000D14					 DD	 $INTERPRET_LITERAL + DESIRED_BASE_EQU
2  2639								   CW	   $INVERT
3  2640	00000D8D  20001533					 DD	 $INVERT + DESIRED_BASE_EQU
2  2641								   CW	   $QBRANCH
3  2642	00000D91  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2643								   CW	   IW_EXIT
3  2644	00000D95  20000DA5					 DD	 IW_EXIT + DESIRED_BASE_EQU
2  2645								     CW	     $LIT
3  2646	00000D99  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  2647								     CC	     -13
3  2648	00000D9D  FFFFFFF3					 DD	 -13
2  2649								     CW	     $THROW
3  2650	00000DA1  20002320					 DD	 $THROW	+ DESIRED_BASE_EQU
2  2651	00000DA5			 IW_EXIT:
2  2652								 CW	 $EXIT
3  2653	00000DA5  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  2654
2  2655					 ;  INTERPRET
2  2656								 $COLON	 'INTERPRET',$INTERPRET
4  2657	00000DA9			 ??0128:
4  2658	00000DA9  00						   DB	 VEF_USUAL
4  2659	00000DAA  09						 DB	 ??0129	- $ - 1
4  2660	00000DAB  49 4E	54 45 52 50 52+				 DB	 'INTERPRET'
   2661		  45 54
4  2662	00000DB4			 ??0129:
4  2663	00000DB4  0B						 DB	 ??0129	- ??0128
4  2664	00000DB5  20000D54					 DD	 VOC_LINK
4  2665	00000DB9						   LABEL   $INTERPRET FAR
4  2666	00000DB9  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  2667	00000DBD			 ??012B:
2  2668	00000DBD			 INT_LOOP:
2  2669								 CW	 $BL
3  2670	00000DBD  20000395					 DD	 $BL + DESIRED_BASE_EQU
2  2671								 CW	 $WORD			 ; c-addr
3  2672	00000DC1  20001C88					 DD	 $WORD + DESIRED_BASE_EQU
2  2673								 CW	 $DUP			 ; c-addr c-addr
3  2674	00000DC5  2000118F					 DD	 $DUP +	DESIRED_BASE_EQU
2  2675								 CW	 $COUNT			 ; c-addr c-addr1 count
3  2676	00000DC9  20001FF6					 DD	 $COUNT	+ DESIRED_BASE_EQU
2  2677								 CW	 $NIP			 ; c-addr count
3  2678	00000DCD  200011A6					 DD	 $NIP +	DESIRED_BASE_EQU
2  2679								 CW	 $QBRANCH
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 48
meta.asm



3  2680	00000DD1  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2681								 CW	 INT_EXIT		 ; exit	loop if	parse area is	    +
   2682					 exhausted
3  2683	00000DD5  20000DE5					 DD	 INT_EXIT + DESIRED_BASE_EQU
2  2684								   CW	   $INTERPRET_WORD
3  2685	00000DD9  20000D69					 DD	 $INTERPRET_WORD + DESIRED_BASE_EQU
2  2686								 CW	 $BRANCH
3  2687	00000DDD  2000005C					 DD	 $BRANCH + DESIRED_BASE_EQU
2  2688								 CW	 INT_LOOP
3  2689	00000DE1  20000DBD					 DD	 INT_LOOP + DESIRED_BASE_EQU
2  2690	00000DE5			 INT_EXIT:
2  2691								 CW	 $DROP
3  2692	00000DE5  2000117B					 DD	 $DROP + DESIRED_BASE_EQU
2  2693								 CW	 $EXIT
3  2694	00000DE9  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  2695
2  2696
1  2697								 INCLUDE "header.inc"
2  2698					 ;******************************************************************************
2  2699					 ;
2  2700					 ;  ik.inc
2  2701					 ;  IKForth
2  2702					 ;
2  2703					 ;  Copyright (C) 1999-2001 Illya Kysil
2  2704					 ;
2  2705					 ;******************************************************************************
2  2706					 ;  HEADER & support words
2  2707					 ;******************************************************************************
2  2708
2  2709					 ;  CREATE-REPORT
2  2710								 $VAR	 'CREATE-REPORT',$CREATE_REPORT
4  2711	00000DED			 ??012C:
4  2712	00000DED  00						   DB	 VEF_USUAL
4  2713	00000DEE  0D						 DB	 ??012D	- $ - 1
4  2714	00000DEF  43 52	45 41 54 45 2D+				 DB	 'CREATE-REPORT'
   2715		  52 45	50 4F 52 54
4  2716	00000DFC			 ??012D:
4  2717	00000DFC  0F						 DB	 ??012D	- ??012C
4  2718	00000DFD  20000DA9					 DD	 VOC_LINK
4  2719	00000E01						   LABEL   $CREATE_REPORT FAR
4  2720	00000E01  200000AD					   DD	   $DOVAR + DESIRED_BASE_EQU
4  2721	00000E05			 ??012F:
2  2722								 CC	 FALSE
3  2723	00000E05  00000000					 DD	 FALSE
2  2724
2  2725					 ;  CREATE-WARN-ON-DUPLICATE
2  2726								 $VAR	 'CREATE-WARN-ON-DUPLICATE',$CREATE_WOD
4  2727	00000E09			 ??0130:
4  2728	00000E09  00						   DB	 VEF_USUAL
4  2729	00000E0A  18						 DB	 ??0131	- $ - 1
4  2730	00000E0B  43 52	45 41 54 45 2D+				 DB	 'CREATE-WARN-ON-DUPLICATE'
   2731		  57 41	52 4E 2D 4F 4E+
   2732		  2D 44	55 50 4C 49 43+
   2733		  41 54	45
4  2734	00000E23			 ??0131:
4  2735	00000E23  1A						 DB	 ??0131	- ??0130
4  2736	00000E24  20000DED					 DD	 VOC_LINK
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 49
meta.asm



4  2737	00000E28						   LABEL   $CREATE_WOD FAR
4  2738	00000E28  200000AD					   DD	   $DOVAR + DESIRED_BASE_EQU
4  2739	00000E2C			 ??0133:
2  2740								 CC	 FALSE
3  2741	00000E2C  00000000					 DD	 FALSE
2  2742
2  2743					 ;  MAX-NAME-LENGTH
2  2744								 $VAR	 'MAX-NAME-LENGTH',$MAX_NAME_LENGTH
4  2745	00000E30			 ??0134:
4  2746	00000E30  00						   DB	 VEF_USUAL
4  2747	00000E31  0F						 DB	 ??0135	- $ - 1
4  2748	00000E32  4D 41	58 2D 4E 41 4D+				 DB	 'MAX-NAME-LENGTH'
   2749		  45 2D	4C 45 4E 47 54+
   2750		  48
4  2751	00000E41			 ??0135:
4  2752	00000E41  11						 DB	 ??0135	- ??0134
4  2753	00000E42  20000E09					 DD	 VOC_LINK
4  2754	00000E46						   LABEL   $MAX_NAME_LENGTH FAR
4  2755	00000E46  200000AD					   DD	   $DOVAR + DESIRED_BASE_EQU
4  2756	00000E4A			 ??0137:
2  2757								 CC	 MAX_NAME_LENGTH
3  2758	00000E4A  00000020					 DD	 MAX_NAME_LENGTH
2  2759
2  2760					 ;  LATEST@
2  2761					 ;  addr is the	link address of	the last compiled word in compilation wordlist.
2  2762					 ;  D: -- addr
2  2763								 $DEF	 'LATEST@',$LATEST_FETCH
3  2764	00000E4E			 ??0138:
3  2765	00000E4E  00						   DB	 VEF_USUAL
3  2766	00000E4F  07						 DB	 ??0139	- $ - 1
3  2767	00000E50  4C 41	54 45 53 54 40				 DB	 'LATEST@'
3  2768	00000E57			 ??0139:
3  2769	00000E57  09						 DB	 ??0139	- ??0138
3  2770	00000E58  20000E30					 DD	 VOC_LINK
3  2771	00000E5C						   LABEL   $LATEST_FETCH FAR
3  2772	00000E5C  20000E60					   DD	   ??013B + DESIRED_BASE_EQU
3  2773	00000E60			 ??013B:
2  2774	00000E60  8B 87	00000148				 MOV	 EAX,[DWORD PTR	EDI + CURRENT_VAR]	 ; get CURRENT wid
2  2775								 PUSHDS	 <[DWORD PTR EAX]>
3  2776	00000E66  FF 30						 PUSH	 [DWORD	PTR EAX]
2  2777								 $NEXT
3  2778	00000E68  AD						 LODSD				 ; fetch address
4  2779	00000E69  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  2780	00000E6B  FF E3						 JMP	 EBX			 ; execute
2  2781
2  2782					 ;  LATEST!
2  2783					 ;  addr is the	link address of	the last compiled word in compilation wordlist.
2  2784					 ;  D: addr --
2  2785								 $DEF	 'LATEST!',$LATEST_STORE
3  2786	00000E6D			 ??013C:
3  2787	00000E6D  00						   DB	 VEF_USUAL
3  2788	00000E6E  07						 DB	 ??013D	- $ - 1
3  2789	00000E6F  4C 41	54 45 53 54 21				 DB	 'LATEST!'
3  2790	00000E76			 ??013D:
3  2791	00000E76  09						 DB	 ??013D	- ??013C
3  2792	00000E77  20000E4E					 DD	 VOC_LINK
3  2793	00000E7B						   LABEL   $LATEST_STORE FAR
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 50
meta.asm



3  2794	00000E7B  20000E7F					   DD	   ??013F + DESIRED_BASE_EQU
3  2795	00000E7F			 ??013F:
2  2796	00000E7F  8B 87	00000148				 MOV	 EAX,[DWORD PTR	EDI + CURRENT_VAR]	 ; get CURRENT wid
2  2797								 POPDS	 <[DWORD PTR EAX]>
3  2798	00000E85  8F 00						 POP	 [DWORD	PTR EAX]
2  2799								 $NEXT
3  2800	00000E87  AD						 LODSD				 ; fetch address
4  2801	00000E88  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  2802	00000E8A  FF E3						 JMP	 EBX			 ; execute
2  2803
2  2804					 ;  CHECK-NAME
2  2805					 ;  D: c-addr count -- c-addr count
2  2806								 $COLON	 'CHECK-NAME',$CHECK_NAME
4  2807	00000E8C			 ??0140:
4  2808	00000E8C  00						   DB	 VEF_USUAL
4  2809	00000E8D  0A						 DB	 ??0141	- $ - 1
4  2810	00000E8E  43 48	45 43 4B 2D 4E+				 DB	 'CHECK-NAME'
   2811		  41 4D	45
4  2812	00000E98			 ??0141:
4  2813	00000E98  0C						 DB	 ??0141	- ??0140
4  2814	00000E99  20000E6D					 DD	 VOC_LINK
4  2815	00000E9D						   LABEL   $CHECK_NAME FAR
4  2816	00000E9D  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  2817	00000EA1			 ??0143:
2  2818								 CW	 $DUP
3  2819	00000EA1  2000118F					 DD	 $DUP +	DESIRED_BASE_EQU
2  2820								 CW	 $ZEROEQ
3  2821	00000EA5  200016A8					 DD	 $ZEROEQ + DESIRED_BASE_EQU
2  2822								 CW	 $QBRANCH
3  2823	00000EA9  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2824								 CW	 NAME_ZEROGR
3  2825	00000EAD  20000EBD					 DD	 NAME_ZEROGR + DESIRED_BASE_EQU
2  2826								   CW	   $LIT
3  2827	00000EB1  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  2828								   CC	   -16
3  2829	00000EB5  FFFFFFF0					 DD	 -16
2  2830								   CW	   $THROW
3  2831	00000EB9  20002320					 DD	 $THROW	+ DESIRED_BASE_EQU
2  2832	00000EBD			 NAME_ZEROGR:
2  2833								 CW	 $DUP
3  2834	00000EBD  2000118F					 DD	 $DUP +	DESIRED_BASE_EQU
2  2835								 CW	 $MAX_NAME_LENGTH
3  2836	00000EC1  20000E46					 DD	 $MAX_NAME_LENGTH + DESIRED_BASE_EQU
2  2837								 CW	 $FETCH
3  2838	00000EC5  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  2839								 CW	 $GR
3  2840	00000EC9  2000161E					 DD	 $GR + DESIRED_BASE_EQU
2  2841								 CW	 $QBRANCH
3  2842	00000ECD  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2843								 CW	 NAME_OK
3  2844	00000ED1  20000EE1					 DD	 NAME_OK + DESIRED_BASE_EQU
2  2845								   CW	   $LIT
3  2846	00000ED5  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  2847								   CC	   -19
3  2848	00000ED9  FFFFFFED					 DD	 -19
2  2849								   CW	   $THROW
3  2850	00000EDD  20002320					 DD	 $THROW	+ DESIRED_BASE_EQU
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 51
meta.asm



2  2851	00000EE1			 NAME_OK:
2  2852								 CW	 $EXIT
3  2853	00000EE1  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  2854
2  2855					 ;  REPORT-NAME
2  2856					 ;  D: c-addr count -- c-addr count
2  2857								 $COLON	 'REPORT-NAME',$REPORT_NAME
4  2858	00000EE5			 ??0144:
4  2859	00000EE5  00						   DB	 VEF_USUAL
4  2860	00000EE6  0B						 DB	 ??0145	- $ - 1
4  2861	00000EE7  52 45	50 4F 52 54 2D+				 DB	 'REPORT-NAME'
   2862		  4E 41	4D 45
4  2863	00000EF2			 ??0145:
4  2864	00000EF2  0D						 DB	 ??0145	- ??0144
4  2865	00000EF3  20000E8C					 DD	 VOC_LINK
4  2866	00000EF7						   LABEL   $REPORT_NAME	FAR
4  2867	00000EF7  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  2868	00000EFB			 ??0147:
2  2869								 CW	 $CREATE_REPORT
3  2870	00000EFB  20000E01					 DD	 $CREATE_REPORT	+ DESIRED_BASE_EQU
2  2871								 CW	 $FETCH
3  2872	00000EFF  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  2873								 CW	 $QBRANCH
3  2874	00000F03  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2875								 CW	 NO_REPORT
3  2876	00000F07  20000F19					 DD	 NO_REPORT + DESIRED_BASE_EQU
2  2877								   CW	   $2DUP
3  2878	00000F0B  20001122					 DD	 $2DUP + DESIRED_BASE_EQU
2  2879								   CW	   $TYPE
3  2880	00000F0F  20001888					 DD	 $TYPE + DESIRED_BASE_EQU
2  2881								   $WRITE  < >
4  2882	00000F13  200018B7					 DD	 $PTYPE	+ DESIRED_BASE_EQU
3  2883	00000F17  01 20						 DB	 @@0148	- $ - 1,' '
3  2884	00000F19			 @@0148:
2  2885	00000F19			 NO_REPORT:
2  2886								 CW	 $EXIT
3  2887	00000F19  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  2888
2  2889					 ;  CHECK-DUPLICATE-NAME
2  2890					 ;  D: c-addr count -- c-addr count
2  2891								 $COLON	 'CHECK-DUPLICATE-NAME',$CHECK_DUPLICATE_NAME
4  2892	00000F1D			 ??0149:
4  2893	00000F1D  00						   DB	 VEF_USUAL
4  2894	00000F1E  14						 DB	 ??014A	- $ - 1
4  2895	00000F1F  43 48	45 43 4B 2D 44+				 DB	 'CHECK-DUPLICATE-NAME'
   2896		  55 50	4C 49 43 41 54+
   2897		  45 2D	4E 41 4D 45
4  2898	00000F33			 ??014A:
4  2899	00000F33  16						 DB	 ??014A	- ??0149
4  2900	00000F34  20000EE5					 DD	 VOC_LINK
4  2901	00000F38						   LABEL   $CHECK_DUPLICATE_NAME FAR
4  2902	00000F38  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  2903	00000F3C			 ??014C:
2  2904								 CW	 $CREATE_WOD
3  2905	00000F3C  20000E28					 DD	 $CREATE_WOD + DESIRED_BASE_EQU
2  2906								 CW	 $FETCH
3  2907	00000F40  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 52
meta.asm



2  2908								 CW	 $QBRANCH
3  2909	00000F44  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2910								 CW	 CDN_OK
3  2911	00000F48  20000F8F					 DD	 CDN_OK	+ DESIRED_BASE_EQU
2  2912								 CW	 $2DUP
3  2913	00000F4C  20001122					 DD	 $2DUP + DESIRED_BASE_EQU
2  2914								 CW	 $CURRENT
3  2915	00000F50  200002EF					 DD	 $CURRENT + DESIRED_BASE_EQU
2  2916								 CW	 $FETCH
3  2917	00000F54  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  2918								 CW	 $SEARCH_WORDLIST	 ; c-addr u 0 |	c-addr u xt +/-1
3  2919	00000F58  20001916					 DD	 $SEARCH_WORDLIST + DESIRED_BASE_EQU
2  2920								 CW	 $ZERONOEQ
3  2921	00000F5C  200016CB					 DD	 $ZERONOEQ + DESIRED_BASE_EQU
2  2922								 CW	 $QBRANCH
3  2923	00000F60  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2924								 CW	 CDN_OK
3  2925	00000F64  20000F8F					 DD	 CDN_OK	+ DESIRED_BASE_EQU
2  2926								   CW	   $DROP
3  2927	00000F68  2000117B					 DD	 $DROP + DESIRED_BASE_EQU
2  2928								   $WRITE  <Redefinition of >
4  2929	00000F6C  200018B7					 DD	 $PTYPE	+ DESIRED_BASE_EQU
3  2930	00000F70  10 52	65 64 65 66 69+				 DB	 @@014D	- $ - 1,'Redefinition of '
   2931		  6E 69	74 69 6F 6E 20+
   2932		  6F 66	20
3  2933	00000F81			 @@014D:
2  2934								   CW	   $2DUP
3  2935	00000F81  20001122					 DD	 $2DUP + DESIRED_BASE_EQU
2  2936								   CW	   $TYPE
3  2937	00000F85  20001888					 DD	 $TYPE + DESIRED_BASE_EQU
2  2938								   $WRITE  < >
4  2939	00000F89  200018B7					 DD	 $PTYPE	+ DESIRED_BASE_EQU
3  2940	00000F8D  01 20						 DB	 @@014E	- $ - 1,' '
3  2941	00000F8F			 @@014E:
2  2942	00000F8F			 CDN_OK:
2  2943								 CW	 $EXIT
3  2944	00000F8F  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  2945
2  2946					 ;  (HEADER,)
2  2947					 ;  Compile header without CFA
2  2948					 ;  D: [ 0 0 | c-addr count ] flags --
2  2949								 $COLON	 '(HEADER,)',$PHEADERC
4  2950	00000F93			 ??014F:
4  2951	00000F93  00						   DB	 VEF_USUAL
4  2952	00000F94  09						 DB	 ??0150	- $ - 1
4  2953	00000F95  28 48	45 41 44 45 52+				 DB	 '(HEADER,)'
   2954		  2C 29
4  2955	00000F9E			 ??0150:
4  2956	00000F9E  0B						 DB	 ??0150	- ??014F
4  2957	00000F9F  20000F1D					 DD	 VOC_LINK
4  2958	00000FA3						   LABEL   $PHEADERC FAR
4  2959	00000FA3  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  2960	00000FA7			 ??0152:
2  2961								 CW	 $HERE
3  2962	00000FA7  20001F33					 DD	 $HERE + DESIRED_BASE_EQU
2  2963								 CW	 $TOR
3  2964	00000FAB  2000128F					 DD	 $TOR +	DESIRED_BASE_EQU
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 53
meta.asm



2  2965								 CW	 $CCOMMA		 ; compile flags
3  2966	00000FAF  20001E84					 DD	 $CCOMMA + DESIRED_BASE_EQU
2  2967								 CW	 $SWAP			 ; count c-addr
3  2968	00000FB3  200011EF					 DD	 $SWAP + DESIRED_BASE_EQU
2  2969								 CW	 $OVER			 ; count c-addr	count
3  2970	00000FB7  200011BD					 DD	 $OVER + DESIRED_BASE_EQU
2  2971								 CW	 $DUP
3  2972	00000FBB  2000118F					 DD	 $DUP +	DESIRED_BASE_EQU
2  2973								 CW	 $CCOMMA		 ; compile length
3  2974	00000FBF  20001E84					 DD	 $CCOMMA + DESIRED_BASE_EQU
2  2975								 CW	 $QDUP
3  2976	00000FC3  200010EF					 DD	 $QDUP + DESIRED_BASE_EQU
2  2977								 CW	 $QBRANCH
3  2978	00000FC7  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  2979								 CW	 NO_NAME
3  2980	00000FCB  20000FEB					 DD	 NO_NAME + DESIRED_BASE_EQU
2  2981								   CW	   $HERE		   ; count c-addr count	here
3  2982	00000FCF  20001F33					 DD	 $HERE + DESIRED_BASE_EQU
2  2983								   CW	   $SWAP		   ; count c-addr here count
3  2984	00000FD3  200011EF					 DD	 $SWAP + DESIRED_BASE_EQU
2  2985								   CW	   $DUP
3  2986	00000FD7  2000118F					 DD	 $DUP +	DESIRED_BASE_EQU
2  2987								   CW	   $ALLOT
3  2988	00000FDB  20001E6B					 DD	 $ALLOT	+ DESIRED_BASE_EQU
2  2989								   CW	   $CMOVE		   ; put name
3  2990	00000FDF  20001F4F					 DD	 $CMOVE	+ DESIRED_BASE_EQU
2  2991								 CW	 $BRANCH
3  2992	00000FE3  2000005C					 DD	 $BRANCH + DESIRED_BASE_EQU
2  2993								 CW	 NAME_EXIT
3  2994	00000FE7  20000FEF					 DD	 NAME_EXIT + DESIRED_BASE_EQU
2  2995	00000FEB			 NO_NAME:
2  2996								   CW	   $DROP
3  2997	00000FEB  2000117B					 DD	 $DROP + DESIRED_BASE_EQU
2  2998	00000FEF			 NAME_EXIT:
2  2999								 CW	 $LIT
3  3000	00000FEF  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  3001								 CC	 2
3  3002	00000FF3  00000002					 DD	 2
2  3003								 CW	 $ADD
3  3004	00000FF7  200013BE					 DD	 $ADD +	DESIRED_BASE_EQU
2  3005								 CW	 $CCOMMA		 ; compile (length + 2)
3  3006	00000FFB  20001E84					 DD	 $CCOMMA + DESIRED_BASE_EQU
2  3007								 CW	 $LATEST_FETCH
3  3008	00000FFF  20000E5C					 DD	 $LATEST_FETCH + DESIRED_BASE_EQU
2  3009								 CW	 $COMMA
3  3010	00001003  20001E2B					 DD	 $COMMA	+ DESIRED_BASE_EQU
2  3011								 CW	 $RFROM
3  3012	00001007  200012A8					 DD	 $RFROM	+ DESIRED_BASE_EQU
2  3013								 CW	 $LATEST_STORE
3  3014	0000100B  20000E7B					 DD	 $LATEST_STORE + DESIRED_BASE_EQU
2  3015								 CW	 $EXIT
3  3016	0000100F  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  3017
2  3018					 ;  (CFA,)
2  3019					 ;  Compile CFA	after (HEADER,)
2  3020					 ;  D: executor-xt | 0 -- xt
2  3021								 $COLON	 '(CFA,)',$PCFA_C
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 54
meta.asm



4  3022	00001013			 ??0153:
4  3023	00001013  00						   DB	 VEF_USUAL
4  3024	00001014  06						 DB	 ??0154	- $ - 1
4  3025	00001015  28 43	46 41 2C 29				 DB	 '(CFA,)'
4  3026	0000101B			 ??0154:
4  3027	0000101B  08						 DB	 ??0154	- ??0153
4  3028	0000101C  20000F93					 DD	 VOC_LINK
4  3029	00001020						   LABEL   $PCFA_C FAR
4  3030	00001020  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  3031	00001024			 ??0156:
2  3032								 CW	 $DUP
3  3033	00001024  2000118F					 DD	 $DUP +	DESIRED_BASE_EQU
2  3034								 CW	 $ZEROEQ
3  3035	00001028  200016A8					 DD	 $ZEROEQ + DESIRED_BASE_EQU
2  3036								 CW	 $QBRANCH
3  3037	0000102C  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  3038								 CW	 EXECUTOR_XT
3  3039	00001030  20001048					 DD	 EXECUTOR_XT + DESIRED_BASE_EQU
2  3040								   CW	   $DROP
3  3041	00001034  2000117B					 DD	 $DROP + DESIRED_BASE_EQU
2  3042								   CW	   $HERE
3  3043	00001038  20001F33					 DD	 $HERE + DESIRED_BASE_EQU
2  3044								   CW	   $LIT
3  3045	0000103C  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  3046								   CC	   CELL_SIZE
3  3047	00001040  00000004					 DD	 CELL_SIZE
2  3048								   CW	   $ADD
3  3049	00001044  200013BE					 DD	 $ADD +	DESIRED_BASE_EQU
2  3050	00001048			 EXECUTOR_XT:
2  3051								 CW	 $HERE
3  3052	00001048  20001F33					 DD	 $HERE + DESIRED_BASE_EQU
2  3053								 CW	 $SWAP
3  3054	0000104C  200011EF					 DD	 $SWAP + DESIRED_BASE_EQU
2  3055								 CW	 $COMMA
3  3056	00001050  20001E2B					 DD	 $COMMA	+ DESIRED_BASE_EQU
2  3057								 CW	 $EXIT
3  3058	00001054  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  3059
2  3060					 ;  HEADER,
2  3061					 ;  D: [ executor-xt | 0 ] [ 0 0 | c-addr count	] flags	-- xt
2  3062								 $COLON	 'HEADER,',$HEADERC
4  3063	00001058			 ??0157:
4  3064	00001058  00						   DB	 VEF_USUAL
4  3065	00001059  07						 DB	 ??0158	- $ - 1
4  3066	0000105A  48 45	41 44 45 52 2C				 DB	 'HEADER,'
4  3067	00001061			 ??0158:
4  3068	00001061  09						 DB	 ??0158	- ??0157
4  3069	00001062  20001013					 DD	 VOC_LINK
4  3070	00001066						   LABEL   $HEADERC FAR
4  3071	00001066  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  3072	0000106A			 ??015A:
2  3073								 CW	 $PHEADERC
3  3074	0000106A  20000FA3					 DD	 $PHEADERC + DESIRED_BASE_EQU
2  3075								 CW	 $PCFA_C
3  3076	0000106E  20001020					 DD	 $PCFA_C + DESIRED_BASE_EQU
2  3077								 CW	 $EXIT
3  3078	00001072  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 55
meta.asm



2  3079
2  3080					 ;  CHECK-HEADER,
2  3081					 ;  D: [ executor-xt | 0 ] [ 0 0 | c-addr count	] flags	-- xt
2  3082								 $COLON	 'CHECK-HEADER,',$CHECK_HEADERC
4  3083	00001076			 ??015B:
4  3084	00001076  00						   DB	 VEF_USUAL
4  3085	00001077  0D						 DB	 ??015C	- $ - 1
4  3086	00001078  43 48	45 43 4B 2D 48+				 DB	 'CHECK-HEADER,'
   3087		  45 41	44 45 52 2C
4  3088	00001085			 ??015C:
4  3089	00001085  0F						 DB	 ??015C	- ??015B
4  3090	00001086  20001058					 DD	 VOC_LINK
4  3091	0000108A						   LABEL   $CHECK_HEADERC FAR
4  3092	0000108A  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  3093	0000108E			 ??015E:
2  3094								 CW	 $TOR
3  3095	0000108E  2000128F					 DD	 $TOR +	DESIRED_BASE_EQU
2  3096								 CW	 $CHECK_NAME
3  3097	00001092  20000E9D					 DD	 $CHECK_NAME + DESIRED_BASE_EQU
2  3098								 CW	 $REPORT_NAME
3  3099	00001096  20000EF7					 DD	 $REPORT_NAME +	DESIRED_BASE_EQU
2  3100								 CW	 $CHECK_DUPLICATE_NAME
3  3101	0000109A  20000F38					 DD	 $CHECK_DUPLICATE_NAME + DESIRED_BASE_EQU
2  3102								 CW	 $RFROM
3  3103	0000109E  200012A8					 DD	 $RFROM	+ DESIRED_BASE_EQU
2  3104								 CW	 $HEADERC
3  3105	000010A2  20001066					 DD	 $HEADERC + DESIRED_BASE_EQU
2  3106								 CW	 $EXIT
3  3107	000010A6  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  3108
2  3109					 ;  PARSE-CHECK-HEADER,
2  3110					 ;  D: [ executor-xt | 0 ] flags "name"	-- xt
2  3111								 $COLON	 'PARSE-CHECK-HEADER,',$PARSE_CHECK_HEADERC
4  3112	000010AA			 ??015F:
4  3113	000010AA  00						   DB	 VEF_USUAL
4  3114	000010AB  13						 DB	 ??0160	- $ - 1
4  3115	000010AC  50 41	52 53 45 2D 43+				 DB	 'PARSE-CHECK-HEADER,'
   3116		  48 45	43 4B 2D 48 45+
   3117		  41 44	45 52 2C
4  3118	000010BF			 ??0160:
4  3119	000010BF  15						 DB	 ??0160	- ??015F
4  3120	000010C0  20001076					 DD	 VOC_LINK
4  3121	000010C4						   LABEL   $PARSE_CHECK_HEADERC	FAR
4  3122	000010C4  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  3123	000010C8			 ??0162:
2  3124								 CW	 $TOR
3  3125	000010C8  2000128F					 DD	 $TOR +	DESIRED_BASE_EQU
2  3126								 CW	 $BL
3  3127	000010CC  20000395					 DD	 $BL + DESIRED_BASE_EQU
2  3128								 CW	 $WORD
3  3129	000010D0  20001C88					 DD	 $WORD + DESIRED_BASE_EQU
2  3130								 CW	 $COUNT
3  3131	000010D4  20001FF6					 DD	 $COUNT	+ DESIRED_BASE_EQU
2  3132								 CW	 $RFROM
3  3133	000010D8  200012A8					 DD	 $RFROM	+ DESIRED_BASE_EQU
2  3134								 CW	 $CHECK_HEADERC
3  3135	000010DC  2000108A					 DD	 $CHECK_HEADERC	+ DESIRED_BASE_EQU
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 56
meta.asm



2  3136								 CW	 $EXIT
3  3137	000010E0  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  3138
1  3139								 INCLUDE "stack.inc"
2  3140					 ;******************************************************************************
2  3141					 ;
2  3142					 ;  stack.inc
2  3143					 ;  IKForth
2  3144					 ;
2  3145					 ;  Copyright (C) 1999-2001 Illya Kysil
2  3146					 ;
2  3147					 ;******************************************************************************
2  3148					 ;  Stack manipulation
2  3149					 ;******************************************************************************
2  3150
2  3151					 ;  6.1.0630 ?DUP
2  3152					 ;  Duplicate top stack	cell if	it is not equal	to zero
2  3153					 ;  D: a -- a |	a a
2  3154								 $DEF	 '?DUP',$QDUP
3  3155	000010E4			 ??0163:
3  3156	000010E4  00						   DB	 VEF_USUAL
3  3157	000010E5  04						 DB	 ??0164	- $ - 1
3  3158	000010E6  3F 44	55 50					 DB	 '?DUP'
3  3159	000010EA			 ??0164:
3  3160	000010EA  06						 DB	 ??0164	- ??0163
3  3161	000010EB  200010AA					 DD	 VOC_LINK
3  3162	000010EF						   LABEL   $QDUP FAR
3  3163	000010EF  200010F3					   DD	   ??0166 + DESIRED_BASE_EQU
3  3164	000010F3			 ??0166:
2  3165								 FETCHDS EAX
3  3166	000010F3  8B 04	24					   MOV	   EAX,[DWORD PTR ESP]
2  3167	000010F6  23 C0						 AND	 EAX,EAX
2  3168	000010F8  74 01						 JZ	 SHORT QDUPZERO
2  3169								 PUSHDS	 EAX
3  3170	000010FA  50						 PUSH	 EAX
2  3171	000010FB			 QDUPZERO:
2  3172								 $NEXT
3  3173	000010FB  AD						 LODSD				 ; fetch address
4  3174	000010FC  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3175	000010FE  FF E3						 JMP	 EBX			 ; execute
2  3176
2  3177					 ;  6.1.0370 2DROP
2  3178					 ;  D: a b --
2  3179								 $DEF	 '2DROP',$2DROP
3  3180	00001100			 ??0167:
3  3181	00001100  00						   DB	 VEF_USUAL
3  3182	00001101  05						 DB	 ??0168	- $ - 1
3  3183	00001102  32 44	52 4F 50				 DB	 '2DROP'
3  3184	00001107			 ??0168:
3  3185	00001107  07						 DB	 ??0168	- ??0167
3  3186	00001108  200010E4					 DD	 VOC_LINK
3  3187	0000110C						   LABEL   $2DROP FAR
3  3188	0000110C  20001110					   DD	   ??016A + DESIRED_BASE_EQU
3  3189	00001110			 ??016A:
2  3190								 POPDS	 EAX
3  3191	00001110  58						 POP	 EAX
2  3192								 POPDS	 EAX
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 57
meta.asm



3  3193	00001111  58						 POP	 EAX
2  3194								 $NEXT
3  3195	00001112  AD						 LODSD				 ; fetch address
4  3196	00001113  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3197	00001115  FF E3						 JMP	 EBX			 ; execute
2  3198
2  3199					 ;  6.1.0380 2DUP
2  3200					 ;  D: a b -- a	b a b
2  3201								 $DEF	 '2DUP',$2DUP
3  3202	00001117			 ??016B:
3  3203	00001117  00						   DB	 VEF_USUAL
3  3204	00001118  04						 DB	 ??016C	- $ - 1
3  3205	00001119  32 44	55 50					 DB	 '2DUP'
3  3206	0000111D			 ??016C:
3  3207	0000111D  06						 DB	 ??016C	- ??016B
3  3208	0000111E  20001100					 DD	 VOC_LINK
3  3209	00001122						   LABEL   $2DUP FAR
3  3210	00001122  20001126					   DD	   ??016E + DESIRED_BASE_EQU
3  3211	00001126			 ??016E:
2  3212								 FETCHDS EAX,1
3  3213	00001126  8B 44	24 04					   MOV	   EAX,[DWORD PTR ESP +	1 * CELL_SIZE]
2  3214								 FETCHDS EBX
3  3215	0000112A  8B 1C	24					   MOV	   EBX,[DWORD PTR ESP]
2  3216								 PUSHDS	 EAX
3  3217	0000112D  50						 PUSH	 EAX
2  3218								 PUSHDS	 EBX
3  3219	0000112E  53						 PUSH	 EBX
2  3220								 $NEXT
3  3221	0000112F  AD						 LODSD				 ; fetch address
4  3222	00001130  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3223	00001132  FF E3						 JMP	 EBX			 ; execute
2  3224
2  3225					 ;  6.1.0400 2OVER
2  3226					 ;  D: a b c d -- a b c	d a b
2  3227								 $DEF	 '2OVER',$2OVER
3  3228	00001134			 ??016F:
3  3229	00001134  00						   DB	 VEF_USUAL
3  3230	00001135  05						 DB	 ??0170	- $ - 1
3  3231	00001136  32 4F	56 45 52				 DB	 '2OVER'
3  3232	0000113B			 ??0170:
3  3233	0000113B  07						 DB	 ??0170	- ??016F
3  3234	0000113C  20001117					 DD	 VOC_LINK
3  3235	00001140						   LABEL   $2OVER FAR
3  3236	00001140  20001144					   DD	   ??0172 + DESIRED_BASE_EQU
3  3237	00001144			 ??0172:
2  3238								 FETCHDS EAX,3
3  3239	00001144  8B 44	24 0C					   MOV	   EAX,[DWORD PTR ESP +	3 * CELL_SIZE]
2  3240								 FETCHDS EBX,2
3  3241	00001148  8B 5C	24 08					   MOV	   EBX,[DWORD PTR ESP +	2 * CELL_SIZE]
2  3242								 PUSHDS	 EAX
3  3243	0000114C  50						 PUSH	 EAX
2  3244								 PUSHDS	 EBX
3  3245	0000114D  53						 PUSH	 EBX
2  3246								 $NEXT
3  3247	0000114E  AD						 LODSD				 ; fetch address
4  3248	0000114F  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3249	00001151  FF E3						 JMP	 EBX			 ; execute
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 58
meta.asm



2  3250
2  3251					 ;  6.1.0430 2SWAP
2  3252					 ;  D: a b c d -- c d a	b
2  3253								 $DEF	 '2SWAP',$2SWAP
3  3254	00001153			 ??0173:
3  3255	00001153  00						   DB	 VEF_USUAL
3  3256	00001154  05						 DB	 ??0174	- $ - 1
3  3257	00001155  32 53	57 41 50				 DB	 '2SWAP'
3  3258	0000115A			 ??0174:
3  3259	0000115A  07						 DB	 ??0174	- ??0173
3  3260	0000115B  20001134					 DD	 VOC_LINK
3  3261	0000115F						   LABEL   $2SWAP FAR
3  3262	0000115F  20001163					   DD	   ??0176 + DESIRED_BASE_EQU
3  3263	00001163			 ??0176:
2  3264								 POPDS	 EDX
3  3265	00001163  5A						 POP	 EDX
2  3266								 POPDS	 ECX
3  3267	00001164  59						 POP	 ECX
2  3268								 POPDS	 EBX
3  3269	00001165  5B						 POP	 EBX
2  3270								 POPDS	 EAX
3  3271	00001166  58						 POP	 EAX
2  3272								 PUSHDS	 ECX
3  3273	00001167  51						 PUSH	 ECX
2  3274								 PUSHDS	 EDX
3  3275	00001168  52						 PUSH	 EDX
2  3276								 PUSHDS	 EAX
3  3277	00001169  50						 PUSH	 EAX
2  3278								 PUSHDS	 EBX
3  3279	0000116A  53						 PUSH	 EBX
2  3280								 $NEXT
3  3281	0000116B  AD						 LODSD				 ; fetch address
4  3282	0000116C  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3283	0000116E  FF E3						 JMP	 EBX			 ; execute
2  3284
2  3285					 ;  6.1.1260 DROP
2  3286					 ;  Remove top cell from the stack
2  3287					 ;  D: a --
2  3288								 $DEF	 'DROP',$DROP
3  3289	00001170			 ??0177:
3  3290	00001170  00						   DB	 VEF_USUAL
3  3291	00001171  04						 DB	 ??0178	- $ - 1
3  3292	00001172  44 52	4F 50					 DB	 'DROP'
3  3293	00001176			 ??0178:
3  3294	00001176  06						 DB	 ??0178	- ??0177
3  3295	00001177  20001153					 DD	 VOC_LINK
3  3296	0000117B						   LABEL   $DROP FAR
3  3297	0000117B  2000117F					   DD	   ??017A + DESIRED_BASE_EQU
3  3298	0000117F			 ??017A:
2  3299								 POPDS	 EAX
3  3300	0000117F  58						 POP	 EAX
2  3301								 $NEXT
3  3302	00001180  AD						 LODSD				 ; fetch address
4  3303	00001181  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3304	00001183  FF E3						 JMP	 EBX			 ; execute
2  3305
2  3306					 ;  6.1.1290 DUP
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 59
meta.asm



2  3307					 ;  D: a -- a a
2  3308								 $DEF	 'DUP',$DUP
3  3309	00001185			 ??017B:
3  3310	00001185  00						   DB	 VEF_USUAL
3  3311	00001186  03						 DB	 ??017C	- $ - 1
3  3312	00001187  44 55	50					 DB	 'DUP'
3  3313	0000118A			 ??017C:
3  3314	0000118A  05						 DB	 ??017C	- ??017B
3  3315	0000118B  20001170					 DD	 VOC_LINK
3  3316	0000118F						   LABEL   $DUP	FAR
3  3317	0000118F  20001193					   DD	   ??017E + DESIRED_BASE_EQU
3  3318	00001193			 ??017E:
2  3319								 FETCHDS EAX
3  3320	00001193  8B 04	24					   MOV	   EAX,[DWORD PTR ESP]
2  3321								 PUSHDS	 EAX
3  3322	00001196  50						 PUSH	 EAX
2  3323								 $NEXT
3  3324	00001197  AD						 LODSD				 ; fetch address
4  3325	00001198  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3326	0000119A  FF E3						 JMP	 EBX			 ; execute
2  3327
2  3328					 ;  6.2.1930 NIP
2  3329					 ;  Drop the first item	below the top of stack.
2  3330					 ;  D: x1 x2 --	x2
2  3331								 $DEF	 'NIP',$NIP
3  3332	0000119C			 ??017F:
3  3333	0000119C  00						   DB	 VEF_USUAL
3  3334	0000119D  03						 DB	 ??0180	- $ - 1
3  3335	0000119E  4E 49	50					 DB	 'NIP'
3  3336	000011A1			 ??0180:
3  3337	000011A1  05						 DB	 ??0180	- ??017F
3  3338	000011A2  20001185					 DD	 VOC_LINK
3  3339	000011A6						   LABEL   $NIP	FAR
3  3340	000011A6  200011AA					   DD	   ??0182 + DESIRED_BASE_EQU
3  3341	000011AA			 ??0182:
2  3342								 POPDS	 EAX
3  3343	000011AA  58						 POP	 EAX
2  3344								 POPDS	 EBX
3  3345	000011AB  5B						 POP	 EBX
2  3346								 PUSHDS	 EAX
3  3347	000011AC  50						 PUSH	 EAX
2  3348								 $NEXT
3  3349	000011AD  AD						 LODSD				 ; fetch address
4  3350	000011AE  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3351	000011B0  FF E3						 JMP	 EBX			 ; execute
2  3352
2  3353					 ;  6.1.1990 OVER
2  3354					 ;  D: a b -- a	b a
2  3355								 $DEF	 'OVER',$OVER
3  3356	000011B2			 ??0183:
3  3357	000011B2  00						   DB	 VEF_USUAL
3  3358	000011B3  04						 DB	 ??0184	- $ - 1
3  3359	000011B4  4F 56	45 52					 DB	 'OVER'
3  3360	000011B8			 ??0184:
3  3361	000011B8  06						 DB	 ??0184	- ??0183
3  3362	000011B9  2000119C					 DD	 VOC_LINK
3  3363	000011BD						   LABEL   $OVER FAR
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 60
meta.asm



3  3364	000011BD  200011C1					   DD	   ??0186 + DESIRED_BASE_EQU
3  3365	000011C1			 ??0186:
2  3366								 FETCHDS EAX,1
3  3367	000011C1  8B 44	24 04					   MOV	   EAX,[DWORD PTR ESP +	1 * CELL_SIZE]
2  3368								 PUSHDS	 EAX
3  3369	000011C5  50						 PUSH	 EAX
2  3370								 $NEXT
3  3371	000011C6  AD						 LODSD				 ; fetch address
4  3372	000011C7  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3373	000011C9  FF E3						 JMP	 EBX			 ; execute
2  3374
2  3375					 ;  6.1.2160 ROT
2  3376					 ;  D: a b c --	b c a
2  3377								 $DEF	 'ROT',$ROT
3  3378	000011CB			 ??0187:
3  3379	000011CB  00						   DB	 VEF_USUAL
3  3380	000011CC  03						 DB	 ??0188	- $ - 1
3  3381	000011CD  52 4F	54					 DB	 'ROT'
3  3382	000011D0			 ??0188:
3  3383	000011D0  05						 DB	 ??0188	- ??0187
3  3384	000011D1  200011B2					 DD	 VOC_LINK
3  3385	000011D5						   LABEL   $ROT	FAR
3  3386	000011D5  200011D9					   DD	   ??018A + DESIRED_BASE_EQU
3  3387	000011D9			 ??018A:
2  3388								 POPDS	 ECX
3  3389	000011D9  59						 POP	 ECX
2  3390								 POPDS	 EBX
3  3391	000011DA  5B						 POP	 EBX
2  3392								 POPDS	 EAX
3  3393	000011DB  58						 POP	 EAX
2  3394								 PUSHDS	 EBX
3  3395	000011DC  53						 PUSH	 EBX
2  3396								 PUSHDS	 ECX
3  3397	000011DD  51						 PUSH	 ECX
2  3398								 PUSHDS	 EAX
3  3399	000011DE  50						 PUSH	 EAX
2  3400								 $NEXT
3  3401	000011DF  AD						 LODSD				 ; fetch address
4  3402	000011E0  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3403	000011E2  FF E3						 JMP	 EBX			 ; execute
2  3404
2  3405					 ;  6.1.2260 SWAP
2  3406					 ;  D: a b -- b	a
2  3407								 $DEF	 'SWAP',$SWAP
3  3408	000011E4			 ??018B:
3  3409	000011E4  00						   DB	 VEF_USUAL
3  3410	000011E5  04						 DB	 ??018C	- $ - 1
3  3411	000011E6  53 57	41 50					 DB	 'SWAP'
3  3412	000011EA			 ??018C:
3  3413	000011EA  06						 DB	 ??018C	- ??018B
3  3414	000011EB  200011CB					 DD	 VOC_LINK
3  3415	000011EF						   LABEL   $SWAP FAR
3  3416	000011EF  200011F3					   DD	   ??018E + DESIRED_BASE_EQU
3  3417	000011F3			 ??018E:
2  3418								 POPDS	 EAX
3  3419	000011F3  58						 POP	 EAX
2  3420								 POPDS	 EBX
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 61
meta.asm



3  3421	000011F4  5B						 POP	 EBX
2  3422								 PUSHDS	 EAX
3  3423	000011F5  50						 PUSH	 EAX
2  3424								 PUSHDS	 EBX
3  3425	000011F6  53						 PUSH	 EBX
2  3426								 $NEXT
3  3427	000011F7  AD						 LODSD				 ; fetch address
4  3428	000011F8  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3429	000011FA  FF E3						 JMP	 EBX			 ; execute
2  3430
2  3431					 ;  6.2.2030 PICK
2  3432					 ;  D: xu ... x1 x0 u -- xu ...	x1 x0 xu
2  3433					 ;  Remove u. Copy the xu to the top of	the stack. An ambiguous	condition exists
2  3434					 ;  if there are less than u+2 items on	the stack before PICK is executed.
2  3435								 $DEF	 'PICK',$PICK
3  3436	000011FC			 ??018F:
3  3437	000011FC  00						   DB	 VEF_USUAL
3  3438	000011FD  04						 DB	 ??0190	- $ - 1
3  3439	000011FE  50 49	43 4B					 DB	 'PICK'
3  3440	00001202			 ??0190:
3  3441	00001202  06						 DB	 ??0190	- ??018F
3  3442	00001203  200011E4					 DD	 VOC_LINK
3  3443	00001207						   LABEL   $PICK FAR
3  3444	00001207  2000120B					   DD	   ??0192 + DESIRED_BASE_EQU
3  3445	0000120B			 ??0192:
2  3446								 POPDS	 EBX
3  3447	0000120B  5B						 POP	 EBX
2  3448								 FETCHDS EAX,EBX
3  3449	0000120C  8B 04	9C					   MOV	   EAX,[DWORD PTR ESP +	EBX * CELL_SIZE]
2  3450								 PUSHDS	 EAX
3  3451	0000120F  50						 PUSH	 EAX
2  3452								 $NEXT
3  3453	00001210  AD						 LODSD				 ; fetch address
4  3454	00001211  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3455	00001213  FF E3						 JMP	 EBX			 ; execute
2  3456
2  3457					 ;  6.2.2300 TUCK
2  3458					 ;  D: x1 x2 --	x2 x1 x2
2  3459					 ;  Copy the first (top) stack item below the second stack item.
2  3460								 $DEF	 'TUCK',$TUCK
3  3461	00001215			 ??0193:
3  3462	00001215  00						   DB	 VEF_USUAL
3  3463	00001216  04						 DB	 ??0194	- $ - 1
3  3464	00001217  54 55	43 4B					 DB	 'TUCK'
3  3465	0000121B			 ??0194:
3  3466	0000121B  06						 DB	 ??0194	- ??0193
3  3467	0000121C  200011FC					 DD	 VOC_LINK
3  3468	00001220						   LABEL   $TUCK FAR
3  3469	00001220  20001224					   DD	   ??0196 + DESIRED_BASE_EQU
3  3470	00001224			 ??0196:
2  3471								 POPDS	 EAX
3  3472	00001224  58						 POP	 EAX
2  3473								 POPDS	 EBX
3  3474	00001225  5B						 POP	 EBX
2  3475								 PUSHDS	 EAX
3  3476	00001226  50						 PUSH	 EAX
2  3477								 PUSHDS	 EBX
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 62
meta.asm



3  3478	00001227  53						 PUSH	 EBX
2  3479								 PUSHDS	 EAX
3  3480	00001228  50						 PUSH	 EAX
2  3481								 $NEXT
3  3482	00001229  AD						 LODSD				 ; fetch address
4  3483	0000122A  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3484	0000122C  FF E3						 JMP	 EBX			 ; execute
2  3485
2  3486					 ;  DS-SIZE
2  3487								 $CONST	 'DS-SIZE'
4  3488	0000122E			 ??0197:
4  3489	0000122E  00						   DB	 VEF_USUAL
4  3490	0000122F  07						 DB	 ??0198	- $ - 1
4  3491	00001230  44 53	2D 53 49 5A 45				 DB	 'DS-SIZE'
4  3492	00001237			 ??0198:
4  3493	00001237  09						 DB	 ??0198	- ??0197
4  3494	00001238  20001215					 DD	 VOC_LINK
4  3495	0000123C  2000010E					   DD	   $DOCONST + DESIRED_BASE_EQU
4  3496	00001240			 ??019A:
2  3497								 CC	 DATA_STACK_SIZE
3  3498	00001240  00001000					 DD	 DATA_STACK_SIZE
2  3499
2  3500					 ;  SP0
2  3501								 $DEF	 'SP0',$SP0
3  3502	00001244			 ??019B:
3  3503	00001244  00						   DB	 VEF_USUAL
3  3504	00001245  03						 DB	 ??019C	- $ - 1
3  3505	00001246  53 50	30					 DB	 'SP0'
3  3506	00001249			 ??019C:
3  3507	00001249  05						 DB	 ??019C	- ??019B
3  3508	0000124A  2000122E					 DD	 VOC_LINK
3  3509	0000124E						   LABEL   $SP0	FAR
3  3510	0000124E  20001252					   DD	   ??019E + DESIRED_BASE_EQU
3  3511	00001252			 ??019E:
2  3512								 PUSHDS	 <[DWORD PTR EDI + ESP_VAR]>
3  3513	00001252  FF 77	14					 PUSH	 [DWORD	PTR EDI	+ ESP_VAR]
2  3514								 $NEXT
3  3515	00001255  AD						 LODSD				 ; fetch address
4  3516	00001256  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3517	00001258  FF E3						 JMP	 EBX			 ; execute
2  3518
2  3519					 ;  SP@
2  3520								 $DEF	 'SP@',$SPFETCH
3  3521	0000125A			 ??019F:
3  3522	0000125A  00						   DB	 VEF_USUAL
3  3523	0000125B  03						 DB	 ??01A0	- $ - 1
3  3524	0000125C  53 50	40					 DB	 'SP@'
3  3525	0000125F			 ??01A0:
3  3526	0000125F  05						 DB	 ??01A0	- ??019F
3  3527	00001260  20001244					 DD	 VOC_LINK
3  3528	00001264						   LABEL   $SPFETCH FAR
3  3529	00001264  20001268					   DD	   ??01A2 + DESIRED_BASE_EQU
3  3530	00001268			 ??01A2:
2  3531	00001268  8B C4						 MOV	 EAX,ESP
2  3532								 PUSHDS	 EAX
3  3533	0000126A  50						 PUSH	 EAX
2  3534								 $NEXT
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 63
meta.asm



3  3535	0000126B  AD						 LODSD				 ; fetch address
4  3536	0000126C  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3537	0000126E  FF E3						 JMP	 EBX			 ; execute
2  3538
2  3539					 ;  SP!
2  3540								 $DEF	 'SP!',$SPSTORE
3  3541	00001270			 ??01A3:
3  3542	00001270  00						   DB	 VEF_USUAL
3  3543	00001271  03						 DB	 ??01A4	- $ - 1
3  3544	00001272  53 50	21					 DB	 'SP!'
3  3545	00001275			 ??01A4:
3  3546	00001275  05						 DB	 ??01A4	- ??01A3
3  3547	00001276  2000125A					 DD	 VOC_LINK
3  3548	0000127A						   LABEL   $SPSTORE FAR
3  3549	0000127A  2000127E					   DD	   ??01A6 + DESIRED_BASE_EQU
3  3550	0000127E			 ??01A6:
2  3551								 POPDS	 EAX
3  3552	0000127E  58						 POP	 EAX
2  3553	0000127F  8B E0						 MOV	 ESP,EAX
2  3554								 $NEXT
3  3555	00001281  AD						 LODSD				 ; fetch address
4  3556	00001282  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3557	00001284  FF E3						 JMP	 EBX			 ; execute
2  3558
2  3559
1  3560								 INCLUDE "rstack.inc"
2  3561					 ;******************************************************************************
2  3562					 ;
2  3563					 ;  rstack.inc
2  3564					 ;  IKForth
2  3565					 ;
2  3566					 ;  Copyright (C) 1999-2001 Illya Kysil
2  3567					 ;
2  3568					 ;******************************************************************************
2  3569					 ;  Return stack manipulation
2  3570					 ;******************************************************************************
2  3571
2  3572					 ;  6.1.0580 >R
2  3573					 ;  Move value from the	data stack to return stack
2  3574					 ;  D: a --
2  3575					 ;  R:	 -- a
2  3576								 $DEF	 '>R',$TOR,,VEF_COMPILE_ONLY
3  3577	00001286			 ??01A7:
3  3578	00001286  04						   DB	 VEF_COMPILE_ONLY
3  3579	00001287  02						 DB	 ??01A8	- $ - 1
3  3580	00001288  3E 52						 DB	 '>R'
3  3581	0000128A			 ??01A8:
3  3582	0000128A  04						 DB	 ??01A8	- ??01A7
3  3583	0000128B  20001270					 DD	 VOC_LINK
3  3584	0000128F						   LABEL   $TOR	FAR
3  3585	0000128F  20001293					   DD	   ??01AA + DESIRED_BASE_EQU
3  3586	00001293			 ??01AA:
2  3587								 POPDS	 EAX
3  3588	00001293  58						 POP	 EAX
2  3589								 PUSHRS	 EAX
3  3590	00001294  83 ED	04					 SUB	 EBP,CELL_SIZE
3  3591	00001297  89 45	00					 MOV	 [DWORD	PTR EBP],EAX
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 64
meta.asm



2  3592								 $NEXT
3  3593	0000129A  AD						 LODSD				 ; fetch address
4  3594	0000129B  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3595	0000129D  FF E3						 JMP	 EBX			 ; execute
2  3596
2  3597					 ;  6.1.2060 R>
2  3598					 ;  Interpretation: Interpretation semantics for this word are undefined.
2  3599					 ;  Execution: ( -- x )	( R:  x	-- )
2  3600					 ;    Move x from the return stack to the data stack.
2  3601								 $DEF	 'R>',$RFROM,,VEF_COMPILE_ONLY
3  3602	0000129F			 ??01AB:
3  3603	0000129F  04						   DB	 VEF_COMPILE_ONLY
3  3604	000012A0  02						 DB	 ??01AC	- $ - 1
3  3605	000012A1  52 3E						 DB	 'R>'
3  3606	000012A3			 ??01AC:
3  3607	000012A3  04						 DB	 ??01AC	- ??01AB
3  3608	000012A4  20001286					 DD	 VOC_LINK
3  3609	000012A8						   LABEL   $RFROM FAR
3  3610	000012A8  200012AC					   DD	   ??01AE + DESIRED_BASE_EQU
3  3611	000012AC			 ??01AE:
2  3612								 POPRS	 EAX
3  3613	000012AC  8B 45	00					 MOV	 EAX,[DWORD PTR	EBP]
3  3614	000012AF  83 C5	04					 ADD	 EBP,CELL_SIZE
2  3615								 PUSHDS	 EAX
3  3616	000012B2  50						 PUSH	 EAX
2  3617								 $NEXT
3  3618	000012B3  AD						 LODSD				 ; fetch address
4  3619	000012B4  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3620	000012B6  FF E3						 JMP	 EBX			 ; execute
2  3621
2  3622					 ;  6.1.2070 R@
2  3623					 ;  Copy value from the	return stack to	data stack
2  3624					 ;  R: a -- a
2  3625					 ;  D:	 -- a
2  3626								 $DEF	 'R@',$RFETCH
3  3627	000012B8			 ??01AF:
3  3628	000012B8  00						   DB	 VEF_USUAL
3  3629	000012B9  02						 DB	 ??01B0	- $ - 1
3  3630	000012BA  52 40						 DB	 'R@'
3  3631	000012BC			 ??01B0:
3  3632	000012BC  04						 DB	 ??01B0	- ??01AF
3  3633	000012BD  2000129F					 DD	 VOC_LINK
3  3634	000012C1						   LABEL   $RFETCH FAR
3  3635	000012C1  200012C5					   DD	   ??01B2 + DESIRED_BASE_EQU
3  3636	000012C5			 ??01B2:
2  3637								 FETCHRS EAX
3  3638	000012C5  8B 45	00					   MOV	   EAX,[DWORD PTR EBP]
2  3639								 PUSHDS	 EAX
3  3640	000012C8  50						 PUSH	 EAX
2  3641								 $NEXT
3  3642	000012C9  AD						 LODSD				 ; fetch address
4  3643	000012CA  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3644	000012CC  FF E3						 JMP	 EBX			 ; execute
2  3645
2  3646					 ;  6.2.0340 2>R
2  3647					 ;  D: a b --
2  3648					 ;  R:	   -- a	b
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 65
meta.asm



2  3649								 $DEF	 '2>R',$2TOR,,VEF_COMPILE_ONLY
3  3650	000012CE			 ??01B3:
3  3651	000012CE  04						   DB	 VEF_COMPILE_ONLY
3  3652	000012CF  03						 DB	 ??01B4	- $ - 1
3  3653	000012D0  32 3E	52					 DB	 '2>R'
3  3654	000012D3			 ??01B4:
3  3655	000012D3  05						 DB	 ??01B4	- ??01B3
3  3656	000012D4  200012B8					 DD	 VOC_LINK
3  3657	000012D8						   LABEL   $2TOR FAR
3  3658	000012D8  200012DC					   DD	   ??01B6 + DESIRED_BASE_EQU
3  3659	000012DC			 ??01B6:
2  3660								 POPDS	 EBX
3  3661	000012DC  5B						 POP	 EBX
2  3662								 POPDS	 EAX
3  3663	000012DD  58						 POP	 EAX
2  3664								 PUSHRS	 EAX
3  3665	000012DE  83 ED	04					 SUB	 EBP,CELL_SIZE
3  3666	000012E1  89 45	00					 MOV	 [DWORD	PTR EBP],EAX
2  3667								 PUSHRS	 EBX
3  3668	000012E4  83 ED	04					 SUB	 EBP,CELL_SIZE
3  3669	000012E7  89 5D	00					 MOV	 [DWORD	PTR EBP],EBX
2  3670								 $NEXT
3  3671	000012EA  AD						 LODSD				 ; fetch address
4  3672	000012EB  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3673	000012ED  FF E3						 JMP	 EBX			 ; execute
2  3674
2  3675					 ;  6.2.0410 2R>
2  3676					 ;  D:	   -- a	b
2  3677					 ;  R: a b --
2  3678								 $DEF	 '2R>',$2RFROM,,VEF_COMPILE_ONLY
3  3679	000012EF			 ??01B7:
3  3680	000012EF  04						   DB	 VEF_COMPILE_ONLY
3  3681	000012F0  03						 DB	 ??01B8	- $ - 1
3  3682	000012F1  32 52	3E					 DB	 '2R>'
3  3683	000012F4			 ??01B8:
3  3684	000012F4  05						 DB	 ??01B8	- ??01B7
3  3685	000012F5  200012CE					 DD	 VOC_LINK
3  3686	000012F9						   LABEL   $2RFROM FAR
3  3687	000012F9  200012FD					   DD	   ??01BA + DESIRED_BASE_EQU
3  3688	000012FD			 ??01BA:
2  3689								 POPRS	 EBX
3  3690	000012FD  8B 5D	00					 MOV	 EBX,[DWORD PTR	EBP]
3  3691	00001300  83 C5	04					 ADD	 EBP,CELL_SIZE
2  3692								 POPRS	 EAX
3  3693	00001303  8B 45	00					 MOV	 EAX,[DWORD PTR	EBP]
3  3694	00001306  83 C5	04					 ADD	 EBP,CELL_SIZE
2  3695								 PUSHDS	 EAX
3  3696	00001309  50						 PUSH	 EAX
2  3697								 PUSHDS	 EBX
3  3698	0000130A  53						 PUSH	 EBX
2  3699								 $NEXT
3  3700	0000130B  AD						 LODSD				 ; fetch address
4  3701	0000130C  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3702	0000130E  FF E3						 JMP	 EBX			 ; execute
2  3703
2  3704					 ;  6.2.0415 2R@
2  3705					 ;  D:	   -- a	b
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 66
meta.asm



2  3706					 ;  R: a b -- a	b
2  3707								 $DEF	 '2R@',$2RFETCH
3  3708	00001310			 ??01BB:
3  3709	00001310  00						   DB	 VEF_USUAL
3  3710	00001311  03						 DB	 ??01BC	- $ - 1
3  3711	00001312  32 52	40					 DB	 '2R@'
3  3712	00001315			 ??01BC:
3  3713	00001315  05						 DB	 ??01BC	- ??01BB
3  3714	00001316  200012EF					 DD	 VOC_LINK
3  3715	0000131A						   LABEL   $2RFETCH FAR
3  3716	0000131A  2000131E					   DD	   ??01BE + DESIRED_BASE_EQU
3  3717	0000131E			 ??01BE:
2  3718								 FETCHRS EBX,0
3  3719	0000131E  8B 5D	00					   MOV	   EBX,[DWORD PTR EBP +	0 * CELL_SIZE]
2  3720								 FETCHRS EAX,1
3  3721	00001321  8B 45	04					   MOV	   EAX,[DWORD PTR EBP +	1 * CELL_SIZE]
2  3722								 PUSHDS	 EAX
3  3723	00001324  50						 PUSH	 EAX
2  3724								 PUSHDS	 EBX
3  3725	00001325  53						 PUSH	 EBX
2  3726								 $NEXT
3  3727	00001326  AD						 LODSD				 ; fetch address
4  3728	00001327  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3729	00001329  FF E3						 JMP	 EBX			 ; execute
2  3730
2  3731					 ;  R-PICK
2  3732								 $DEF	 'R-PICK',$R_PICK
3  3733	0000132B			 ??01BF:
3  3734	0000132B  00						   DB	 VEF_USUAL
3  3735	0000132C  06						 DB	 ??01C0	- $ - 1
3  3736	0000132D  52 2D	50 49 43 4B				 DB	 'R-PICK'
3  3737	00001333			 ??01C0:
3  3738	00001333  08						 DB	 ??01C0	- ??01BF
3  3739	00001334  20001310					 DD	 VOC_LINK
3  3740	00001338						   LABEL   $R_PICK FAR
3  3741	00001338  2000133C					   DD	   ??01C2 + DESIRED_BASE_EQU
3  3742	0000133C			 ??01C2:
2  3743								 POPDS	 EBX
3  3744	0000133C  5B						 POP	 EBX
2  3745								 FETCHRS EAX,EBX
3  3746	0000133D  8B 44	9D 00					   MOV	   EAX,[DWORD PTR EBP +	EBX * CELL_SIZE]
2  3747								 PUSHDS	 EAX
3  3748	00001341  50						 PUSH	 EAX
2  3749								 $NEXT
3  3750	00001342  AD						 LODSD				 ; fetch address
4  3751	00001343  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3752	00001345  FF E3						 JMP	 EBX			 ; execute
2  3753
2  3754					 ;  RS-SIZE
2  3755								 $CONST	 'RS-SIZE'
4  3756	00001347			 ??01C3:
4  3757	00001347  00						   DB	 VEF_USUAL
4  3758	00001348  07						 DB	 ??01C4	- $ - 1
4  3759	00001349  52 53	2D 53 49 5A 45				 DB	 'RS-SIZE'
4  3760	00001350			 ??01C4:
4  3761	00001350  09						 DB	 ??01C4	- ??01C3
4  3762	00001351  2000132B					 DD	 VOC_LINK
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 67
meta.asm



4  3763	00001355  2000010E					   DD	   $DOCONST + DESIRED_BASE_EQU
4  3764	00001359			 ??01C6:
2  3765								 CC	 RETURN_STACK_SIZE
3  3766	00001359  00001000					 DD	 RETURN_STACK_SIZE
2  3767
2  3768					 ;  RP0
2  3769								 $DEF	 'RP0',$RP0
3  3770	0000135D			 ??01C7:
3  3771	0000135D  00						   DB	 VEF_USUAL
3  3772	0000135E  03						 DB	 ??01C8	- $ - 1
3  3773	0000135F  52 50	30					 DB	 'RP0'
3  3774	00001362			 ??01C8:
3  3775	00001362  05						 DB	 ??01C8	- ??01C7
3  3776	00001363  20001347					 DD	 VOC_LINK
3  3777	00001367						   LABEL   $RP0	FAR
3  3778	00001367  2000136B					   DD	   ??01CA + DESIRED_BASE_EQU
3  3779	0000136B			 ??01CA:
2  3780	0000136B  8B C7						 MOV	 EAX,EDI
2  3781	0000136D  05 00001A68					 ADD	 EAX,RSTACK_VAR
2  3782								 PUSHDS	 EAX
3  3783	00001372  50						 PUSH	 EAX
2  3784								 $NEXT
3  3785	00001373  AD						 LODSD				 ; fetch address
4  3786	00001374  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3787	00001376  FF E3						 JMP	 EBX			 ; execute
2  3788
2  3789					 ;  RP@
2  3790								 $DEF	 'RP@',$RPFETCH
3  3791	00001378			 ??01CB:
3  3792	00001378  00						   DB	 VEF_USUAL
3  3793	00001379  03						 DB	 ??01CC	- $ - 1
3  3794	0000137A  52 50	40					 DB	 'RP@'
3  3795	0000137D			 ??01CC:
3  3796	0000137D  05						 DB	 ??01CC	- ??01CB
3  3797	0000137E  2000135D					 DD	 VOC_LINK
3  3798	00001382						   LABEL   $RPFETCH FAR
3  3799	00001382  20001386					   DD	   ??01CE + DESIRED_BASE_EQU
3  3800	00001386			 ??01CE:
2  3801								 PUSHDS	 EBP
3  3802	00001386  55						 PUSH	 EBP
2  3803								 $NEXT
3  3804	00001387  AD						 LODSD				 ; fetch address
4  3805	00001388  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3806	0000138A  FF E3						 JMP	 EBX			 ; execute
2  3807
2  3808					 ;  RP!
2  3809								 $DEF	 'RP!',$RPSTORE,,VEF_COMPILE_ONLY
3  3810	0000138C			 ??01CF:
3  3811	0000138C  04						   DB	 VEF_COMPILE_ONLY
3  3812	0000138D  03						 DB	 ??01D0	- $ - 1
3  3813	0000138E  52 50	21					 DB	 'RP!'
3  3814	00001391			 ??01D0:
3  3815	00001391  05						 DB	 ??01D0	- ??01CF
3  3816	00001392  20001378					 DD	 VOC_LINK
3  3817	00001396						   LABEL   $RPSTORE FAR
3  3818	00001396  2000139A					   DD	   ??01D2 + DESIRED_BASE_EQU
3  3819	0000139A			 ??01D2:
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 68
meta.asm



2  3820								 POPDS	 EBP
3  3821	0000139A  5D						 POP	 EBP
2  3822								 $NEXT
3  3823	0000139B  AD						 LODSD				 ; fetch address
4  3824	0000139C  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3825	0000139E  FF E3						 JMP	 EBX			 ; execute
2  3826
2  3827
1  3828								 INCLUDE "math.inc"
2  3829					 ;******************************************************************************
2  3830					 ;
2  3831					 ;  math.inc
2  3832					 ;  IKForth
2  3833					 ;
2  3834					 ;  Copyright (C) 1999-2001 Illya Kysil
2  3835					 ;
2  3836					 ;******************************************************************************
2  3837					 ;  Integer math
2  3838					 ;******************************************************************************
2  3839
2  3840					 ;  6.1.0090 *
2  3841					 ;  Multiply n1|u1 by n2|u2 giving the product n3|u3.
2  3842					 ;  D: n1|u1 n2|u2 -- n3|u3
2  3843								 $DEF	 '*',$MUL
3  3844	000013A0			 ??01D3:
3  3845	000013A0  00						   DB	 VEF_USUAL
3  3846	000013A1  01						 DB	 ??01D4	- $ - 1
3  3847	000013A2  2A						 DB	 '*'
3  3848	000013A3			 ??01D4:
3  3849	000013A3  03						 DB	 ??01D4	- ??01D3
3  3850	000013A4  2000138C					 DD	 VOC_LINK
3  3851	000013A8						   LABEL   $MUL	FAR
3  3852	000013A8  200013AC					   DD	   ??01D6 + DESIRED_BASE_EQU
3  3853	000013AC			 ??01D6:
2  3854								 POPDS	 EAX
3  3855	000013AC  58						 POP	 EAX
2  3856								 POPDS	 EBX
3  3857	000013AD  5B						 POP	 EBX
2  3858	000013AE  F7 EB						 IMUL	 EBX
2  3859								 PUSHDS	 EAX
3  3860	000013B0  50						 PUSH	 EAX
2  3861								 $NEXT
3  3862	000013B1  AD						 LODSD				 ; fetch address
4  3863	000013B2  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3864	000013B4  FF E3						 JMP	 EBX			 ; execute
2  3865
2  3866					 ;  6.1.0120 +
2  3867					 ;  D: a b -- a+b
2  3868								 $DEF	 '+',$ADD
3  3869	000013B6			 ??01D7:
3  3870	000013B6  00						   DB	 VEF_USUAL
3  3871	000013B7  01						 DB	 ??01D8	- $ - 1
3  3872	000013B8  2B						 DB	 '+'
3  3873	000013B9			 ??01D8:
3  3874	000013B9  03						 DB	 ??01D8	- ??01D7
3  3875	000013BA  200013A0					 DD	 VOC_LINK
3  3876	000013BE						   LABEL   $ADD	FAR
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 69
meta.asm



3  3877	000013BE  200013C2					   DD	   ??01DA + DESIRED_BASE_EQU
3  3878	000013C2			 ??01DA:
2  3879								 POPDS	 EAX
3  3880	000013C2  58						 POP	 EAX
2  3881								 POPDS	 EBX
3  3882	000013C3  5B						 POP	 EBX
2  3883	000013C4  03 C3						 ADD	 EAX,EBX
2  3884								 PUSHDS	 EAX
3  3885	000013C6  50						 PUSH	 EAX
2  3886								 $NEXT
3  3887	000013C7  AD						 LODSD				 ; fetch address
4  3888	000013C8  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3889	000013CA  FF E3						 JMP	 EBX			 ; execute
2  3890
2  3891					 ;  6.1.0160 -
2  3892					 ;  D: a b -- a-b
2  3893								 $DEF	 '-',$SUB
3  3894	000013CC			 ??01DB:
3  3895	000013CC  00						   DB	 VEF_USUAL
3  3896	000013CD  01						 DB	 ??01DC	- $ - 1
3  3897	000013CE  2D						 DB	 '-'
3  3898	000013CF			 ??01DC:
3  3899	000013CF  03						 DB	 ??01DC	- ??01DB
3  3900	000013D0  200013B6					 DD	 VOC_LINK
3  3901	000013D4						   LABEL   $SUB	FAR
3  3902	000013D4  200013D8					   DD	   ??01DE + DESIRED_BASE_EQU
3  3903	000013D8			 ??01DE:
2  3904								 POPDS	 EBX
3  3905	000013D8  5B						 POP	 EBX
2  3906								 POPDS	 EAX
3  3907	000013D9  58						 POP	 EAX
2  3908	000013DA  2B C3						 SUB	 EAX,EBX
2  3909								 PUSHDS	 EAX
3  3910	000013DC  50						 PUSH	 EAX
2  3911								 $NEXT
3  3912	000013DD  AD						 LODSD				 ; fetch address
4  3913	000013DE  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3914	000013E0  FF E3						 JMP	 EBX			 ; execute
2  3915
2  3916					 ;  6.1.0290 1+
2  3917					 ;  D: a -- a+1
2  3918								 $DEF	 '1+',$1ADD
3  3919	000013E2			 ??01DF:
3  3920	000013E2  00						   DB	 VEF_USUAL
3  3921	000013E3  02						 DB	 ??01E0	- $ - 1
3  3922	000013E4  31 2B						 DB	 '1+'
3  3923	000013E6			 ??01E0:
3  3924	000013E6  04						 DB	 ??01E0	- ??01DF
3  3925	000013E7  200013CC					 DD	 VOC_LINK
3  3926	000013EB						   LABEL   $1ADD FAR
3  3927	000013EB  200013EF					   DD	   ??01E2 + DESIRED_BASE_EQU
3  3928	000013EF			 ??01E2:
2  3929								 POPDS	 EAX
3  3930	000013EF  58						 POP	 EAX
2  3931	000013F0  40						 INC	 EAX
2  3932								 PUSHDS	 EAX
3  3933	000013F1  50						 PUSH	 EAX
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 70
meta.asm



2  3934								 $NEXT
3  3935	000013F2  AD						 LODSD				 ; fetch address
4  3936	000013F3  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3937	000013F5  FF E3						 JMP	 EBX			 ; execute
2  3938
2  3939					 ;  6.1.0300 1-
2  3940					 ;  D: a -- a-1
2  3941								 $DEF	 '1-',$1SUB
3  3942	000013F7			 ??01E3:
3  3943	000013F7  00						   DB	 VEF_USUAL
3  3944	000013F8  02						 DB	 ??01E4	- $ - 1
3  3945	000013F9  31 2D						 DB	 '1-'
3  3946	000013FB			 ??01E4:
3  3947	000013FB  04						 DB	 ??01E4	- ??01E3
3  3948	000013FC  200013E2					 DD	 VOC_LINK
3  3949	00001400						   LABEL   $1SUB FAR
3  3950	00001400  20001404					   DD	   ??01E6 + DESIRED_BASE_EQU
3  3951	00001404			 ??01E6:
2  3952								 POPDS	 EAX
3  3953	00001404  58						 POP	 EAX
2  3954	00001405  48						 DEC	 EAX
2  3955								 PUSHDS	 EAX
3  3956	00001406  50						 PUSH	 EAX
2  3957								 $NEXT
3  3958	00001407  AD						 LODSD				 ; fetch address
4  3959	00001408  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3960	0000140A  FF E3						 JMP	 EBX			 ; execute
2  3961
2  3962					 ;  6.1.0320 2*
2  3963					 ;  D: a -- a*2
2  3964								 $DEF	 '2*',$2MUL
3  3965	0000140C			 ??01E7:
3  3966	0000140C  00						   DB	 VEF_USUAL
3  3967	0000140D  02						 DB	 ??01E8	- $ - 1
3  3968	0000140E  32 2A						 DB	 '2*'
3  3969	00001410			 ??01E8:
3  3970	00001410  04						 DB	 ??01E8	- ??01E7
3  3971	00001411  200013F7					 DD	 VOC_LINK
3  3972	00001415						   LABEL   $2MUL FAR
3  3973	00001415  20001419					   DD	   ??01EA + DESIRED_BASE_EQU
3  3974	00001419			 ??01EA:
2  3975								 POPDS	 EAX
3  3976	00001419  58						 POP	 EAX
2  3977	0000141A  D1 E0						 SAL	 EAX,1
2  3978								 PUSHDS	 EAX
3  3979	0000141C  50						 PUSH	 EAX
2  3980								 $NEXT
3  3981	0000141D  AD						 LODSD				 ; fetch address
4  3982	0000141E  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  3983	00001420  FF E3						 JMP	 EBX			 ; execute
2  3984
2  3985					 ;  6.1.0330 2/
2  3986					 ;  D: a -- a/2
2  3987								 $DEF	 '2/',$2DIV
3  3988	00001422			 ??01EB:
3  3989	00001422  00						   DB	 VEF_USUAL
3  3990	00001423  02						 DB	 ??01EC	- $ - 1
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 71
meta.asm



3  3991	00001424  32 2F						 DB	 '2/'
3  3992	00001426			 ??01EC:
3  3993	00001426  04						 DB	 ??01EC	- ??01EB
3  3994	00001427  2000140C					 DD	 VOC_LINK
3  3995	0000142B						   LABEL   $2DIV FAR
3  3996	0000142B  2000142F					   DD	   ??01EE + DESIRED_BASE_EQU
3  3997	0000142F			 ??01EE:
2  3998								 POPDS	 EAX
3  3999	0000142F  58						 POP	 EAX
2  4000	00001430  D1 F8						 SAR	 EAX,1
2  4001								 PUSHDS	 EAX
3  4002	00001432  50						 PUSH	 EAX
2  4003								 $NEXT
3  4004	00001433  AD						 LODSD				 ; fetch address
4  4005	00001434  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4006	00001436  FF E3						 JMP	 EBX			 ; execute
2  4007
2  4008					 ;  6.1.0690 ABS
2  4009					 ;  D: a -- abs(a)
2  4010								 $DEF	 'ABS',$ABS
3  4011	00001438			 ??01EF:
3  4012	00001438  00						   DB	 VEF_USUAL
3  4013	00001439  03						 DB	 ??01F0	- $ - 1
3  4014	0000143A  41 42	53					 DB	 'ABS'
3  4015	0000143D			 ??01F0:
3  4016	0000143D  05						 DB	 ??01F0	- ??01EF
3  4017	0000143E  20001422					 DD	 VOC_LINK
3  4018	00001442						   LABEL   $ABS	FAR
3  4019	00001442  20001446					   DD	   ??01F2 + DESIRED_BASE_EQU
3  4020	00001446			 ??01F2:
2  4021								 POPDS	 EAX
3  4022	00001446  58						 POP	 EAX
2  4023	00001447  23 C0						 AND	 EAX,EAX
2  4024	00001449  79 02						 JNS	 SHORT ABSOK
2  4025	0000144B  F7 D8						 NEG	 EAX
2  4026	0000144D			 ABSOK:
2  4027								 PUSHDS	 EAX
3  4028	0000144D  50						 PUSH	 EAX
2  4029								 $NEXT
3  4030	0000144E  AD						 LODSD				 ; fetch address
4  4031	0000144F  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4032	00001451  FF E3						 JMP	 EBX			 ; execute
2  4033
2  4034					 ;  6.1.1805 LSHIFT
2  4035					 ;  D: a b -- a	<< b
2  4036								 $DEF	 'LSHIFT',$LSHIFT
3  4037	00001453			 ??01F3:
3  4038	00001453  00						   DB	 VEF_USUAL
3  4039	00001454  06						 DB	 ??01F4	- $ - 1
3  4040	00001455  4C 53	48 49 46 54				 DB	 'LSHIFT'
3  4041	0000145B			 ??01F4:
3  4042	0000145B  08						 DB	 ??01F4	- ??01F3
3  4043	0000145C  20001438					 DD	 VOC_LINK
3  4044	00001460						   LABEL   $LSHIFT FAR
3  4045	00001460  20001464					   DD	   ??01F6 + DESIRED_BASE_EQU
3  4046	00001464			 ??01F6:
2  4047								 POPDS	 ECX
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 72
meta.asm



3  4048	00001464  59						 POP	 ECX
2  4049								 POPDS	 EAX
3  4050	00001465  58						 POP	 EAX
2  4051	00001466  D3 E0						 SHL	 EAX,CL
2  4052								 PUSHDS	 EAX
3  4053	00001468  50						 PUSH	 EAX
2  4054								 $NEXT
3  4055	00001469  AD						 LODSD				 ; fetch address
4  4056	0000146A  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4057	0000146C  FF E3						 JMP	 EBX			 ; execute
2  4058
2  4059					 ;  6.1.2162 RSHIFT
2  4060					 ;  D: a b -- a	>> b
2  4061								 $DEF	 'RSHIFT',$RSHIFT
3  4062	0000146E			 ??01F7:
3  4063	0000146E  00						   DB	 VEF_USUAL
3  4064	0000146F  06						 DB	 ??01F8	- $ - 1
3  4065	00001470  52 53	48 49 46 54				 DB	 'RSHIFT'
3  4066	00001476			 ??01F8:
3  4067	00001476  08						 DB	 ??01F8	- ??01F7
3  4068	00001477  20001453					 DD	 VOC_LINK
3  4069	0000147B						   LABEL   $RSHIFT FAR
3  4070	0000147B  2000147F					   DD	   ??01FA + DESIRED_BASE_EQU
3  4071	0000147F			 ??01FA:
2  4072								 POPDS	 ECX
3  4073	0000147F  59						 POP	 ECX
2  4074								 POPDS	 EAX
3  4075	00001480  58						 POP	 EAX
2  4076	00001481  D3 E8						 SHR	 EAX,CL
2  4077								 PUSHDS	 EAX
3  4078	00001483  50						 PUSH	 EAX
2  4079								 $NEXT
3  4080	00001484  AD						 LODSD				 ; fetch address
4  4081	00001485  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4082	00001487  FF E3						 JMP	 EBX			 ; execute
2  4083
2  4084					 ;  6.1.1810 M*
2  4085					 ;  d is the signed product of n1 times	n2.
2  4086					 ;  D: n1 n2 --	d
2  4087								 $DEF	 'M*',$MMUL
3  4088	00001489			 ??01FB:
3  4089	00001489  00						   DB	 VEF_USUAL
3  4090	0000148A  02						 DB	 ??01FC	- $ - 1
3  4091	0000148B  4D 2A						 DB	 'M*'
3  4092	0000148D			 ??01FC:
3  4093	0000148D  04						 DB	 ??01FC	- ??01FB
3  4094	0000148E  2000146E					 DD	 VOC_LINK
3  4095	00001492						   LABEL   $MMUL FAR
3  4096	00001492  20001496					   DD	   ??01FE + DESIRED_BASE_EQU
3  4097	00001496			 ??01FE:
2  4098								 POPDS	 EAX
3  4099	00001496  58						 POP	 EAX
2  4100								 POPDS	 EBX
3  4101	00001497  5B						 POP	 EBX
2  4102	00001498  F7 EB						 IMUL	 EBX
2  4103								 PUSHDS	 EAX
3  4104	0000149A  50						 PUSH	 EAX
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 73
meta.asm



2  4105								 PUSHDS	 EDX
3  4106	0000149B  52						 PUSH	 EDX
2  4107								 $NEXT
3  4108	0000149C  AD						 LODSD				 ; fetch address
4  4109	0000149D  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4110	0000149F  FF E3						 JMP	 EBX			 ; execute
2  4111
2  4112					 ;  6.1.1910 NEGATE
2  4113					 ;  D: a -- -a
2  4114								 $DEF	 'NEGATE',$NEGATE
3  4115	000014A1			 ??01FF:
3  4116	000014A1  00						   DB	 VEF_USUAL
3  4117	000014A2  06						 DB	 ??0200	- $ - 1
3  4118	000014A3  4E 45	47 41 54 45				 DB	 'NEGATE'
3  4119	000014A9			 ??0200:
3  4120	000014A9  08						 DB	 ??0200	- ??01FF
3  4121	000014AA  20001489					 DD	 VOC_LINK
3  4122	000014AE						   LABEL   $NEGATE FAR
3  4123	000014AE  200014B2					   DD	   ??0202 + DESIRED_BASE_EQU
3  4124	000014B2			 ??0202:
2  4125								 POPDS	 EAX
3  4126	000014B2  58						 POP	 EAX
2  4127	000014B3  F7 D8						 NEG	 EAX
2  4128								 PUSHDS	 EAX
3  4129	000014B5  50						 PUSH	 EAX
2  4130								 $NEXT
3  4131	000014B6  AD						 LODSD				 ; fetch address
4  4132	000014B7  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4133	000014B9  FF E3						 JMP	 EBX			 ; execute
2  4134
2  4135					 ;  6.1.2214 SM/REM
2  4136					 ;  Divide d1 by n1, giving the	symmetric quotient n3 and the remainder	n2.
2  4137					 ;  Input and output stack arguments are signed. An ambiguous condition	exists
2  4138					 ;  if n1 is zero or if	the quotient lies outside the range of a single-cell signed integer.
2  4139					 ;  D: d1 n1 --	n2 n3
2  4140								 $DEF	 'SM/REM',$SMDIVREM
3  4141	000014BB			 ??0203:
3  4142	000014BB  00						   DB	 VEF_USUAL
3  4143	000014BC  06						 DB	 ??0204	- $ - 1
3  4144	000014BD  53 4D	2F 52 45 4D				 DB	 'SM/REM'
3  4145	000014C3			 ??0204:
3  4146	000014C3  08						 DB	 ??0204	- ??0203
3  4147	000014C4  200014A1					 DD	 VOC_LINK
3  4148	000014C8						   LABEL   $SMDIVREM FAR
3  4149	000014C8  200014CC					   DD	   ??0206 + DESIRED_BASE_EQU
3  4150	000014CC			 ??0206:
2  4151								 POPDS	 EBX			 ; n1
3  4152	000014CC  5B						 POP	 EBX
2  4153								 POPDS	 EDX
3  4154	000014CD  5A						 POP	 EDX
2  4155								 POPDS	 EAX
3  4156	000014CE  58						 POP	 EAX
2  4157	000014CF  F7 FB						 IDIV	 EBX
2  4158								 PUSHDS	 EDX			 ; n2
3  4159	000014D1  52						 PUSH	 EDX
2  4160								 PUSHDS	 EAX			 ; n3
3  4161	000014D2  50						 PUSH	 EAX
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 74
meta.asm



2  4162								 $NEXT
3  4163	000014D3  AD						 LODSD				 ; fetch address
4  4164	000014D4  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4165	000014D6  FF E3						 JMP	 EBX			 ; execute
2  4166
2  4167					 ;******************************************************************************
2  4168					 ;  Unsigned integer math
2  4169					 ;******************************************************************************
2  4170
2  4171					 ;  6.1.2360 UM*
2  4172					 ;  Multiply u1	by u2, giving the unsigned double-cell product ud.
2  4173					 ;  All	values and arithmetic are unsigned.
2  4174					 ;  D: u1 u2 --	ud
2  4175								 $DEF	 'UM*',$UMMUL
3  4176	000014D8			 ??0207:
3  4177	000014D8  00						   DB	 VEF_USUAL
3  4178	000014D9  03						 DB	 ??0208	- $ - 1
3  4179	000014DA  55 4D	2A					 DB	 'UM*'
3  4180	000014DD			 ??0208:
3  4181	000014DD  05						 DB	 ??0208	- ??0207
3  4182	000014DE  200014BB					 DD	 VOC_LINK
3  4183	000014E2						   LABEL   $UMMUL FAR
3  4184	000014E2  200014E6					   DD	   ??020A + DESIRED_BASE_EQU
3  4185	000014E6			 ??020A:
2  4186								 POPDS	 EBX
3  4187	000014E6  5B						 POP	 EBX
2  4188								 POPDS	 EAX
3  4189	000014E7  58						 POP	 EAX
2  4190	000014E8  F7 E3						 MUL	 EBX
2  4191								 PUSHDS	 EAX
3  4192	000014EA  50						 PUSH	 EAX
2  4193								 PUSHDS	 EDX
3  4194	000014EB  52						 PUSH	 EDX
2  4195								 $NEXT
3  4196	000014EC  AD						 LODSD				 ; fetch address
4  4197	000014ED  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4198	000014EF  FF E3						 JMP	 EBX			 ; execute
2  4199
2  4200					 ;  6.1.2370 UM/MOD
2  4201					 ;  Divide ud by u1, giving the	quotient u3 and	the remainder u2.
2  4202					 ;  All	values and arithmetic are unsigned. An ambiguous condition exists if u1
2  4203					 ;  is zero or if the quotient lies outside the	range of a single-cell unsigned	integer.
2  4204					 ;  D: ud u1 --	u2 u3
2  4205								 $DEF	 'UM/MOD',$UMDIVMOD
3  4206	000014F1			 ??020B:
3  4207	000014F1  00						   DB	 VEF_USUAL
3  4208	000014F2  06						 DB	 ??020C	- $ - 1
3  4209	000014F3  55 4D	2F 4D 4F 44				 DB	 'UM/MOD'
3  4210	000014F9			 ??020C:
3  4211	000014F9  08						 DB	 ??020C	- ??020B
3  4212	000014FA  200014D8					 DD	 VOC_LINK
3  4213	000014FE						   LABEL   $UMDIVMOD FAR
3  4214	000014FE  20001502					   DD	   ??020E + DESIRED_BASE_EQU
3  4215	00001502			 ??020E:
2  4216								 POPDS	 EBX			 ; u1
3  4217	00001502  5B						 POP	 EBX
2  4218								 POPDS	 EDX
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 75
meta.asm



3  4219	00001503  5A						 POP	 EDX
2  4220								 POPDS	 EAX
3  4221	00001504  58						 POP	 EAX
2  4222	00001505  F7 F3						 DIV	 EBX
2  4223								 PUSHDS	 EDX			 ; u2
3  4224	00001507  52						 PUSH	 EDX
2  4225								 PUSHDS	 EAX			 ; u3
3  4226	00001508  50						 PUSH	 EAX
2  4227								 $NEXT
3  4228	00001509  AD						 LODSD				 ; fetch address
4  4229	0000150A  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4230	0000150C  FF E3						 JMP	 EBX			 ; execute
2  4231
2  4232					 ;******************************************************************************
2  4233					 ;  Logic
2  4234					 ;******************************************************************************
2  4235
2  4236					 ;  6.1.0720 AND
2  4237					 ;  D: a b -- a	and b
2  4238								 $DEF	 'AND',$AND
3  4239	0000150E			 ??020F:
3  4240	0000150E  00						   DB	 VEF_USUAL
3  4241	0000150F  03						 DB	 ??0210	- $ - 1
3  4242	00001510  41 4E	44					 DB	 'AND'
3  4243	00001513			 ??0210:
3  4244	00001513  05						 DB	 ??0210	- ??020F
3  4245	00001514  200014F1					 DD	 VOC_LINK
3  4246	00001518						   LABEL   $AND	FAR
3  4247	00001518  2000151C					   DD	   ??0212 + DESIRED_BASE_EQU
3  4248	0000151C			 ??0212:
2  4249								 POPDS	 EBX
3  4250	0000151C  5B						 POP	 EBX
2  4251								 POPDS	 EAX
3  4252	0000151D  58						 POP	 EAX
2  4253	0000151E  23 C3						 AND	 EAX,EBX
2  4254								 PUSHDS	 EAX
3  4255	00001520  50						 PUSH	 EAX
2  4256								 $NEXT
3  4257	00001521  AD						 LODSD				 ; fetch address
4  4258	00001522  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4259	00001524  FF E3						 JMP	 EBX			 ; execute
2  4260
2  4261					 ;  6.1.1720 INVERT
2  4262					 ;  D: a -- NOT	a
2  4263								 $DEF	 'INVERT',$INVERT
3  4264	00001526			 ??0213:
3  4265	00001526  00						   DB	 VEF_USUAL
3  4266	00001527  06						 DB	 ??0214	- $ - 1
3  4267	00001528  49 4E	56 45 52 54				 DB	 'INVERT'
3  4268	0000152E			 ??0214:
3  4269	0000152E  08						 DB	 ??0214	- ??0213
3  4270	0000152F  2000150E					 DD	 VOC_LINK
3  4271	00001533						   LABEL   $INVERT FAR
3  4272	00001533  20001537					   DD	   ??0216 + DESIRED_BASE_EQU
3  4273	00001537			 ??0216:
2  4274								 POPDS	 EAX
3  4275	00001537  58						 POP	 EAX
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 76
meta.asm



2  4276	00001538  F7 D0						 NOT	 EAX
2  4277								 PUSHDS	 EAX
3  4278	0000153A  50						 PUSH	 EAX
2  4279								 $NEXT
3  4280	0000153B  AD						 LODSD				 ; fetch address
4  4281	0000153C  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4282	0000153E  FF E3						 JMP	 EBX			 ; execute
2  4283
2  4284					 ;  6.1.1980 OR
2  4285					 ;  D: a b -- a	or b
2  4286								 $DEF	 'OR',$OR
3  4287	00001540			 ??0217:
3  4288	00001540  00						   DB	 VEF_USUAL
3  4289	00001541  02						 DB	 ??0218	- $ - 1
3  4290	00001542  4F 52						 DB	 'OR'
3  4291	00001544			 ??0218:
3  4292	00001544  04						 DB	 ??0218	- ??0217
3  4293	00001545  20001526					 DD	 VOC_LINK
3  4294	00001549						   LABEL   $OR FAR
3  4295	00001549  2000154D					   DD	   ??021A + DESIRED_BASE_EQU
3  4296	0000154D			 ??021A:
2  4297								 POPDS	 EBX
3  4298	0000154D  5B						 POP	 EBX
2  4299								 POPDS	 EAX
3  4300	0000154E  58						 POP	 EAX
2  4301	0000154F  0B C3						 OR	 EAX,EBX
2  4302								 PUSHDS	 EAX
3  4303	00001551  50						 PUSH	 EAX
2  4304								 $NEXT
3  4305	00001552  AD						 LODSD				 ; fetch address
4  4306	00001553  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4307	00001555  FF E3						 JMP	 EBX			 ; execute
2  4308
2  4309					 ;  6.1.2490 XOR
2  4310					 ;  D: a b -- a	xor b
2  4311								 $DEF	 'XOR',$XOR
3  4312	00001557			 ??021B:
3  4313	00001557  00						   DB	 VEF_USUAL
3  4314	00001558  03						 DB	 ??021C	- $ - 1
3  4315	00001559  58 4F	52					 DB	 'XOR'
3  4316	0000155C			 ??021C:
3  4317	0000155C  05						 DB	 ??021C	- ??021B
3  4318	0000155D  20001540					 DD	 VOC_LINK
3  4319	00001561						   LABEL   $XOR	FAR
3  4320	00001561  20001565					   DD	   ??021E + DESIRED_BASE_EQU
3  4321	00001565			 ??021E:
2  4322								 POPDS	 EBX
3  4323	00001565  5B						 POP	 EBX
2  4324								 POPDS	 EAX
3  4325	00001566  58						 POP	 EAX
2  4326	00001567  33 C3						 XOR	 EAX,EBX
2  4327								 PUSHDS	 EAX
3  4328	00001569  50						 PUSH	 EAX
2  4329								 $NEXT
3  4330	0000156A  AD						 LODSD				 ; fetch address
4  4331	0000156B  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4332	0000156D  FF E3						 JMP	 EBX			 ; execute
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 77
meta.asm



2  4333
2  4334					 ;  UD/
2  4335					 ;  D: UD1 UD2 -- REMD QD
2  4336								 $DEF	 'UD/',$UDDIV
3  4337	0000156F			 ??021F:
3  4338	0000156F  00						   DB	 VEF_USUAL
3  4339	00001570  03						 DB	 ??0220	- $ - 1
3  4340	00001571  55 44	2F					 DB	 'UD/'
3  4341	00001574			 ??0220:
3  4342	00001574  05						 DB	 ??0220	- ??021F
3  4343	00001575  20001557					 DD	 VOC_LINK
3  4344	00001579						   LABEL   $UDDIV FAR
3  4345	00001579  2000157D					   DD	   ??0222 + DESIRED_BASE_EQU
3  4346	0000157D			 ??0222:
2  4347								 PUSHRS	 EDI
3  4348	0000157D  83 ED	04					 SUB	 EBP,CELL_SIZE
3  4349	00001580  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
2  4350								 PUSHRS	 ESI
3  4351	00001583  83 ED	04					 SUB	 EBP,CELL_SIZE
3  4352	00001586  89 75	00					 MOV	 [DWORD	PTR EBP],ESI
2  4353								 POPDS	 ECX
3  4354	00001589  59						 POP	 ECX
2  4355								 POPDS	 EBX
3  4356	0000158A  5B						 POP	 EBX
2  4357								 POPDS	 EDX
3  4358	0000158B  5A						 POP	 EDX
2  4359								 POPDS	 EAX
3  4360	0000158C  58						 POP	 EAX
2  4361								 PUSHDS	 EBP
3  4362	0000158D  55						 PUSH	 EBP
2  4363					 ;
2  4364	0000158E  BD 00000040					 MOV	 EBP,64
2  4365	00001593  33 F6						 XOR	 ESI,ESI
2  4366	00001595  33 FF						 XOR	 EDI,EDI
2  4367	00001597			 UD_LOOP:
2  4368	00001597  D1 E0						 SHL	 EAX,1
2  4369	00001599  D1 D2						 RCL	 EDX,1
2  4370	0000159B  D1 D7						 RCL	 EDI,1
2  4371	0000159D  D1 D6						 RCL	 ESI,1
2  4372	0000159F  3B F1						 CMP	 ESI,ECX
2  4373	000015A1  77 06						 JA	 SHORT UD_DIV
2  4374	000015A3  72 09						 JB	 SHORT UD_NEXT
2  4375	000015A5  3B FB						 CMP	 EDI,EBX
2  4376	000015A7  72 05						 JB	 SHORT UD_NEXT
2  4377	000015A9			 UD_DIV:
2  4378	000015A9  2B FB						 SUB	 EDI,EBX
2  4379	000015AB  1B F1						 SBB	 ESI,ECX
2  4380	000015AD  40						 INC	 EAX
2  4381	000015AE			 UD_NEXT:
2  4382	000015AE  4D						 DEC	 EBP
2  4383	000015AF  75 E6						 JNE	 UD_LOOP
2  4384					 ;
2  4385								 POPDS	 EBP
3  4386	000015B1  5D						 POP	 EBP
2  4387								 PUSHDS	 EDI
3  4388	000015B2  57						 PUSH	 EDI
2  4389								 PUSHDS	 ESI
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 78
meta.asm



3  4390	000015B3  56						 PUSH	 ESI
2  4391								 PUSHDS	 EAX
3  4392	000015B4  50						 PUSH	 EAX
2  4393								 PUSHDS	 EDX
3  4394	000015B5  52						 PUSH	 EDX
2  4395								 POPRS	 ESI
3  4396	000015B6  8B 75	00					 MOV	 ESI,[DWORD PTR	EBP]
3  4397	000015B9  83 C5	04					 ADD	 EBP,CELL_SIZE
2  4398								 POPRS	 EDI
3  4399	000015BC  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
3  4400	000015BF  83 C5	04					 ADD	 EBP,CELL_SIZE
2  4401								 $NEXT
3  4402	000015C2  AD						 LODSD				 ; fetch address
4  4403	000015C3  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4404	000015C5  FF E3						 JMP	 EBX			 ; execute
2  4405
2  4406
1  4407								 INCLUDE "compare.inc"
2  4408					 ;******************************************************************************
2  4409					 ;
2  4410					 ;  compare.inc
2  4411					 ;  IKForth
2  4412					 ;
2  4413					 ;  Copyright (C) 1999-2001 Illya Kysil
2  4414					 ;
2  4415					 ;******************************************************************************
2  4416					 ;  Compare
2  4417					 ;******************************************************************************
2  4418
2  4419					 ;  6.2.1485 FALSE
2  4420					 ;  Return a false flag.
2  4421					 ;  D: -- false
2  4422								 $DEF	 'FALSE',$FALSE
3  4423	000015C7			 ??0223:
3  4424	000015C7  00						   DB	 VEF_USUAL
3  4425	000015C8  05						 DB	 ??0224	- $ - 1
3  4426	000015C9  46 41	4C 53 45				 DB	 'FALSE'
3  4427	000015CE			 ??0224:
3  4428	000015CE  07						 DB	 ??0224	- ??0223
3  4429	000015CF  2000156F					 DD	 VOC_LINK
3  4430	000015D3						   LABEL   $FALSE FAR
3  4431	000015D3  200015D7					   DD	   ??0226 + DESIRED_BASE_EQU
3  4432	000015D7			 ??0226:
2  4433								 PUSHDS	 FALSE
3  4434	000015D7  6A 00						 PUSH	 FALSE
2  4435								 $NEXT
3  4436	000015D9  AD						 LODSD				 ; fetch address
4  4437	000015DA  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4438	000015DC  FF E3						 JMP	 EBX			 ; execute
2  4439
2  4440					 ;  6.2.2298 TRUE
2  4441					 ;  Return a true flag,	a single-cell value with all bits set.
2  4442					 ;  D: -- true
2  4443								 $DEF	 'TRUE',$TRUE
3  4444	000015DE			 ??0227:
3  4445	000015DE  00						   DB	 VEF_USUAL
3  4446	000015DF  04						 DB	 ??0228	- $ - 1
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 79
meta.asm



3  4447	000015E0  54 52	55 45					 DB	 'TRUE'
3  4448	000015E4			 ??0228:
3  4449	000015E4  06						 DB	 ??0228	- ??0227
3  4450	000015E5  200015C7					 DD	 VOC_LINK
3  4451	000015E9						   LABEL   $TRUE FAR
3  4452	000015E9  200015ED					   DD	   ??022A + DESIRED_BASE_EQU
3  4453	000015ED			 ??022A:
2  4454								 PUSHDS	 TRUE
3  4455	000015ED  6A FF						 PUSH	 TRUE
2  4456								 $NEXT
3  4457	000015EF  AD						 LODSD				 ; fetch address
4  4458	000015F0  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4459	000015F2  FF E3						 JMP	 EBX			 ; execute
2  4460
2  4461					 ;  <
2  4462								 $DEF	 '<',$LE
3  4463	000015F4			 ??022B:
3  4464	000015F4  00						   DB	 VEF_USUAL
3  4465	000015F5  01						 DB	 ??022C	- $ - 1
3  4466	000015F6  3C						 DB	 '<'
3  4467	000015F7			 ??022C:
3  4468	000015F7  03						 DB	 ??022C	- ??022B
3  4469	000015F8  200015DE					 DD	 VOC_LINK
3  4470	000015FC						   LABEL   $LE FAR
3  4471	000015FC  20001600					   DD	   ??022E + DESIRED_BASE_EQU
3  4472	00001600			 ??022E:
2  4473								 POPDS	 EBX
3  4474	00001600  5B						 POP	 EBX
2  4475								 POPDS	 EAX
3  4476	00001601  58						 POP	 EAX
2  4477	00001602  3B C3						 CMP	 EAX,EBX
2  4478	00001604  B8 FFFFFFFF					 MOV	 EAX,TRUE
2  4479	00001609  7C 05						 JL	 SHORT LE_YES
2  4480	0000160B  B8 00000000					 MOV	 EAX,FALSE
2  4481	00001610			 LE_YES:
2  4482								 PUSHDS	 EAX
3  4483	00001610  50						 PUSH	 EAX
2  4484								 $NEXT
3  4485	00001611  AD						 LODSD				 ; fetch address
4  4486	00001612  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4487	00001614  FF E3						 JMP	 EBX			 ; execute
2  4488
2  4489					 ;  >
2  4490								 $DEF	 '>',$GR
3  4491	00001616			 ??022F:
3  4492	00001616  00						   DB	 VEF_USUAL
3  4493	00001617  01						 DB	 ??0230	- $ - 1
3  4494	00001618  3E						 DB	 '>'
3  4495	00001619			 ??0230:
3  4496	00001619  03						 DB	 ??0230	- ??022F
3  4497	0000161A  200015F4					 DD	 VOC_LINK
3  4498	0000161E						   LABEL   $GR FAR
3  4499	0000161E  20001622					   DD	   ??0232 + DESIRED_BASE_EQU
3  4500	00001622			 ??0232:
2  4501								 POPDS	 EBX
3  4502	00001622  5B						 POP	 EBX
2  4503								 POPDS	 EAX
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 80
meta.asm



3  4504	00001623  58						 POP	 EAX
2  4505	00001624  3B C3						 CMP	 EAX,EBX
2  4506	00001626  B8 FFFFFFFF					 MOV	 EAX,TRUE
2  4507	0000162B  7F 05						 JG	 SHORT GR_YES
2  4508	0000162D  B8 00000000					 MOV	 EAX,FALSE
2  4509	00001632			 GR_YES:
2  4510								 PUSHDS	 EAX
3  4511	00001632  50						 PUSH	 EAX
2  4512								 $NEXT
3  4513	00001633  AD						 LODSD				 ; fetch address
4  4514	00001634  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4515	00001636  FF E3						 JMP	 EBX			 ; execute
2  4516
2  4517					 ;  6.1.0530 =
2  4518					 ;  D: a b -- flag ( a = b )
2  4519								 $DEF	 '=',$EQ
3  4520	00001638			 ??0233:
3  4521	00001638  00						   DB	 VEF_USUAL
3  4522	00001639  01						 DB	 ??0234	- $ - 1
3  4523	0000163A  3D						 DB	 '='
3  4524	0000163B			 ??0234:
3  4525	0000163B  03						 DB	 ??0234	- ??0233
3  4526	0000163C  20001616					 DD	 VOC_LINK
3  4527	00001640						   LABEL   $EQ FAR
3  4528	00001640  20001644					   DD	   ??0236 + DESIRED_BASE_EQU
3  4529	00001644			 ??0236:
2  4530								 POPDS	 EBX
3  4531	00001644  5B						 POP	 EBX
2  4532								 POPDS	 EAX
3  4533	00001645  58						 POP	 EAX
2  4534	00001646  3B C3						 CMP	 EAX,EBX
2  4535	00001648  B8 FFFFFFFF					 MOV	 EAX,TRUE
2  4536	0000164D  74 05						 JZ	 SHORT EQ_YES
2  4537	0000164F  B8 00000000					 MOV	 EAX,FALSE
2  4538	00001654			 EQ_YES:
2  4539								 PUSHDS	 EAX
3  4540	00001654  50						 PUSH	 EAX
2  4541								 $NEXT
3  4542	00001655  AD						 LODSD				 ; fetch address
4  4543	00001656  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4544	00001658  FF E3						 JMP	 EBX			 ; execute
2  4545
2  4546					 ;  6.2.0500 <>
2  4547					 ;  Flag is true if and	only if	x1 is not bit-for-bit the same as x2.
2  4548					 ;  D: x1 x2 --	flag
2  4549								 $DEF	 '<>',$NOEQ
3  4550	0000165A			 ??0237:
3  4551	0000165A  00						   DB	 VEF_USUAL
3  4552	0000165B  02						 DB	 ??0238	- $ - 1
3  4553	0000165C  3C 3E						 DB	 '<>'
3  4554	0000165E			 ??0238:
3  4555	0000165E  04						 DB	 ??0238	- ??0237
3  4556	0000165F  20001638					 DD	 VOC_LINK
3  4557	00001663						   LABEL   $NOEQ FAR
3  4558	00001663  20001667					   DD	   ??023A + DESIRED_BASE_EQU
3  4559	00001667			 ??023A:
2  4560								 POPDS	 EBX
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 81
meta.asm



3  4561	00001667  5B						 POP	 EBX
2  4562								 POPDS	 EAX
3  4563	00001668  58						 POP	 EAX
2  4564	00001669  3B C3						 CMP	 EAX,EBX
2  4565	0000166B  B8 FFFFFFFF					 MOV	 EAX,TRUE
2  4566	00001670  75 05						 JNZ	 SHORT NOEQ_YES
2  4567	00001672  B8 00000000					 MOV	 EAX,FALSE
2  4568	00001677			 NOEQ_YES:
2  4569								 PUSHDS	 EAX
3  4570	00001677  50						 PUSH	 EAX
2  4571								 $NEXT
3  4572	00001678  AD						 LODSD				 ; fetch address
4  4573	00001679  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4574	0000167B  FF E3						 JMP	 EBX			 ; execute
2  4575
2  4576					 ;  6.1.0250 0<
2  4577					 ;  D: a -- flag ( a < 0 )
2  4578								 $DEF	 '0<',$ZEROLE
3  4579	0000167D			 ??023B:
3  4580	0000167D  00						   DB	 VEF_USUAL
3  4581	0000167E  02						 DB	 ??023C	- $ - 1
3  4582	0000167F  30 3C						 DB	 '0<'
3  4583	00001681			 ??023C:
3  4584	00001681  04						 DB	 ??023C	- ??023B
3  4585	00001682  2000165A					 DD	 VOC_LINK
3  4586	00001686						   LABEL   $ZEROLE FAR
3  4587	00001686  2000168A					   DD	   ??023E + DESIRED_BASE_EQU
3  4588	0000168A			 ??023E:
2  4589								 POPDS	 EAX
3  4590	0000168A  58						 POP	 EAX
2  4591	0000168B  0B C0						 OR	 EAX,EAX
2  4592	0000168D  B8 FFFFFFFF					 MOV	 EAX,TRUE
2  4593	00001692  7C 05						 JL	 SHORT ZEROLE_YES
2  4594	00001694  B8 00000000					 MOV	 EAX,FALSE
2  4595	00001699			 ZEROLE_YES:
2  4596								 PUSHDS	 EAX
3  4597	00001699  50						 PUSH	 EAX
2  4598								 $NEXT
3  4599	0000169A  AD						 LODSD				 ; fetch address
4  4600	0000169B  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4601	0000169D  FF E3						 JMP	 EBX			 ; execute
2  4602
2  4603					 ;  6.1.0270 0=
2  4604					 ;  D: a -- flag ( a = 0 )
2  4605								 $DEF	 '0=',$ZEROEQ
3  4606	0000169F			 ??023F:
3  4607	0000169F  00						   DB	 VEF_USUAL
3  4608	000016A0  02						 DB	 ??0240	- $ - 1
3  4609	000016A1  30 3D						 DB	 '0='
3  4610	000016A3			 ??0240:
3  4611	000016A3  04						 DB	 ??0240	- ??023F
3  4612	000016A4  2000167D					 DD	 VOC_LINK
3  4613	000016A8						   LABEL   $ZEROEQ FAR
3  4614	000016A8  200016AC					   DD	   ??0242 + DESIRED_BASE_EQU
3  4615	000016AC			 ??0242:
2  4616								 POPDS	 EAX
3  4617	000016AC  58						 POP	 EAX
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 82
meta.asm



2  4618	000016AD  0B C0						 OR	 EAX,EAX
2  4619	000016AF  B8 FFFFFFFF					 MOV	 EAX,TRUE
2  4620	000016B4  74 05						 JZ	 SHORT ZEROEQ_YES
2  4621	000016B6  B8 00000000					 MOV	 EAX,FALSE
2  4622	000016BB			 ZEROEQ_YES:
2  4623								 PUSHDS	 EAX
3  4624	000016BB  50						 PUSH	 EAX
2  4625								 $NEXT
3  4626	000016BC  AD						 LODSD				 ; fetch address
4  4627	000016BD  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4628	000016BF  FF E3						 JMP	 EBX			 ; execute
2  4629
2  4630					 ;  6.2.0260 0<>
2  4631					 ;  Flag is true if and	only if	x is not equal to zero.
2  4632					 ;  D: x -- flag
2  4633								 $DEF	 '0<>',$ZERONOEQ
3  4634	000016C1			 ??0243:
3  4635	000016C1  00						   DB	 VEF_USUAL
3  4636	000016C2  03						 DB	 ??0244	- $ - 1
3  4637	000016C3  30 3C	3E					 DB	 '0<>'
3  4638	000016C6			 ??0244:
3  4639	000016C6  05						 DB	 ??0244	- ??0243
3  4640	000016C7  2000169F					 DD	 VOC_LINK
3  4641	000016CB						   LABEL   $ZERONOEQ FAR
3  4642	000016CB  200016CF					   DD	   ??0246 + DESIRED_BASE_EQU
3  4643	000016CF			 ??0246:
2  4644								 POPDS	 EAX
3  4645	000016CF  58						 POP	 EAX
2  4646	000016D0  0B C0						 OR	 EAX,EAX
2  4647	000016D2  B8 FFFFFFFF					 MOV	 EAX,TRUE
2  4648	000016D7  75 05						 JNZ	 SHORT ZERONOEQ_YES
2  4649	000016D9  B8 00000000					 MOV	 EAX,FALSE
2  4650	000016DE			 ZERONOEQ_YES:
2  4651								 PUSHDS	 EAX
3  4652	000016DE  50						 PUSH	 EAX
2  4653								 $NEXT
3  4654	000016DF  AD						 LODSD				 ; fetch address
4  4655	000016E0  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4656	000016E2  FF E3						 JMP	 EBX			 ; execute
2  4657
2  4658					 ;  6.2.0280 0>
2  4659					 ;  Flag is true if and	only if	n is greater than zero.
2  4660					 ;  D: n -- flag
2  4661								 $DEF	 '0>',$ZEROGR
3  4662	000016E4			 ??0247:
3  4663	000016E4  00						   DB	 VEF_USUAL
3  4664	000016E5  02						 DB	 ??0248	- $ - 1
3  4665	000016E6  30 3E						 DB	 '0>'
3  4666	000016E8			 ??0248:
3  4667	000016E8  04						 DB	 ??0248	- ??0247
3  4668	000016E9  200016C1					 DD	 VOC_LINK
3  4669	000016ED						   LABEL   $ZEROGR FAR
3  4670	000016ED  200016F1					   DD	   ??024A + DESIRED_BASE_EQU
3  4671	000016F1			 ??024A:
2  4672								 POPDS	 EAX
3  4673	000016F1  58						 POP	 EAX
2  4674	000016F2  0B C0						 OR	 EAX,EAX
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 83
meta.asm



2  4675	000016F4  B8 FFFFFFFF					 MOV	 EAX,TRUE
2  4676	000016F9  7F 05						 JG	 SHORT ZEROGR_YES
2  4677	000016FB  B8 00000000					 MOV	 EAX,FALSE
2  4678	00001700			 ZEROGR_YES:
2  4679								 PUSHDS	 EAX
3  4680	00001700  50						 PUSH	 EAX
2  4681								 $NEXT
3  4682	00001701  AD						 LODSD				 ; fetch address
4  4683	00001702  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4684	00001704  FF E3						 JMP	 EBX			 ; execute
2  4685
2  4686					 ;******************************************************************************
2  4687					 ;  Unsigned compare
2  4688					 ;******************************************************************************
2  4689
2  4690					 ;  6.1.2340 U<
2  4691					 ;  Flag is true if and	only if	u1 is less than	u2.
2  4692					 ;  D: u1 u2 --	flag ( u1 < u2 )
2  4693								 $DEF	 'U<',$ULE
3  4694	00001706			 ??024B:
3  4695	00001706  00						   DB	 VEF_USUAL
3  4696	00001707  02						 DB	 ??024C	- $ - 1
3  4697	00001708  55 3C						 DB	 'U<'
3  4698	0000170A			 ??024C:
3  4699	0000170A  04						 DB	 ??024C	- ??024B
3  4700	0000170B  200016E4					 DD	 VOC_LINK
3  4701	0000170F						   LABEL   $ULE	FAR
3  4702	0000170F  20001713					   DD	   ??024E + DESIRED_BASE_EQU
3  4703	00001713			 ??024E:
2  4704								 POPDS	 EBX
3  4705	00001713  5B						 POP	 EBX
2  4706								 POPDS	 EAX
3  4707	00001714  58						 POP	 EAX
2  4708	00001715  3B C3						 CMP	 EAX,EBX
2  4709	00001717  B8 FFFFFFFF					 MOV	 EAX,TRUE
2  4710	0000171C  72 05						 JB	 SHORT ULE_YES		 ; jump	if EAX < EBX
2  4711	0000171E  B8 00000000					 MOV	 EAX,FALSE
2  4712	00001723			 ULE_YES:
2  4713								 PUSHDS	 EAX
3  4714	00001723  50						 PUSH	 EAX
2  4715								 $NEXT
3  4716	00001724  AD						 LODSD				 ; fetch address
4  4717	00001725  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4718	00001727  FF E3						 JMP	 EBX			 ; execute
2  4719
2  4720					 ;  6.2.2350 U>
2  4721					 ;  D: u1 u2 --	flag
2  4722					 ;  flag is true if and	only if	u1 is greater than u2.
2  4723								 $DEF	 'U>',$UGR
3  4724	00001729			 ??024F:
3  4725	00001729  00						   DB	 VEF_USUAL
3  4726	0000172A  02						 DB	 ??0250	- $ - 1
3  4727	0000172B  55 3E						 DB	 'U>'
3  4728	0000172D			 ??0250:
3  4729	0000172D  04						 DB	 ??0250	- ??024F
3  4730	0000172E  20001706					 DD	 VOC_LINK
3  4731	00001732						   LABEL   $UGR	FAR
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 84
meta.asm



3  4732	00001732  20001736					   DD	   ??0252 + DESIRED_BASE_EQU
3  4733	00001736			 ??0252:
2  4734								 POPDS	 EBX
3  4735	00001736  5B						 POP	 EBX
2  4736								 POPDS	 EAX
3  4737	00001737  58						 POP	 EAX
2  4738	00001738  3B C3						 CMP	 EAX,EBX
2  4739	0000173A  B8 FFFFFFFF					 MOV	 EAX,TRUE
2  4740	0000173F  77 05						 JA	 SHORT UGR_YES		 ; jump	if EAX > EBX
2  4741	00001741  B8 00000000					 MOV	 EAX,FALSE
2  4742	00001746			 UGR_YES:
2  4743								 PUSHDS	 EAX
3  4744	00001746  50						 PUSH	 EAX
2  4745								 $NEXT
3  4746	00001747  AD						 LODSD				 ; fetch address
4  4747	00001748  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4748	0000174A  FF E3						 JMP	 EBX			 ; execute
2  4749
1  4750								 INCLUDE "memory.inc"
2  4751					 ;******************************************************************************
2  4752					 ;
2  4753					 ;  memory.inc
2  4754					 ;  IKForth
2  4755					 ;
2  4756					 ;  Copyright (C) 1999-2001 Illya Kysil
2  4757					 ;
2  4758					 ;******************************************************************************
2  4759					 ;  Memory
2  4760					 ;******************************************************************************
2  4761
2  4762					 ;  6.1.0010 !
2  4763					 ;  Store x to the specified memory address
2  4764					 ;  D: x addr --
2  4765								 $DEF	 '!',$STORE
3  4766	0000174C			 ??0253:
3  4767	0000174C  00						   DB	 VEF_USUAL
3  4768	0000174D  01						 DB	 ??0254	- $ - 1
3  4769	0000174E  21						 DB	 '!'
3  4770	0000174F			 ??0254:
3  4771	0000174F  03						 DB	 ??0254	- ??0253
3  4772	00001750  20001729					 DD	 VOC_LINK
3  4773	00001754						   LABEL   $STORE FAR
3  4774	00001754  20001758					   DD	   ??0256 + DESIRED_BASE_EQU
3  4775	00001758			 ??0256:
2  4776								 POPDS	 EBX
3  4777	00001758  5B						 POP	 EBX
2  4778								 POPDS	 EAX
3  4779	00001759  58						 POP	 EAX
2  4780	0000175A  89 03						 MOV	 [DWORD	PTR EBX],EAX
2  4781								 $NEXT
3  4782	0000175C  AD						 LODSD				 ; fetch address
4  4783	0000175D  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4784	0000175F  FF E3						 JMP	 EBX			 ; execute
2  4785
2  4786					 ;  6.1.0650 @
2  4787					 ;  Fetch a value from the specified address
2  4788					 ;  D: addr -- x
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 85
meta.asm



2  4789								 $DEF	 '@',$FETCH
3  4790	00001761			 ??0257:
3  4791	00001761  00						   DB	 VEF_USUAL
3  4792	00001762  01						 DB	 ??0258	- $ - 1
3  4793	00001763  40						 DB	 '@'
3  4794	00001764			 ??0258:
3  4795	00001764  03						 DB	 ??0258	- ??0257
3  4796	00001765  2000174C					 DD	 VOC_LINK
3  4797	00001769						   LABEL   $FETCH FAR
3  4798	00001769  2000176D					   DD	   ??025A + DESIRED_BASE_EQU
3  4799	0000176D			 ??025A:
2  4800								 POPDS	 EBX
3  4801	0000176D  5B						 POP	 EBX
2  4802								 PUSHDS	 <[DWORD PTR EBX]>
3  4803	0000176E  FF 33						 PUSH	 [DWORD	PTR EBX]
2  4804								 $NEXT
3  4805	00001770  AD						 LODSD				 ; fetch address
4  4806	00001771  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4807	00001773  FF E3						 JMP	 EBX			 ; execute
2  4808
2  4809					 ;  6.1.0310 2!
2  4810					 ;  Store two top cells	from the stack to the memory
2  4811					 ;  D: x1 x2 addr --
2  4812								 $DEF	 '2!',$2STORE
3  4813	00001775			 ??025B:
3  4814	00001775  00						   DB	 VEF_USUAL
3  4815	00001776  02						 DB	 ??025C	- $ - 1
3  4816	00001777  32 21						 DB	 '2!'
3  4817	00001779			 ??025C:
3  4818	00001779  04						 DB	 ??025C	- ??025B
3  4819	0000177A  20001761					 DD	 VOC_LINK
3  4820	0000177E						   LABEL   $2STORE FAR
3  4821	0000177E  20001782					   DD	   ??025E + DESIRED_BASE_EQU
3  4822	00001782			 ??025E:
2  4823								 POPDS	 EBX
3  4824	00001782  5B						 POP	 EBX
2  4825								 POPDS	 <[DWORD PTR EBX]>
3  4826	00001783  8F 03						 POP	 [DWORD	PTR EBX]
2  4827								 POPDS	 <[DWORD PTR EBX + CELL_SIZE]>
3  4828	00001785  8F 43	04					 POP	 [DWORD	PTR EBX	+ CELL_SIZE]
2  4829								 $NEXT
3  4830	00001788  AD						 LODSD				 ; fetch address
4  4831	00001789  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4832	0000178B  FF E3						 JMP	 EBX			 ; execute
2  4833
2  4834					 ;  6.1.0350 2@
2  4835					 ;  Fetch two cells from the memory and	put them on stack
2  4836					 ;  D: addr -- x1 x2
2  4837								 $DEF	 '2@',$2FETCH
3  4838	0000178D			 ??025F:
3  4839	0000178D  00						   DB	 VEF_USUAL
3  4840	0000178E  02						 DB	 ??0260	- $ - 1
3  4841	0000178F  32 40						 DB	 '2@'
3  4842	00001791			 ??0260:
3  4843	00001791  04						 DB	 ??0260	- ??025F
3  4844	00001792  20001775					 DD	 VOC_LINK
3  4845	00001796						   LABEL   $2FETCH FAR
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 86
meta.asm



3  4846	00001796  2000179A					   DD	   ??0262 + DESIRED_BASE_EQU
3  4847	0000179A			 ??0262:
2  4848								 POPDS	 EBX
3  4849	0000179A  5B						 POP	 EBX
2  4850								 PUSHDS	 <[DWORD PTR EBX + CELL_SIZE]>
3  4851	0000179B  FF 73	04					 PUSH	 [DWORD	PTR EBX	+ CELL_SIZE]
2  4852								 PUSHDS	 <[DWORD PTR EBX]>
3  4853	0000179E  FF 33						 PUSH	 [DWORD	PTR EBX]
2  4854								 $NEXT
3  4855	000017A0  AD						 LODSD				 ; fetch address
4  4856	000017A1  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4857	000017A3  FF E3						 JMP	 EBX			 ; execute
2  4858
2  4859					 ;  6.1.0850 C!
2  4860					 ;  Store char value
2  4861					 ;  D: char addr --
2  4862								 $DEF	 'C!',$CSTORE
3  4863	000017A5			 ??0263:
3  4864	000017A5  00						   DB	 VEF_USUAL
3  4865	000017A6  02						 DB	 ??0264	- $ - 1
3  4866	000017A7  43 21						 DB	 'C!'
3  4867	000017A9			 ??0264:
3  4868	000017A9  04						 DB	 ??0264	- ??0263
3  4869	000017AA  2000178D					 DD	 VOC_LINK
3  4870	000017AE						   LABEL   $CSTORE FAR
3  4871	000017AE  200017B2					   DD	   ??0266 + DESIRED_BASE_EQU
3  4872	000017B2			 ??0266:
2  4873								 POPDS	 EBX
3  4874	000017B2  5B						 POP	 EBX
2  4875								 POPDS	 EAX
3  4876	000017B3  58						 POP	 EAX
2  4877	000017B4  88 03						 MOV	 [BYTE PTR EBX],AL
2  4878								 $NEXT
3  4879	000017B6  AD						 LODSD				 ; fetch address
4  4880	000017B7  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4881	000017B9  FF E3						 JMP	 EBX			 ; execute
2  4882
2  4883					 ;  6.1.0870 C@
2  4884					 ;  Fetch char value
2  4885					 ;  D: addr -- char
2  4886								 $DEF	 'C@',$CFETCH
3  4887	000017BB			 ??0267:
3  4888	000017BB  00						   DB	 VEF_USUAL
3  4889	000017BC  02						 DB	 ??0268	- $ - 1
3  4890	000017BD  43 40						 DB	 'C@'
3  4891	000017BF			 ??0268:
3  4892	000017BF  04						 DB	 ??0268	- ??0267
3  4893	000017C0  200017A5					 DD	 VOC_LINK
3  4894	000017C4						   LABEL   $CFETCH FAR
3  4895	000017C4  200017C8					   DD	   ??026A + DESIRED_BASE_EQU
3  4896	000017C8			 ??026A:
2  4897								 POPDS	 EBX
3  4898	000017C8  5B						 POP	 EBX
2  4899	000017C9  33 C0						 XOR	 EAX,EAX
2  4900	000017CB  8A 03						 MOV	 AL,[BYTE PTR EBX]
2  4901								 PUSHDS	 EAX
3  4902	000017CD  50						 PUSH	 EAX
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 87
meta.asm



2  4903								 $NEXT
3  4904	000017CE  AD						 LODSD				 ; fetch address
4  4905	000017CF  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4906	000017D1  FF E3						 JMP	 EBX			 ; execute
2  4907
2  4908					 ;  6.1.0880 CELL+
2  4909					 ;  D: addr - addr+cellsize
2  4910								 $DEF	 'CELL+',$CELLADD
3  4911	000017D3			 ??026B:
3  4912	000017D3  00						   DB	 VEF_USUAL
3  4913	000017D4  05						 DB	 ??026C	- $ - 1
3  4914	000017D5  43 45	4C 4C 2B				 DB	 'CELL+'
3  4915	000017DA			 ??026C:
3  4916	000017DA  07						 DB	 ??026C	- ??026B
3  4917	000017DB  200017BB					 DD	 VOC_LINK
3  4918	000017DF						   LABEL   $CELLADD FAR
3  4919	000017DF  200017E3					   DD	   ??026E + DESIRED_BASE_EQU
3  4920	000017E3			 ??026E:
2  4921								 POPDS	 EAX
3  4922	000017E3  58						 POP	 EAX
2  4923	000017E4  83 C0	04					 ADD	 EAX,CELL_SIZE
2  4924								 PUSHDS	 EAX
3  4925	000017E7  50						 PUSH	 EAX
2  4926								 $NEXT
3  4927	000017E8  AD						 LODSD				 ; fetch address
4  4928	000017E9  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4929	000017EB  FF E3						 JMP	 EBX			 ; execute
2  4930
2  4931					 ;  6.1.0890 CELLS
2  4932					 ;  D: a - a*cellsize
2  4933								 $DEF	 'CELLS',$CELLS
3  4934	000017ED			 ??026F:
3  4935	000017ED  00						   DB	 VEF_USUAL
3  4936	000017EE  05						 DB	 ??0270	- $ - 1
3  4937	000017EF  43 45	4C 4C 53				 DB	 'CELLS'
3  4938	000017F4			 ??0270:
3  4939	000017F4  07						 DB	 ??0270	- ??026F
3  4940	000017F5  200017D3					 DD	 VOC_LINK
3  4941	000017F9						   LABEL   $CELLS FAR
3  4942	000017F9  200017FD					   DD	   ??0272 + DESIRED_BASE_EQU
3  4943	000017FD			 ??0272:
2  4944								 POPDS	 EAX
3  4945	000017FD  58						 POP	 EAX
2  4946	000017FE  03 C0						 ADD	 EAX,EAX
2  4947	00001800  03 C0						 ADD	 EAX,EAX
2  4948								 PUSHDS	 EAX
3  4949	00001802  50						 PUSH	 EAX
2  4950								 $NEXT
3  4951	00001803  AD						 LODSD				 ; fetch address
4  4952	00001804  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4953	00001806  FF E3						 JMP	 EBX			 ; execute
2  4954
2  4955					 ;  6.1.0897 CHAR+
2  4956					 ;  D: addr - addr+charsize
2  4957								 $DEF	 'CHAR+',$CHARADD
3  4958	00001808			 ??0273:
3  4959	00001808  00						   DB	 VEF_USUAL
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 88
meta.asm



3  4960	00001809  05						 DB	 ??0274	- $ - 1
3  4961	0000180A  43 48	41 52 2B				 DB	 'CHAR+'
3  4962	0000180F			 ??0274:
3  4963	0000180F  07						 DB	 ??0274	- ??0273
3  4964	00001810  200017ED					 DD	 VOC_LINK
3  4965	00001814						   LABEL   $CHARADD FAR
3  4966	00001814  20001818					   DD	   ??0276 + DESIRED_BASE_EQU
3  4967	00001818			 ??0276:
2  4968								 POPDS	 EAX
3  4969	00001818  58						 POP	 EAX
2  4970	00001819  40						 INC	 EAX
2  4971								 PUSHDS	 EAX
3  4972	0000181A  50						 PUSH	 EAX
2  4973								 $NEXT
3  4974	0000181B  AD						 LODSD				 ; fetch address
4  4975	0000181C  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  4976	0000181E  FF E3						 JMP	 EBX			 ; execute
2  4977
2  4978
1  4979								 INCLUDE "io.inc"
2  4980					 ;******************************************************************************
2  4981					 ;
2  4982					 ;  io.inc
2  4983					 ;  IKForth
2  4984					 ;
2  4985					 ;  Copyright (C) 1999-2001 Illya Kysil
2  4986					 ;
2  4987					 ;******************************************************************************
2  4988					 ;  I/O
2  4989					 ;******************************************************************************
2  4990
2  4991					 ;  6.1.0695 ACCEPT
2  4992								 $DEF	 'ACCEPT',$ACCEPT
3  4993	00001820			 ??0277:
3  4994	00001820  00						   DB	 VEF_USUAL
3  4995	00001821  06						 DB	 ??0278	- $ - 1
3  4996	00001822  41 43	43 45 50 54				 DB	 'ACCEPT'
3  4997	00001828			 ??0278:
3  4998	00001828  08						 DB	 ??0278	- ??0277
3  4999	00001829  20001808					 DD	 VOC_LINK
3  5000	0000182D						   LABEL   $ACCEPT FAR
3  5001	0000182D  20001831					   DD	   ??027A + DESIRED_BASE_EQU
3  5002	00001831			 ??027A:
2  5003								 $CALL	 ACCEPT_FUNC
4  5004	00001831  83 ED	04					 SUB	 EBP,CELL_SIZE
4  5005	00001834  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  5006	00001837  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  5007	0000183D  83 C3	1C					 ADD	 EBX,ACCEPT_FUNC * CELL_SIZE
3  5008	00001840  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  5009	00001842  FF D3						 CALL	 EBX
4  5010	00001844  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  5011	00001847  83 C5	04					 ADD	 EBP,CELL_SIZE
2  5012	0000184A  50						 PUSH	 EAX
2  5013								 $NEXT
3  5014	0000184B  AD						 LODSD				 ; fetch address
4  5015	0000184C  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  5016	0000184E  FF E3						 JMP	 EBX			 ; execute
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 89
meta.asm



2  5017
2  5018					 ;  6.1.1320 EMIT
2  5019					 ;  Emit a char	to output
2  5020					 ;  D: char --
2  5021								 $DEF	 'EMIT',$EMIT
3  5022	00001850			 ??027B:
3  5023	00001850  00						   DB	 VEF_USUAL
3  5024	00001851  04						 DB	 ??027C	- $ - 1
3  5025	00001852  45 4D	49 54					 DB	 'EMIT'
3  5026	00001856			 ??027C:
3  5027	00001856  06						 DB	 ??027C	- ??027B
3  5028	00001857  20001820					 DD	 VOC_LINK
3  5029	0000185B						   LABEL   $EMIT FAR
3  5030	0000185B  2000185F					   DD	   ??027E + DESIRED_BASE_EQU
3  5031	0000185F			 ??027E:
2  5032								 $CALL	 EMIT_FUNC
4  5033	0000185F  83 ED	04					 SUB	 EBP,CELL_SIZE
4  5034	00001862  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  5035	00001865  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  5036	0000186B  83 C3	14					 ADD	 EBX,EMIT_FUNC * CELL_SIZE
3  5037	0000186E  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  5038	00001870  FF D3						 CALL	 EBX
4  5039	00001872  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  5040	00001875  83 C5	04					 ADD	 EBP,CELL_SIZE
2  5041								 $NEXT
3  5042	00001878  AD						 LODSD				 ; fetch address
4  5043	00001879  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  5044	0000187B  FF E3						 JMP	 EBX			 ; execute
2  5045
2  5046					 ;  6.1.2310 TYPE
2  5047					 ;  Display the	character string specified by addr and length n
2  5048					 ;  D: addr n --
2  5049								 $DEF	 'TYPE',$TYPE
3  5050	0000187D			 ??027F:
3  5051	0000187D  00						   DB	 VEF_USUAL
3  5052	0000187E  04						 DB	 ??0280	- $ - 1
3  5053	0000187F  54 59	50 45					 DB	 'TYPE'
3  5054	00001883			 ??0280:
3  5055	00001883  06						 DB	 ??0280	- ??027F
3  5056	00001884  20001850					 DD	 VOC_LINK
3  5057	00001888						   LABEL   $TYPE FAR
3  5058	00001888  2000188C					   DD	   ??0282 + DESIRED_BASE_EQU
3  5059	0000188C			 ??0282:
2  5060								 $CALL	 TYPE_FUNC
4  5061	0000188C  83 ED	04					 SUB	 EBP,CELL_SIZE
4  5062	0000188F  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  5063	00001892  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  5064	00001898  83 C3	18					 ADD	 EBX,TYPE_FUNC * CELL_SIZE
3  5065	0000189B  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  5066	0000189D  FF D3						 CALL	 EBX
4  5067	0000189F  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  5068	000018A2  83 C5	04					 ADD	 EBP,CELL_SIZE
2  5069								 $NEXT
3  5070	000018A5  AD						 LODSD				 ; fetch address
4  5071	000018A6  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  5072	000018A8  FF E3						 JMP	 EBX			 ; execute
2  5073
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 90
meta.asm



2  5074					 ;  (TYPE)
2  5075								 $COLON	 '(TYPE)',$PTYPE
4  5076	000018AA			 ??0283:
4  5077	000018AA  00						   DB	 VEF_USUAL
4  5078	000018AB  06						 DB	 ??0284	- $ - 1
4  5079	000018AC  28 54	59 50 45 29				 DB	 '(TYPE)'
4  5080	000018B2			 ??0284:
4  5081	000018B2  08						 DB	 ??0284	- ??0283
4  5082	000018B3  2000187D					 DD	 VOC_LINK
4  5083	000018B7						   LABEL   $PTYPE FAR
4  5084	000018B7  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  5085	000018BB			 ??0286:
2  5086								 CW	 $RFROM			 ; a
3  5087	000018BB  200012A8					 DD	 $RFROM	+ DESIRED_BASE_EQU
2  5088								 CW	 $COUNT			 ; a+1 b
3  5089	000018BF  20001FF6					 DD	 $COUNT	+ DESIRED_BASE_EQU
2  5090								 CW	 $OVER			 ; a+1 b a+1
3  5091	000018C3  200011BD					 DD	 $OVER + DESIRED_BASE_EQU
2  5092								 CW	 $OVER			 ; a+1 b a+1 b
3  5093	000018C7  200011BD					 DD	 $OVER + DESIRED_BASE_EQU
2  5094								 CW	 $ADD			 ; a+1 b a+1+b
3  5095	000018CB  200013BE					 DD	 $ADD +	DESIRED_BASE_EQU
2  5096								 CW	 $TOR			 ; a+1 b
3  5097	000018CF  2000128F					 DD	 $TOR +	DESIRED_BASE_EQU
2  5098								 CW	 $TYPE
3  5099	000018D3  20001888					 DD	 $TYPE + DESIRED_BASE_EQU
2  5100								 CW	 $EXIT
3  5101	000018D7  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  5102
2  5103
1  5104								 INCLUDE "search.inc"
2  5105					 ;******************************************************************************
2  5106					 ;
2  5107					 ;  search.inc
2  5108					 ;  IKForth
2  5109					 ;
2  5110					 ;  Copyright (C) 1999-2001 Illya Kysil
2  5111					 ;
2  5112					 ;******************************************************************************
2  5113					 ;  Words search
2  5114					 ;******************************************************************************
2  5115
2  5116					 ;  16.6.1.1595	FORTH-WORDLIST
2  5117								 $VAR	 'FORTH-WORDLIST',$FORTH_WORDLIST
4  5118	000018DB			 ??0287:
4  5119	000018DB  00						   DB	 VEF_USUAL
4  5120	000018DC  0E						 DB	 ??0288	- $ - 1
4  5121	000018DD  46 4F	52 54 48 2D 57+				 DB	 'FORTH-WORDLIST'
   5122		  4F 52	44 4C 49 53 54
4  5123	000018EB			 ??0288:
4  5124	000018EB  10						 DB	 ??0288	- ??0287
4  5125	000018EC  200018AA					 DD	 VOC_LINK
4  5126	000018F0						   LABEL   $FORTH_WORDLIST FAR
4  5127	000018F0  200000AD					   DD	   $DOVAR + DESIRED_BASE_EQU
4  5128	000018F4			 ??028A:
2  5129	000018F4			 FORTH_WORDLIST_EQU:
2  5130	000018F4  200027B2					 DD	 LATEST_WORD		 ; last	word in	a list
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 91
meta.asm



2  5131								 CC	 0			 ; wordlist name
3  5132	000018F8  00000000					 DD	 0
2  5133								 CC	 0			 ; wordlist link
3  5134	000018FC  00000000					 DD	 0
2  5135
2  5136					 ;  16.6.1.2192	SEARCH-WORDLIST
2  5137					 ;  D: ( c-addr	u wid -- 0 | xt	1 | xt -1 )
2  5138								 $DEF	 'SEARCH-WORDLIST',$SEARCH_WORDLIST
3  5139	00001900			 ??028B:
3  5140	00001900  00						   DB	 VEF_USUAL
3  5141	00001901  0F						 DB	 ??028C	- $ - 1
3  5142	00001902  53 45	41 52 43 48 2D+				 DB	 'SEARCH-WORDLIST'
   5143		  57 4F	52 44 4C 49 53+
   5144		  54
3  5145	00001911			 ??028C:
3  5146	00001911  11						 DB	 ??028C	- ??028B
3  5147	00001912  200018DB					 DD	 VOC_LINK
3  5148	00001916						   LABEL   $SEARCH_WORDLIST FAR
3  5149	00001916  2000191A					   DD	   ??028E + DESIRED_BASE_EQU
3  5150	0000191A			 ??028E:
2  5151								 PUSHRS	 EDI
3  5152	0000191A  83 ED	04					 SUB	 EBP,CELL_SIZE
3  5153	0000191D  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
2  5154								 PUSHRS	 ESI
3  5155	00001920  83 ED	04					 SUB	 EBP,CELL_SIZE
3  5156	00001923  89 75	00					 MOV	 [DWORD	PTR EBP],ESI
2  5157								 POPDS	 EAX			 ; wid
3  5158	00001926  58						 POP	 EAX
2  5159	00001927  8B 30						 MOV	 ESI,[DWORD PTR	EAX]	 ; get LATEST word link
2  5160	00001929  8B 5F	28					 MOV	 EBX,[DWORD PTR	EDI + CASE_SENSITIVE_VAR]
2  5161								 POPDS	 ECX			 ; u
3  5162	0000192C  59						 POP	 ECX
2  5163								 POPDS	 EDI			 ; c-addr
3  5164	0000192D  5F						 POP	 EDI
2  5165	0000192E			 SW_LOOP:
2  5166	0000192E  0B F6						 OR	 ESI,ESI
2  5167	00001930  74 70						 JZ	 SHORT SW_NOT_FOUND
2  5168	00001932  66| 8B 06					 MOV	 AX,[WORD PTR ESI]
2  5169	00001935  3A E1						 CMP	 AH,CL
2  5170	00001937  75 33						 JNZ	 SHORT SW_NEXT
2  5171	00001939  A8 02						 TEST	 AL,VEF_HIDDEN
2  5172	0000193B  75 2F						 JNZ	 SHORT SW_NEXT
2  5173								 PUSHDS	 ESI
3  5174	0000193D  56						 PUSH	 ESI
2  5175								 PUSHDS	 EDI
3  5176	0000193E  57						 PUSH	 EDI
2  5177								 PUSHDS	 ECX
3  5178	0000193F  51						 PUSH	 ECX
2  5179	00001940  83 C6	02					 ADD	 ESI,2
2  5180	00001943			 CMP_LOOP:
2  5181	00001943  8A 06						 MOV	 AL,[BYTE PTR ESI]
2  5182	00001945  8A 27						 MOV	 AH,[BYTE PTR EDI]
2  5183	00001947  0B DB						 OR	 EBX,EBX
2  5184	00001949  75 0C						 JNZ	 SHORT CMP_CONT
2  5185	0000194B  E8 00000065					 CALL	 UPCASE
2  5186	00001950  86 C4						 XCHG	 AL,AH
2  5187	00001952  E8 0000005E					 CALL	 UPCASE
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 92
meta.asm



2  5188	00001957			 CMP_CONT:
2  5189	00001957  3A C4						 CMP	 AL,AH
2  5190	00001959  75 0E						 JNZ	 SHORT CMP_EXIT
2  5191	0000195B  46						 INC	 ESI
2  5192	0000195C  47						 INC	 EDI
2  5193	0000195D  49						 DEC	 ECX
2  5194	0000195E  0B C9						 OR	 ECX,ECX
2  5195	00001960  75 E1						 JNZ	 SHORT CMP_LOOP
2  5196	00001962  3A C4						 CMP	 AL,AH
2  5197								 POPDS	 ECX
3  5198	00001964  59						 POP	 ECX
2  5199								 POPDS	 EDI
3  5200	00001965  5F						 POP	 EDI
2  5201								 POPDS	 ESI
3  5202	00001966  5E						 POP	 ESI
2  5203	00001967  74 10						 JZ	 SHORT SW_FOUND
2  5204	00001969			 CMP_EXIT:
2  5205								 POPDS	 ECX
3  5206	00001969  59						 POP	 ECX
2  5207								 POPDS	 EDI
3  5208	0000196A  5F						 POP	 EDI
2  5209								 POPDS	 ESI
3  5210	0000196B  5E						 POP	 ESI
2  5211	0000196C			 SW_NEXT:
2  5212	0000196C  0F B6	46 01					 MOVZX	 EAX,[BYTE PTR ESI + 1]
2  5213	00001970  03 F0						 ADD	 ESI,EAX
2  5214	00001972  83 C6	03					 ADD	 ESI,3
2  5215	00001975  8B 36						 MOV	 ESI,[DWORD PTR	ESI]
2  5216	00001977  EB B5						 JMP	 SHORT SW_LOOP
2  5217
2  5218	00001979			 SW_FOUND:
2  5219	00001979  8A 06						 MOV	 AL,[BYTE PTR ESI]
2  5220	0000197B  A8 01						 TEST	 AL,VEF_IMMEDIATE
2  5221	0000197D  B8 00000001					 MOV	 EAX,1
2  5222	00001982  75 02						 JNZ	 SHORT SW_FOUND_IMMEDIATE
2  5223	00001984  F7 D8						 NEG	 EAX
2  5224	00001986			 SW_FOUND_IMMEDIATE:
2  5225	00001986  0F B6	5E 01					 MOVZX	 EBX,[BYTE PTR ESI + 1]
2  5226	0000198A  03 F3						 ADD	 ESI,EBX
2  5227	0000198C  83 C6	07					 ADD	 ESI,7
2  5228								 PUSHDS	 ESI
3  5229	0000198F  56						 PUSH	 ESI
2  5230								 PUSHDS	 EAX
3  5231	00001990  50						 PUSH	 EAX
2  5232								 POPRS	 ESI
3  5233	00001991  8B 75	00					 MOV	 ESI,[DWORD PTR	EBP]
3  5234	00001994  83 C5	04					 ADD	 EBP,CELL_SIZE
2  5235								 POPRS	 EDI
3  5236	00001997  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
3  5237	0000199A  83 C5	04					 ADD	 EBP,CELL_SIZE
2  5238								 $NEXT
3  5239	0000199D  AD						 LODSD				 ; fetch address
4  5240	0000199E  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  5241	000019A0  FF E3						 JMP	 EBX			 ; execute
2  5242
2  5243	000019A2			 SW_NOT_FOUND:
2  5244								 PUSHDS	 0
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 93
meta.asm



3  5245	000019A2  6A 00						 PUSH	 0
2  5246								 POPRS	 ESI
3  5247	000019A4  8B 75	00					 MOV	 ESI,[DWORD PTR	EBP]
3  5248	000019A7  83 C5	04					 ADD	 EBP,CELL_SIZE
2  5249								 POPRS	 EDI
3  5250	000019AA  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
3  5251	000019AD  83 C5	04					 ADD	 EBP,CELL_SIZE
2  5252								 $NEXT
3  5253	000019B0  AD						 LODSD				 ; fetch address
4  5254	000019B1  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  5255	000019B3  FF E3						 JMP	 EBX			 ; execute
2  5256
2  5257	000019B5						 PROC	 UPCASE
2  5258	000019B5  3C 61						 CMP	 AL,'a'
2  5259	000019B7  72 06						 JB	 SHORT @@UC		 ; jump	if AH <	'a'
2  5260	000019B9  3C 7A						 CMP	 AL,'z'
2  5261	000019BB  77 02						 JA	 SHORT @@UC		 ; jump	if AH >	'z'
2  5262	000019BD  2C 20						 SUB	 AL,'a'	- 'A'		 ; convert to uppercase
2  5263	000019BF			 @@UC:
2  5264	000019BF  C3						 RET
2  5265	000019C0						 ENDP	 UPCASE
2  5266
2  5267					 ;  FIND-FORTH
2  5268					 ;  D: ( c-addr	-- c-addr 0 | xt 1 | xt	-1 )
2  5269								 $COLON	 'FIND-FORTH',$FIND_FORTH
4  5270	000019C0			 ??028F:
4  5271	000019C0  00						   DB	 VEF_USUAL
4  5272	000019C1  0A						 DB	 ??0290	- $ - 1
4  5273	000019C2  46 49	4E 44 2D 46 4F+				 DB	 'FIND-FORTH'
   5274		  52 54	48
4  5275	000019CC			 ??0290:
4  5276	000019CC  0C						 DB	 ??0290	- ??028F
4  5277	000019CD  20001900					 DD	 VOC_LINK
4  5278	000019D1						   LABEL   $FIND_FORTH FAR
4  5279	000019D1  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  5280	000019D5			 ??0292:
2  5281								 CW	 $DUP
3  5282	000019D5  2000118F					 DD	 $DUP +	DESIRED_BASE_EQU
2  5283								 CW	 $TOR
3  5284	000019D9  2000128F					 DD	 $TOR +	DESIRED_BASE_EQU
2  5285								 CW	 $COUNT
3  5286	000019DD  20001FF6					 DD	 $COUNT	+ DESIRED_BASE_EQU
2  5287								 CW	 $FORTH_WORDLIST
3  5288	000019E1  200018F0					 DD	 $FORTH_WORDLIST + DESIRED_BASE_EQU
2  5289								 CW	 $SEARCH_WORDLIST
3  5290	000019E5  20001916					 DD	 $SEARCH_WORDLIST + DESIRED_BASE_EQU
2  5291								 CW	 $DUP
3  5292	000019E9  2000118F					 DD	 $DUP +	DESIRED_BASE_EQU
2  5293								 CW	 $ZEROEQ
3  5294	000019ED  200016A8					 DD	 $ZEROEQ + DESIRED_BASE_EQU
2  5295								 CW	 $QBRANCH
3  5296	000019F1  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  5297								 CW	 FF_FOUND
3  5298	000019F5  20001A09					 DD	 FF_FOUND + DESIRED_BASE_EQU
2  5299								   CW	   $RFROM
3  5300	000019F9  200012A8					 DD	 $RFROM	+ DESIRED_BASE_EQU
2  5301								   CW	   $SWAP
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 94
meta.asm



3  5302	000019FD  200011EF					 DD	 $SWAP + DESIRED_BASE_EQU
2  5303								 CW	 $BRANCH
3  5304	00001A01  2000005C					 DD	 $BRANCH + DESIRED_BASE_EQU
2  5305								 CW	 FF_EXIT
3  5306	00001A05  20001A11					 DD	 FF_EXIT + DESIRED_BASE_EQU
2  5307	00001A09			 FF_FOUND:
2  5308								   CW	   $RFROM
3  5309	00001A09  200012A8					 DD	 $RFROM	+ DESIRED_BASE_EQU
2  5310								   CW	   $DROP
3  5311	00001A0D  2000117B					 DD	 $DROP + DESIRED_BASE_EQU
2  5312	00001A11			 FF_EXIT:
2  5313								 CW	 $EXIT
3  5314	00001A11  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  5315
2  5316					 ;  6.1.1550 FIND
2  5317					 ;  D: ( c-addr	-- c-addr 0 | xt 1 | xt	-1 )
2  5318								 $DEFER	 'FIND',$FIND
4  5319	00001A15			 ??0293:
4  5320	00001A15  00						   DB	 VEF_USUAL
4  5321	00001A16  04						 DB	 ??0294	- $ - 1
4  5322	00001A17  46 49	4E 44					 DB	 'FIND'
4  5323	00001A1B			 ??0294:
4  5324	00001A1B  06						 DB	 ??0294	- ??0293
4  5325	00001A1C  200019C0					 DD	 VOC_LINK
4  5326	00001A20						   LABEL   $FIND FAR
4  5327	00001A20  2000014A					   DD	   $DODEFER + DESIRED_BASE_EQU
4  5328	00001A24			 ??0296:
2  5329								 CW	 $FIND_FORTH
3  5330	00001A24  200019D1					 DD	 $FIND_FORTH + DESIRED_BASE_EQU
2  5331
2  5332
1  5333								 INCLUDE "fcontrol.inc"
2  5334					 ;******************************************************************************
2  5335					 ;
2  5336					 ;  fcontrol.inc
2  5337					 ;  IKForth
2  5338					 ;
2  5339					 ;  Copyright (C) 1999-2001 Illya Kysil
2  5340					 ;
2  5341					 ;******************************************************************************
2  5342					 ;  Flow control words
2  5343					 ;******************************************************************************
2  5344
2  5345					 ;  6.1.1760 LEAVE
2  5346								 $DEF	 'LEAVE',$LEAVE,,VEF_COMPILE_ONLY
3  5347	00001A28			 ??0297:
3  5348	00001A28  04						   DB	 VEF_COMPILE_ONLY
3  5349	00001A29  05						 DB	 ??0298	- $ - 1
3  5350	00001A2A  4C 45	41 56 45				 DB	 'LEAVE'
3  5351	00001A2F			 ??0298:
3  5352	00001A2F  07						 DB	 ??0298	- ??0297
3  5353	00001A30  20001A15					 DD	 VOC_LINK
3  5354	00001A34						   LABEL   $LEAVE FAR
3  5355	00001A34  20001A38					   DD	   ??029A + DESIRED_BASE_EQU
3  5356	00001A38			 ??029A:
2  5357								 POPRS	 EAX
3  5358	00001A38  8B 45	00					 MOV	 EAX,[DWORD PTR	EBP]
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 95
meta.asm



3  5359	00001A3B  83 C5	04					 ADD	 EBP,CELL_SIZE
2  5360								 POPRS	 EAX
3  5361	00001A3E  8B 45	00					 MOV	 EAX,[DWORD PTR	EBP]
3  5362	00001A41  83 C5	04					 ADD	 EBP,CELL_SIZE
2  5363								 POPRS	 ESI
3  5364	00001A44  8B 75	00					 MOV	 ESI,[DWORD PTR	EBP]
3  5365	00001A47  83 C5	04					 ADD	 EBP,CELL_SIZE
2  5366								 $NEXT
3  5367	00001A4A  AD						 LODSD				 ; fetch address
4  5368	00001A4B  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  5369	00001A4D  FF E3						 JMP	 EBX			 ; execute
2  5370
2  5371					 ;  6.1.1680 I
2  5372					 ;  D: ( -- loop-index )
2  5373								 $DEF	 'I',$I,,VEF_COMPILE_ONLY
3  5374	00001A4F			 ??029B:
3  5375	00001A4F  04						   DB	 VEF_COMPILE_ONLY
3  5376	00001A50  01						 DB	 ??029C	- $ - 1
3  5377	00001A51  49						 DB	 'I'
3  5378	00001A52			 ??029C:
3  5379	00001A52  03						 DB	 ??029C	- ??029B
3  5380	00001A53  20001A28					 DD	 VOC_LINK
3  5381	00001A57						   LABEL   $I FAR
3  5382	00001A57  20001A5B					   DD	   ??029E + DESIRED_BASE_EQU
3  5383	00001A5B			 ??029E:
2  5384								 FETCHRS EAX
3  5385	00001A5B  8B 45	00					   MOV	   EAX,[DWORD PTR EBP]
2  5386								 PUSHDS	 EAX
3  5387	00001A5E  50						 PUSH	 EAX
2  5388								 $NEXT
3  5389	00001A5F  AD						 LODSD				 ; fetch address
4  5390	00001A60  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  5391	00001A62  FF E3						 JMP	 EBX			 ; execute
2  5392
2  5393					 ;  6.1.1730 J
2  5394					 ;  D: ( -- outer-loop-index )
2  5395								 $DEF	 'J',$J,,VEF_COMPILE_ONLY
3  5396	00001A64			 ??029F:
3  5397	00001A64  04						   DB	 VEF_COMPILE_ONLY
3  5398	00001A65  01						 DB	 ??02A0	- $ - 1
3  5399	00001A66  4A						 DB	 'J'
3  5400	00001A67			 ??02A0:
3  5401	00001A67  03						 DB	 ??02A0	- ??029F
3  5402	00001A68  20001A4F					 DD	 VOC_LINK
3  5403	00001A6C						   LABEL   $J FAR
3  5404	00001A6C  20001A70					   DD	   ??02A2 + DESIRED_BASE_EQU
3  5405	00001A70			 ??02A2:
2  5406								 FETCHRS EAX,3
3  5407	00001A70  8B 45	0C					   MOV	   EAX,[DWORD PTR EBP +	3 * CELL_SIZE]
2  5408								 PUSHDS	 EAX
3  5409	00001A73  50						 PUSH	 EAX
2  5410								 $NEXT
3  5411	00001A74  AD						 LODSD				 ; fetch address
4  5412	00001A75  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  5413	00001A77  FF E3						 JMP	 EBX			 ; execute
2  5414
2  5415					 ;  I'
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 96
meta.asm



2  5416					 ;  D: ( -- loop-limit )
2  5417								 $DEF	 'I''',$ITICK,,VEF_COMPILE_ONLY
3  5418	00001A79			 ??02A3:
3  5419	00001A79  04						   DB	 VEF_COMPILE_ONLY
3  5420	00001A7A  02						 DB	 ??02A4	- $ - 1
3  5421	00001A7B  49 27						 DB	 'I'''
3  5422	00001A7D			 ??02A4:
3  5423	00001A7D  04						 DB	 ??02A4	- ??02A3
3  5424	00001A7E  20001A64					 DD	 VOC_LINK
3  5425	00001A82						   LABEL   $ITICK FAR
3  5426	00001A82  20001A86					   DD	   ??02A6 + DESIRED_BASE_EQU
3  5427	00001A86			 ??02A6:
2  5428								 FETCHRS EAX,1
3  5429	00001A86  8B 45	04					   MOV	   EAX,[DWORD PTR EBP +	1 * CELL_SIZE]
2  5430								 PUSHDS	 EAX
3  5431	00001A89  50						 PUSH	 EAX
2  5432								 $NEXT
3  5433	00001A8A  AD						 LODSD				 ; fetch address
4  5434	00001A8B  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  5435	00001A8D  FF E3						 JMP	 EBX			 ; execute
2  5436
2  5437					 ;  6.1.1370 EXECUTE
2  5438								 $DEF	 'EXECUTE',$EXECUTE
3  5439	00001A8F			 ??02A7:
3  5440	00001A8F  00						   DB	 VEF_USUAL
3  5441	00001A90  07						 DB	 ??02A8	- $ - 1
3  5442	00001A91  45 58	45 43 55 54 45				 DB	 'EXECUTE'
3  5443	00001A98			 ??02A8:
3  5444	00001A98  09						 DB	 ??02A8	- ??02A7
3  5445	00001A99  20001A79					 DD	 VOC_LINK
3  5446	00001A9D						   LABEL   $EXECUTE FAR
3  5447	00001A9D  20001AA1					   DD	   ??02AA + DESIRED_BASE_EQU
3  5448	00001AA1			 ??02AA:
2  5449								 POPDS	 EAX			 ; pop new IP from data	stack
3  5450	00001AA1  58						 POP	 EAX
2  5451								 $JMP
3  5452	00001AA2  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
3  5453	00001AA4  FF E3						 JMP	 EBX			 ; execute
2  5454
2  5455
1  5456								 INCLUDE "block.inc"
2  5457					 ;******************************************************************************
2  5458					 ;
2  5459					 ;  block.inc
2  5460					 ;  IKForth
2  5461					 ;
2  5462					 ;  Copyright (C) 1999-2001 Illya Kysil
2  5463					 ;
2  5464					 ;******************************************************************************
2  5465					 ;  Block words
2  5466					 ;******************************************************************************
2  5467
2  5468					 ;  READ-BLOCK
2  5469								 $DEF	 'READ-BLOCK'
3  5470	00001AA6			 ??02AB:
3  5471	00001AA6  00						   DB	 VEF_USUAL
3  5472	00001AA7  0A						 DB	 ??02AC	- $ - 1
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 97
meta.asm



3  5473	00001AA8  52 45	41 44 2D 42 4C+				 DB	 'READ-BLOCK'
   5474		  4F 43	4B
3  5475	00001AB2			 ??02AC:
3  5476	00001AB2  0C						 DB	 ??02AC	- ??02AB
3  5477	00001AB3  20001A8F					 DD	 VOC_LINK
3  5478	00001AB7  20001ABB					   DD	   ??02AE + DESIRED_BASE_EQU
3  5479	00001ABB			 ??02AE:
2  5480								 $CALL	 READ_BLOCK_FUNC
4  5481	00001ABB  83 ED	04					 SUB	 EBP,CELL_SIZE
4  5482	00001ABE  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  5483	00001AC1  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  5484	00001AC7  83 C3	20					 ADD	 EBX,READ_BLOCK_FUNC * CELL_SIZE
3  5485	00001ACA  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  5486	00001ACC  FF D3						 CALL	 EBX
4  5487	00001ACE  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  5488	00001AD1  83 C5	04					 ADD	 EBP,CELL_SIZE
2  5489								 $NEXT
3  5490	00001AD4  AD						 LODSD				 ; fetch address
4  5491	00001AD5  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  5492	00001AD7  FF E3						 JMP	 EBX			 ; execute
2  5493
2  5494					 ;  WRITE-BLOCK
2  5495								 $DEF	 'WRITE-BLOCK'
3  5496	00001AD9			 ??02AF:
3  5497	00001AD9  00						   DB	 VEF_USUAL
3  5498	00001ADA  0B						 DB	 ??02B0	- $ - 1
3  5499	00001ADB  57 52	49 54 45 2D 42+				 DB	 'WRITE-BLOCK'
   5500		  4C 4F	43 4B
3  5501	00001AE6			 ??02B0:
3  5502	00001AE6  0D						 DB	 ??02B0	- ??02AF
3  5503	00001AE7  20001AA6					 DD	 VOC_LINK
3  5504	00001AEB  20001AEF					   DD	   ??02B2 + DESIRED_BASE_EQU
3  5505	00001AEF			 ??02B2:
2  5506								 $CALL	 WRITE_BLOCK_FUNC
4  5507	00001AEF  83 ED	04					 SUB	 EBP,CELL_SIZE
4  5508	00001AF2  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  5509	00001AF5  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  5510	00001AFB  83 C3	24					 ADD	 EBX,WRITE_BLOCK_FUNC *	CELL_SIZE
3  5511	00001AFE  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  5512	00001B00  FF D3						 CALL	 EBX
4  5513	00001B02  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  5514	00001B05  83 C5	04					 ADD	 EBP,CELL_SIZE
2  5515								 $NEXT
3  5516	00001B08  AD						 LODSD				 ; fetch address
4  5517	00001B09  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  5518	00001B0B  FF E3						 JMP	 EBX			 ; execute
2  5519
2  5520					 ;  7.6.1.0790 BLK
2  5521								 $USER	 'BLK',$BLK
4  5522	00001B0D			 ??02B3:
4  5523	00001B0D  00						   DB	 VEF_USUAL
4  5524	00001B0E  03						 DB	 ??02B4	- $ - 1
4  5525	00001B0F  42 4C	4B					 DB	 'BLK'
4  5526	00001B12			 ??02B4:
4  5527	00001B12  05						 DB	 ??02B4	- ??02B3
4  5528	00001B13  20001AD9					 DD	 VOC_LINK
4  5529	00001B17						   LABEL   $BLK	FAR
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 98
meta.asm



4  5530	00001B17  2000012A					   DD	   $DOUSER + DESIRED_BASE_EQU
4  5531	00001B1B			 ??02B6:
2  5532								 CC	 BLK_VAR
3  5533	00001B1B  0000014C					 DD	 BLK_VAR
2  5534
2  5535					 ;  BLOCK#
2  5536								 $USER	 'BLOCK#'
4  5537	00001B1F			 ??02B7:
4  5538	00001B1F  00						   DB	 VEF_USUAL
4  5539	00001B20  06						 DB	 ??02B8	- $ - 1
4  5540	00001B21  42 4C	4F 43 4B 23				 DB	 'BLOCK#'
4  5541	00001B27			 ??02B8:
4  5542	00001B27  08						 DB	 ??02B8	- ??02B7
4  5543	00001B28  20001B0D					 DD	 VOC_LINK
4  5544	00001B2C  2000012A					   DD	   $DOUSER + DESIRED_BASE_EQU
4  5545	00001B30			 ??02BA:
2  5546								 CC	 BLOCK_NUM_VAR
3  5547	00001B30  00000150					 DD	 BLOCK_NUM_VAR
2  5548
2  5549					 ;  BLOCK-UPDATED
2  5550								 $USER	 'BLOCK-UPDATED'
4  5551	00001B34			 ??02BB:
4  5552	00001B34  00						   DB	 VEF_USUAL
4  5553	00001B35  0D						 DB	 ??02BC	- $ - 1
4  5554	00001B36  42 4C	4F 43 4B 2D 55+				 DB	 'BLOCK-UPDATED'
   5555		  50 44	41 54 45 44
4  5556	00001B43			 ??02BC:
4  5557	00001B43  0F						 DB	 ??02BC	- ??02BB
4  5558	00001B44  20001B1F					 DD	 VOC_LINK
4  5559	00001B48  2000012A					   DD	   $DOUSER + DESIRED_BASE_EQU
4  5560	00001B4C			 ??02BE:
2  5561								 CC	 BLOCK_UPDATED_VAR
3  5562	00001B4C  00000154					 DD	 BLOCK_UPDATED_VAR
2  5563
2  5564					 ;  BLOCK-DATA
2  5565								 $USER	 'BLOCK-DATA'
4  5566	00001B50			 ??02BF:
4  5567	00001B50  00						   DB	 VEF_USUAL
4  5568	00001B51  0A						 DB	 ??02C0	- $ - 1
4  5569	00001B52  42 4C	4F 43 4B 2D 44+				 DB	 'BLOCK-DATA'
   5570		  41 54	41
4  5571	00001B5C			 ??02C0:
4  5572	00001B5C  0C						 DB	 ??02C0	- ??02BF
4  5573	00001B5D  20001B34					 DD	 VOC_LINK
4  5574	00001B61  2000012A					   DD	   $DOUSER + DESIRED_BASE_EQU
4  5575	00001B65			 ??02C2:
2  5576								 CC	 BLOCK_VAR
3  5577	00001B65  00000158					 DD	 BLOCK_VAR
2  5578
2  5579					 ;  7.6.1.0800 BLOCK
2  5580								 $DEF	 'BLOCK',$BLOCK
3  5581	00001B69			 ??02C3:
3  5582	00001B69  00						   DB	 VEF_USUAL
3  5583	00001B6A  05						 DB	 ??02C4	- $ - 1
3  5584	00001B6B  42 4C	4F 43 4B				 DB	 'BLOCK'
3  5585	00001B70			 ??02C4:
3  5586	00001B70  07						 DB	 ??02C4	- ??02C3
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 99
meta.asm



3  5587	00001B71  20001B50					 DD	 VOC_LINK
3  5588	00001B75						   LABEL   $BLOCK FAR
3  5589	00001B75  20001B79					   DD	   ??02C6 + DESIRED_BASE_EQU
3  5590	00001B79			 ??02C6:
2  5591	00001B79  8B 87	00000150				 MOV	 EAX,[DWORD PTR	EDI + BLOCK_NUM_VAR]
2  5592	00001B7F  0B C0						 OR	 EAX,EAX
2  5593	00001B81  74 3D						 JZ	 SHORT BLOCK_READ
2  5594	00001B83  8B 87	00000154				 MOV	 EAX,[DWORD PTR	EDI + BLOCK_UPDATED_VAR]
2  5595	00001B89  83 F8	00					 CMP	 EAX,FALSE
2  5596	00001B8C  74 32						 JZ	 SHORT BLOCK_READ
2  5597	00001B8E  8B DF						 MOV	 EBX,EDI
2  5598	00001B90  81 C3	00000158				 ADD	 EBX,BLOCK_VAR
2  5599								 PUSHDS	 EBX
3  5600	00001B96  53						 PUSH	 EBX
2  5601								 PUSHDS	 <[DWORD PTR EDI + BLOCK_NUM_VAR]>
3  5602	00001B97  FF B7	00000150				 PUSH	 [DWORD	PTR EDI	+ BLOCK_NUM_VAR]
2  5603								 $CALL	 WRITE_BLOCK_FUNC
4  5604	00001B9D  83 ED	04					 SUB	 EBP,CELL_SIZE
4  5605	00001BA0  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  5606	00001BA3  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  5607	00001BA9  83 C3	24					 ADD	 EBX,WRITE_BLOCK_FUNC *	CELL_SIZE
3  5608	00001BAC  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  5609	00001BAE  FF D3						 CALL	 EBX
4  5610	00001BB0  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  5611	00001BB3  83 C5	04					 ADD	 EBP,CELL_SIZE
2  5612	00001BB6  C7 87	00000154      +				 MOV	 [DWORD	PTR EDI	+ BLOCK_UPDATED_VAR],FALSE
   5613		  00000000
2  5614	00001BC0			 BLOCK_READ:
2  5615								 POPDS	 EAX
3  5616	00001BC0  58						 POP	 EAX
2  5617	00001BC1  89 87	00000150				 MOV	 [DWORD	PTR EDI	+ BLOCK_NUM_VAR],EAX
2  5618	00001BC7  8B DF						 MOV	 EBX,EDI
2  5619	00001BC9  81 C3	00000158				 ADD	 EBX,BLOCK_VAR
2  5620								 PUSHDS	 EBX
3  5621	00001BCF  53						 PUSH	 EBX
2  5622								 PUSHDS	 EBX
3  5623	00001BD0  53						 PUSH	 EBX
2  5624								 PUSHDS	 EAX
3  5625	00001BD1  50						 PUSH	 EAX
2  5626								 $CALL	 READ_BLOCK_FUNC
4  5627	00001BD2  83 ED	04					 SUB	 EBP,CELL_SIZE
4  5628	00001BD5  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  5629	00001BD8  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  5630	00001BDE  83 C3	20					 ADD	 EBX,READ_BLOCK_FUNC * CELL_SIZE
3  5631	00001BE1  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  5632	00001BE3  FF D3						 CALL	 EBX
4  5633	00001BE5  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  5634	00001BE8  83 C5	04					 ADD	 EBP,CELL_SIZE
2  5635								 $NEXT
3  5636	00001BEB  AD						 LODSD				 ; fetch address
4  5637	00001BEC  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  5638	00001BEE  FF E3						 JMP	 EBX			 ; execute
2  5639
2  5640
1  5641								 INCLUDE "parse.inc"
2  5642					 ;******************************************************************************
2  5643					 ;
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 100
meta.asm



2  5644					 ;  parse.inc
2  5645					 ;  IKForth
2  5646					 ;
2  5647					 ;  Copyright (C) 1999-2001 Illya Kysil
2  5648					 ;
2  5649					 ;******************************************************************************
2  5650					 ;  Parsing
2  5651					 ;******************************************************************************
2  5652
2  5653					 ;  6.1.0560 >IN
2  5654								 $USER	 '>IN',$TOIN
4  5655	00001BF0			 ??02C7:
4  5656	00001BF0  00						   DB	 VEF_USUAL
4  5657	00001BF1  03						 DB	 ??02C8	- $ - 1
4  5658	00001BF2  3E 49	4E					 DB	 '>IN'
4  5659	00001BF5			 ??02C8:
4  5660	00001BF5  05						 DB	 ??02C8	- ??02C7
4  5661	00001BF6  20001B69					 DD	 VOC_LINK
4  5662	00001BFA						   LABEL   $TOIN FAR
4  5663	00001BFA  2000012A					   DD	   $DOUSER + DESIRED_BASE_EQU
4  5664	00001BFE			 ??02CA:
2  5665								 CC	 TOIN_VAR
3  5666	00001BFE  00000020					 DD	 TOIN_VAR
2  5667
2  5668					 ;  (WORD)
2  5669								 $DEF	 '(WORD)',$PWORD
3  5670	00001C02			 ??02CB:
3  5671	00001C02  00						   DB	 VEF_USUAL
3  5672	00001C03  06						 DB	 ??02CC	- $ - 1
3  5673	00001C04  28 57	4F 52 44 29				 DB	 '(WORD)'
3  5674	00001C0A			 ??02CC:
3  5675	00001C0A  08						 DB	 ??02CC	- ??02CB
3  5676	00001C0B  20001BF0					 DD	 VOC_LINK
3  5677	00001C0F						   LABEL   $PWORD FAR
3  5678	00001C0F  20001C13					   DD	   ??02CE + DESIRED_BASE_EQU
3  5679	00001C13			 ??02CE:
2  5680								 PUSHRS	 ESI
3  5681	00001C13  83 ED	04					 SUB	 EBP,CELL_SIZE
3  5682	00001C16  89 75	00					 MOV	 [DWORD	PTR EBP],ESI
2  5683								 PUSHRS	 EDI
3  5684	00001C19  83 ED	04					 SUB	 EBP,CELL_SIZE
3  5685	00001C1C  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
2  5686	00001C1F  8B C7						 MOV	 EAX,EDI
2  5687	00001C21  83 C0	20					 ADD	 EAX,TOIN_VAR
2  5688								 POPDS	 EDI			 ; dest	address
3  5689	00001C24  5F						 POP	 EDI
2  5690								 PUSHRS	 EDI
3  5691	00001C25  83 ED	04					 SUB	 EBP,CELL_SIZE
3  5692	00001C28  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
2  5693	00001C2B  47						 INC	 EDI
2  5694								 POPDS	 ECX			 ; count
3  5695	00001C2C  59						 POP	 ECX
2  5696								 POPDS	 ESI			 ; source address
3  5697	00001C2D  5E						 POP	 ESI
2  5698								 POPDS	 EDX			 ; DL -	char
3  5699	00001C2E  5A						 POP	 EDX
2  5700								 PUSHDS	 EBP
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 101
meta.asm



3  5701	00001C2F  55						 PUSH	 EBP
2  5702	00001C30  8B E8						 MOV	 EBP,EAX
2  5703	00001C32  33 DB						 XOR	 EBX,EBX
2  5704	00001C34  32 E4						 XOR	 AH,AH			 ; in word flag
2  5705	00001C36			 PWORD_LOOP:
2  5706	00001C36  49						 DEC	 ECX
2  5707	00001C37  78 26						 JS	 SHORT PWORD_EXIT
2  5708	00001C39  AC						 LODSB
2  5709	00001C3A  FF 45	00					 INC	 [DWORD	PTR EBP]	 ; inc >IN
2  5710	00001C3D  0A C0						 OR	 AL,AL
2  5711	00001C3F  74 1E						 JZ	 SHORT PWORD_EXIT
2  5712	00001C41  0A E4						 OR	 AH,AH
2  5713	00001C43  74 12						 JZ	 SHORT PWORD_NOT_IN_WORD
2  5714	00001C45  3A C2						 CMP	 AL,DL
2  5715	00001C47  74 16						 JZ	 SHORT PWORD_EXIT
2  5716	00001C49  3C 20						 CMP	 AL,32
2  5717	00001C4B  7F 05						 JG	 SHORT PWORD_ADDCHAR
2  5718	00001C4D  80 FA	20					 CMP	 DL,32
2  5719	00001C50  74 0D						 JZ	 SHORT PWORD_EXIT
2  5720	00001C52			 PWORD_ADDCHAR:
2  5721	00001C52  AA						 STOSB
2  5722	00001C53  FE C3						 INC	 BL
2  5723	00001C55  EB DF						 JMP	 SHORT PWORD_LOOP
2  5724	00001C57			 PWORD_NOT_IN_WORD:
2  5725	00001C57  3C 20						 CMP	 AL,32
2  5726	00001C59  7E DB						 JLE	 SHORT PWORD_LOOP
2  5727	00001C5B  B4 01						 MOV	 AH,1
2  5728	00001C5D  EB F3						 JMP	 SHORT PWORD_ADDCHAR
2  5729	00001C5F			 PWORD_EXIT:
2  5730								 POPDS	 EBP
3  5731	00001C5F  5D						 POP	 EBP
2  5732	00001C60  C6 07	20					 MOV	 [BYTE PTR EDI],32	 ; store space
2  5733								 POPRS	 EDI
3  5734	00001C63  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
3  5735	00001C66  83 C5	04					 ADD	 EBP,CELL_SIZE
2  5736								 PUSHDS	 EDI
3  5737	00001C69  57						 PUSH	 EDI
2  5738	00001C6A  88 1F						 MOV	 [BYTE PTR EDI],BL	 ; store length
2  5739								 POPRS	 EDI
3  5740	00001C6C  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
3  5741	00001C6F  83 C5	04					 ADD	 EBP,CELL_SIZE
2  5742								 POPRS	 ESI
3  5743	00001C72  8B 75	00					 MOV	 ESI,[DWORD PTR	EBP]
3  5744	00001C75  83 C5	04					 ADD	 EBP,CELL_SIZE
2  5745								 $NEXT
3  5746	00001C78  AD						 LODSD				 ; fetch address
4  5747	00001C79  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  5748	00001C7B  FF E3						 JMP	 EBX			 ; execute
2  5749
2  5750					 ;  6.1.2450 WORD
2  5751								 $COLON	 'WORD',$WORD
4  5752	00001C7D			 ??02CF:
4  5753	00001C7D  00						   DB	 VEF_USUAL
4  5754	00001C7E  04						 DB	 ??02D0	- $ - 1
4  5755	00001C7F  57 4F	52 44					 DB	 'WORD'
4  5756	00001C83			 ??02D0:
4  5757	00001C83  06						 DB	 ??02D0	- ??02CF
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 102
meta.asm



4  5758	00001C84  20001C02					 DD	 VOC_LINK
4  5759	00001C88						   LABEL   $WORD FAR
4  5760	00001C88  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  5761	00001C8C			 ??02D2:
2  5762								 CW	 $SOURCE		 ; c c-addr u
3  5763	00001C8C  20000572					 DD	 $SOURCE + DESIRED_BASE_EQU
2  5764								 CW	 $TOIN
3  5765	00001C90  20001BFA					 DD	 $TOIN + DESIRED_BASE_EQU
2  5766								 CW	 $FETCH
3  5767	00001C94  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  5768								 CW	 $SUB
3  5769	00001C98  200013D4					 DD	 $SUB +	DESIRED_BASE_EQU
2  5770								 CW	 $SWAP			 ; c u c-addr
3  5771	00001C9C  200011EF					 DD	 $SWAP + DESIRED_BASE_EQU
2  5772								 CW	 $TOIN			 ; c u c-addr addr
3  5773	00001CA0  20001BFA					 DD	 $TOIN + DESIRED_BASE_EQU
2  5774								 CW	 $FETCH			 ; c u c-addr offset
3  5775	00001CA4  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  5776								 CW	 $ADD			 ; c u c-addr
3  5777	00001CA8  200013BE					 DD	 $ADD +	DESIRED_BASE_EQU
2  5778								 CW	 $SWAP			 ; c c-addr u
3  5779	00001CAC  200011EF					 DD	 $SWAP + DESIRED_BASE_EQU
2  5780								 CW	 $POCKET		 ; c c-addr u dest-addr
3  5781	00001CB0  200002D9					 DD	 $POCKET + DESIRED_BASE_EQU
2  5782								 CW	 $PWORD
3  5783	00001CB4  20001C0F					 DD	 $PWORD	+ DESIRED_BASE_EQU
2  5784								 CW	 $EXIT
3  5785	00001CB8  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  5786
2  5787					 ;  (PARSE)
2  5788								 $DEF	 '(PARSE)',$PPARSE
3  5789	00001CBC			 ??02D3:
3  5790	00001CBC  00						   DB	 VEF_USUAL
3  5791	00001CBD  07						 DB	 ??02D4	- $ - 1
3  5792	00001CBE  28 50	41 52 53 45 29				 DB	 '(PARSE)'
3  5793	00001CC5			 ??02D4:
3  5794	00001CC5  09						 DB	 ??02D4	- ??02D3
3  5795	00001CC6  20001C7D					 DD	 VOC_LINK
3  5796	00001CCA						   LABEL   $PPARSE FAR
3  5797	00001CCA  20001CCE					   DD	   ??02D6 + DESIRED_BASE_EQU
3  5798	00001CCE			 ??02D6:
2  5799								 PUSHRS	 ESI
3  5800	00001CCE  83 ED	04					 SUB	 EBP,CELL_SIZE
3  5801	00001CD1  89 75	00					 MOV	 [DWORD	PTR EBP],ESI
2  5802								 POPDS	 ECX			 ; count
3  5803	00001CD4  59						 POP	 ECX
2  5804								 POPDS	 ESI			 ; source address
3  5805	00001CD5  5E						 POP	 ESI
2  5806								 POPDS	 EDX			 ; DL -	char
3  5807	00001CD6  5A						 POP	 EDX
2  5808								 PUSHDS	 ESI			 ; result
3  5809	00001CD7  56						 PUSH	 ESI
2  5810	00001CD8  33 DB						 XOR	 EBX,EBX
2  5811	00001CDA			 PPARSE_LOOP:
2  5812	00001CDA  49						 DEC	 ECX
2  5813	00001CDB  78 0F						 JS	 SHORT PPARSE_EXIT
2  5814	00001CDD  AC						 LODSB
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 103
meta.asm



2  5815	00001CDE  FF 47	20					 INC	 [DWORD	PTR EDI	+ TOIN_VAR]
2  5816	00001CE1  0A C0						 OR	 AL,AL
2  5817	00001CE3  74 07						 JZ	 SHORT PPARSE_EXIT
2  5818	00001CE5  3A C2						 CMP	 AL,DL
2  5819	00001CE7  74 03						 JZ	 SHORT PPARSE_EXIT
2  5820	00001CE9  43						 INC	 EBX
2  5821	00001CEA  EB EE						 JMP	 SHORT PPARSE_LOOP
2  5822	00001CEC			 PPARSE_EXIT:
2  5823								 PUSHDS	 EBX
3  5824	00001CEC  53						 PUSH	 EBX
2  5825								 POPRS	 ESI
3  5826	00001CED  8B 75	00					 MOV	 ESI,[DWORD PTR	EBP]
3  5827	00001CF0  83 C5	04					 ADD	 EBP,CELL_SIZE
2  5828								 $NEXT
3  5829	00001CF3  AD						 LODSD				 ; fetch address
4  5830	00001CF4  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  5831	00001CF6  FF E3						 JMP	 EBX			 ; execute
2  5832
2  5833					 ;  6.2.2008 PARSE
2  5834								 $COLON	 'PARSE',$PARSE
4  5835	00001CF8			 ??02D7:
4  5836	00001CF8  00						   DB	 VEF_USUAL
4  5837	00001CF9  05						 DB	 ??02D8	- $ - 1
4  5838	00001CFA  50 41	52 53 45				 DB	 'PARSE'
4  5839	00001CFF			 ??02D8:
4  5840	00001CFF  07						 DB	 ??02D8	- ??02D7
4  5841	00001D00  20001CBC					 DD	 VOC_LINK
4  5842	00001D04						   LABEL   $PARSE FAR
4  5843	00001D04  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  5844	00001D08			 ??02DA:
2  5845								 CW	 $SOURCE		 ; c c-addr u
3  5846	00001D08  20000572					 DD	 $SOURCE + DESIRED_BASE_EQU
2  5847								 CW	 $TOIN
3  5848	00001D0C  20001BFA					 DD	 $TOIN + DESIRED_BASE_EQU
2  5849								 CW	 $FETCH
3  5850	00001D10  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  5851								 CW	 $SUB
3  5852	00001D14  200013D4					 DD	 $SUB +	DESIRED_BASE_EQU
2  5853								 CW	 $SWAP			 ; c u c-addr
3  5854	00001D18  200011EF					 DD	 $SWAP + DESIRED_BASE_EQU
2  5855								 CW	 $TOIN			 ; c u c-addr addr
3  5856	00001D1C  20001BFA					 DD	 $TOIN + DESIRED_BASE_EQU
2  5857								 CW	 $FETCH			 ; c u c-addr offset
3  5858	00001D20  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  5859								 CW	 $ADD			 ; c u c-addr
3  5860	00001D24  200013BE					 DD	 $ADD +	DESIRED_BASE_EQU
2  5861								 CW	 $SWAP			 ; c c-addr u
3  5862	00001D28  200011EF					 DD	 $SWAP + DESIRED_BASE_EQU
2  5863								 CW	 $PPARSE		 ; c-addr u
3  5864	00001D2C  20001CCA					 DD	 $PPARSE + DESIRED_BASE_EQU
2  5865								 CW	 $EXIT
3  5866	00001D30  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  5867
2  5868					 ;  (S")
2  5869					 ;  -- c-addr count
2  5870								 $COLON	 '(S")',$PSQUOTE
4  5871	00001D34			 ??02DB:
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 104
meta.asm



4  5872	00001D34  00						   DB	 VEF_USUAL
4  5873	00001D35  04						 DB	 ??02DC	- $ - 1
4  5874	00001D36  28 53	22 29					 DB	 '(S")'
4  5875	00001D3A			 ??02DC:
4  5876	00001D3A  06						 DB	 ??02DC	- ??02DB
4  5877	00001D3B  20001CF8					 DD	 VOC_LINK
4  5878	00001D3F						   LABEL   $PSQUOTE FAR
4  5879	00001D3F  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  5880	00001D43			 ??02DE:
2  5881								 CW	 $RFROM
3  5882	00001D43  200012A8					 DD	 $RFROM	+ DESIRED_BASE_EQU
2  5883								 CW	 $DUP
3  5884	00001D47  2000118F					 DD	 $DUP +	DESIRED_BASE_EQU
2  5885								 CW	 $FETCH
3  5886	00001D4B  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  5887								 CW	 $SWAP
3  5888	00001D4F  200011EF					 DD	 $SWAP + DESIRED_BASE_EQU
2  5889								 CW	 $CELLADD
3  5890	00001D53  200017DF					 DD	 $CELLADD + DESIRED_BASE_EQU
2  5891								 CW	 $2DUP
3  5892	00001D57  20001122					 DD	 $2DUP + DESIRED_BASE_EQU
2  5893								 CW	 $ADD
3  5894	00001D5B  200013BE					 DD	 $ADD +	DESIRED_BASE_EQU
2  5895								 CW	 $TOR
3  5896	00001D5F  2000128F					 DD	 $TOR +	DESIRED_BASE_EQU
2  5897								 CW	 $SWAP
3  5898	00001D63  200011EF					 DD	 $SWAP + DESIRED_BASE_EQU
2  5899								 CW	 $EXIT
3  5900	00001D67  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  5901
2  5902					 ;  S"-COMP
2  5903								 $COLON	 'S"-COMP',$SQ_COMP
4  5904	00001D6B			 ??02DF:
4  5905	00001D6B  00						   DB	 VEF_USUAL
4  5906	00001D6C  07						 DB	 ??02E0	- $ - 1
4  5907	00001D6D  53 22	2D 43 4F 4D 50				 DB	 'S"-COMP'
4  5908	00001D74			 ??02E0:
4  5909	00001D74  09						 DB	 ??02E0	- ??02DF
4  5910	00001D75  20001D34					 DD	 VOC_LINK
4  5911	00001D79						   LABEL   $SQ_COMP FAR
4  5912	00001D79  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  5913	00001D7D			 ??02E2:
2  5914								 CW	 $LIT
3  5915	00001D7D  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  5916								 CC	 '"'
3  5917	00001D81  00000022					 DD	 '"'
2  5918								 CW	 $PARSE
3  5919	00001D85  20001D04					 DD	 $PARSE	+ DESIRED_BASE_EQU
2  5920								 CW	 $LIT
3  5921	00001D89  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  5922								 CW	 $PSQUOTE
3  5923	00001D8D  20001D3F					 DD	 $PSQUOTE + DESIRED_BASE_EQU
2  5924								 CW	 $COMPILEC
3  5925	00001D91  20001E53					 DD	 $COMPILEC + DESIRED_BASE_EQU
2  5926								 CW	 $DUP
3  5927	00001D95  2000118F					 DD	 $DUP +	DESIRED_BASE_EQU
2  5928								 CW	 $COMMA
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 105
meta.asm



3  5929	00001D99  20001E2B					 DD	 $COMMA	+ DESIRED_BASE_EQU
2  5930								 CW	 $HERE
3  5931	00001D9D  20001F33					 DD	 $HERE + DESIRED_BASE_EQU
2  5932								 CW	 $OVER
3  5933	00001DA1  200011BD					 DD	 $OVER + DESIRED_BASE_EQU
2  5934								 CW	 $ALLOT
3  5935	00001DA5  20001E6B					 DD	 $ALLOT	+ DESIRED_BASE_EQU
2  5936								 CW	 $SWAP
3  5937	00001DA9  200011EF					 DD	 $SWAP + DESIRED_BASE_EQU
2  5938								 CW	 $CMOVE
3  5939	00001DAD  20001F4F					 DD	 $CMOVE	+ DESIRED_BASE_EQU
2  5940								 CW	 $EXIT
3  5941	00001DB1  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  5942
2  5943					 ;  S"-INT
2  5944								 $COLON	 'S"-INT',$SQ_INT
4  5945	00001DB5			 ??02E3:
4  5946	00001DB5  00						   DB	 VEF_USUAL
4  5947	00001DB6  06						 DB	 ??02E4	- $ - 1
4  5948	00001DB7  53 22	2D 49 4E 54				 DB	 'S"-INT'
4  5949	00001DBD			 ??02E4:
4  5950	00001DBD  08						 DB	 ??02E4	- ??02E3
4  5951	00001DBE  20001D6B					 DD	 VOC_LINK
4  5952	00001DC2						   LABEL   $SQ_INT FAR
4  5953	00001DC2  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  5954	00001DC6			 ??02E6:
2  5955								 CW	 $LIT
3  5956	00001DC6  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  5957								 CC	 '"'
3  5958	00001DCA  00000022					 DD	 '"'
2  5959								 CW	 $PARSE
3  5960	00001DCE  20001D04					 DD	 $PARSE	+ DESIRED_BASE_EQU
2  5961								 CW	 $2DUP
3  5962	00001DD2  20001122					 DD	 $2DUP + DESIRED_BASE_EQU
2  5963								 CW	 $SQUOTE_BUFFER
3  5964	00001DD6  200002C4					 DD	 $SQUOTE_BUFFER	+ DESIRED_BASE_EQU
2  5965								 CW	 $SWAP
3  5966	00001DDA  200011EF					 DD	 $SWAP + DESIRED_BASE_EQU
2  5967								 CW	 $CMOVE
3  5968	00001DDE  20001F4F					 DD	 $CMOVE	+ DESIRED_BASE_EQU
2  5969								 CW	 $NIP
3  5970	00001DE2  200011A6					 DD	 $NIP +	DESIRED_BASE_EQU
2  5971								 CW	 $SQUOTE_BUFFER
3  5972	00001DE6  200002C4					 DD	 $SQUOTE_BUFFER	+ DESIRED_BASE_EQU
2  5973								 CW	 $SWAP
3  5974	00001DEA  200011EF					 DD	 $SWAP + DESIRED_BASE_EQU
2  5975								 CW	 $EXIT
3  5976	00001DEE  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  5977
2  5978					 ;     6.1.2165	S"
2  5979					 ;  11.6.1.2165	S"
2  5980								 $DEF	 'S"',$SQUOTE,$PDO_INT_COMP,VEF_IMMEDIATE
3  5981	00001DF2			 ??02E7:
3  5982	00001DF2  01						   DB	 VEF_IMMEDIATE
3  5983	00001DF3  02						 DB	 ??02E8	- $ - 1
3  5984	00001DF4  53 22						 DB	 'S"'
3  5985	00001DF6			 ??02E8:
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 106
meta.asm



3  5986	00001DF6  04						 DB	 ??02E8	- ??02E7
3  5987	00001DF7  20001DB5					 DD	 VOC_LINK
3  5988	00001DFB						   LABEL   $SQUOTE FAR
3  5989	00001DFB  20000169					   DD	   $PDO_INT_COMP + DESIRED_BASE_EQU
3  5990	00001DFF			 ??02EA:
2  5991								 CW	 $SQ_INT
3  5992	00001DFF  20001DC2					 DD	 $SQ_INT + DESIRED_BASE_EQU
2  5993								 CW	 $SQ_COMP
3  5994	00001E03  20001D79					 DD	 $SQ_COMP + DESIRED_BASE_EQU
2  5995
2  5996					 ;  \
2  5997					 ;			  $DEF	  '\',$BSLASH,$ENTER,VEF_IMMEDIATE
2  5998					 ;			  CW	  $BLK
2  5999					 ;			  CW	  $FETCH
2  6000					 ;			  CW	  $ZEROGR
2  6001					 ;			  CW	  $QBRANCH
2  6002					 ;			  CW	  BS_NOTBLOCK
2  6003					 ;			    CW	    $TOIN
2  6004					 ;			    CW	    $FETCH
2  6005					 ;			    CW	    $LIT
2  6006					 ;			    CC	    63
2  6007					 ;			    CW	    $INVERT
2  6008					 ;			    CW	    $AND
2  6009					 ;			    CW	    $LIT
2  6010					 ;			    CC	    64
2  6011					 ;			    CW	    $ADD
2  6012					 ;			  CW	  $BRANCH
2  6013					 ;			  CW	  BS_EXIT
2  6014					 ;BS_NOTBLOCK:
2  6015					 ;			    CW	    $SOURCE
2  6016					 ;			    CW	    $NIP
2  6017					 ;BS_EXIT:
2  6018					 ;			  CW	  $TOIN
2  6019					 ;			  CW	  $STORE
2  6020					 ;			  CW	  $EXIT
2  6021
2  6022					 ;  \
2  6023								 $DEF	 '\',,$ENTER,VEF_IMMEDIATE
3  6024	00001E07			 ??02EB:
3  6025	00001E07  01						   DB	 VEF_IMMEDIATE
3  6026	00001E08  01						 DB	 ??02EC	- $ - 1
3  6027	00001E09  5C						 DB	 '\'
3  6028	00001E0A			 ??02EC:
3  6029	00001E0A  03						 DB	 ??02EC	- ??02EB
3  6030	00001E0B  20001DF2					 DD	 VOC_LINK
3  6031	00001E0F  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
3  6032	00001E13			 ??02EE:
2  6033								 CW	 $ZERO
3  6034	00001E13  20000187					 DD	 $ZERO + DESIRED_BASE_EQU
2  6035								 CW	 $PARSE
3  6036	00001E17  20001D04					 DD	 $PARSE	+ DESIRED_BASE_EQU
2  6037								 CW	 $2DROP
3  6038	00001E1B  2000110C					 DD	 $2DROP	+ DESIRED_BASE_EQU
2  6039								 CW	 $EXIT
3  6040	00001E1F  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  6041
1  6042								 INCLUDE "data.inc"
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 107
meta.asm



2  6043					 ;******************************************************************************
2  6044					 ;
2  6045					 ;  data.inc
2  6046					 ;  IKForth
2  6047					 ;
2  6048					 ;  Copyright (C) 1999-2001 Illya Kysil
2  6049					 ;
2  6050					 ;******************************************************************************
2  6051					 ;  Data space
2  6052					 ;******************************************************************************
2  6053
2  6054					 ;  6.1.0150 ,
2  6055					 ;  Reserve one	cell of	data space and store x in the cell
2  6056					 ;  D: x --
2  6057								 $DEF	 ',',$COMMA
3  6058	00001E23			 ??02EF:
3  6059	00001E23  00						   DB	 VEF_USUAL
3  6060	00001E24  01						 DB	 ??02F0	- $ - 1
3  6061	00001E25  2C						 DB	 ','
3  6062	00001E26			 ??02F0:
3  6063	00001E26  03						 DB	 ??02F0	- ??02EF
3  6064	00001E27  20001E07					 DD	 VOC_LINK
3  6065	00001E2B						   LABEL   $COMMA FAR
3  6066	00001E2B  20001E2F					   DD	   ??02F2 + DESIRED_BASE_EQU
3  6067	00001E2F			 ??02F2:
2  6068								 POPDS	 EAX
3  6069	00001E2F  58						 POP	 EAX
2  6070	00001E30  8B 1D	20000361				 MOV	 EBX,[DWORD PTR	DP_VAR + DESIRED_BASE_EQU]
2  6071	00001E36  89 03						 MOV	 [DWORD	PTR EBX],EAX
2  6072	00001E38  83 05	20000361 04				 ADD	 [DWORD	PTR DP_VAR + DESIRED_BASE_EQU],CELL_SIZE
2  6073								 $NEXT
3  6074	00001E3F  AD						 LODSD				 ; fetch address
4  6075	00001E40  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  6076	00001E42  FF E3						 JMP	 EBX			 ; execute
2  6077
2  6078					 ;  COMPILE,
2  6079								 $COLON	 'COMPILE,',$COMPILEC,<VEF_COMPILE_ONLY>
4  6080	00001E44			 ??02F3:
4  6081	00001E44  04						   DB	 VEF_COMPILE_ONLY
4  6082	00001E45  08						 DB	 ??02F4	- $ - 1
4  6083	00001E46  43 4F	4D 50 49 4C 45+				 DB	 'COMPILE,'
   6084		  2C
4  6085	00001E4E			 ??02F4:
4  6086	00001E4E  0A						 DB	 ??02F4	- ??02F3
4  6087	00001E4F  20001E23					 DD	 VOC_LINK
4  6088	00001E53						   LABEL   $COMPILEC FAR
4  6089	00001E53  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  6090	00001E57			 ??02F6:
2  6091								 CW	 $COMMA
3  6092	00001E57  20001E2B					 DD	 $COMMA	+ DESIRED_BASE_EQU
2  6093								 CW	 $EXIT
3  6094	00001E5B  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  6095
2  6096					 ;  6.1.0710 ALLOT
2  6097					 ;  Allocates n	memory cells on	the top	of vocabulary
2  6098					 ;  D: n --
2  6099								 $DEF	 'ALLOT',$ALLOT
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 108
meta.asm



3  6100	00001E5F			 ??02F7:
3  6101	00001E5F  00						   DB	 VEF_USUAL
3  6102	00001E60  05						 DB	 ??02F8	- $ - 1
3  6103	00001E61  41 4C	4C 4F 54				 DB	 'ALLOT'
3  6104	00001E66			 ??02F8:
3  6105	00001E66  07						 DB	 ??02F8	- ??02F7
3  6106	00001E67  20001E44					 DD	 VOC_LINK
3  6107	00001E6B						   LABEL   $ALLOT FAR
3  6108	00001E6B  20001E6F					   DD	   ??02FA + DESIRED_BASE_EQU
3  6109	00001E6F			 ??02FA:
2  6110								 POPDS	 EAX
3  6111	00001E6F  58						 POP	 EAX
2  6112	00001E70  01 05	20000361				 ADD	 [DWORD	PTR DP_VAR + DESIRED_BASE_EQU],EAX
2  6113								 $NEXT
3  6114	00001E76  AD						 LODSD				 ; fetch address
4  6115	00001E77  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  6116	00001E79  FF E3						 JMP	 EBX			 ; execute
2  6117
2  6118					 ;  6.1.0860 C,
2  6119					 ;  Reserve one	character of data space	and store x in the cell
2  6120					 ;  D: x --
2  6121								 $DEF	 'C,',$CCOMMA
3  6122	00001E7B			 ??02FB:
3  6123	00001E7B  00						   DB	 VEF_USUAL
3  6124	00001E7C  02						 DB	 ??02FC	- $ - 1
3  6125	00001E7D  43 2C						 DB	 'C,'
3  6126	00001E7F			 ??02FC:
3  6127	00001E7F  04						 DB	 ??02FC	- ??02FB
3  6128	00001E80  20001E5F					 DD	 VOC_LINK
3  6129	00001E84						   LABEL   $CCOMMA FAR
3  6130	00001E84  20001E88					   DD	   ??02FE + DESIRED_BASE_EQU
3  6131	00001E88			 ??02FE:
2  6132								 POPDS	 EAX
3  6133	00001E88  58						 POP	 EAX
2  6134	00001E89  8B 1D	20000361				 MOV	 EBX,[DWORD PTR	DP_VAR + DESIRED_BASE_EQU]
2  6135	00001E8F  88 03						 MOV	 [BYTE PTR EBX],AL
2  6136	00001E91  FF 05	20000361				 INC	 [DWORD	PTR DP_VAR + DESIRED_BASE_EQU]
2  6137								 $NEXT
3  6138	00001E97  AD						 LODSD				 ; fetch address
4  6139	00001E98  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  6140	00001E9A  FF E3						 JMP	 EBX			 ; execute
2  6141
2  6142					 ;  (;)
2  6143								 $DEF	 '(;)',$EXIT,,VEF_COMPILE_ONLY
3  6144	00001E9C			 ??02FF:
3  6145	00001E9C  04						   DB	 VEF_COMPILE_ONLY
3  6146	00001E9D  03						 DB	 ??0300	- $ - 1
3  6147	00001E9E  28 3B	29					 DB	 '(;)'
3  6148	00001EA1			 ??0300:
3  6149	00001EA1  05						 DB	 ??0300	- ??02FF
3  6150	00001EA2  20001E7B					 DD	 VOC_LINK
3  6151	00001EA6						   LABEL   $EXIT FAR
3  6152	00001EA6  20001EAA					   DD	   ??0302 + DESIRED_BASE_EQU
3  6153	00001EAA			 ??0302:
2  6154								 POPRS	 ESI			 ; pop previous	IP from	return stack
3  6155	00001EAA  8B 75	00					 MOV	 ESI,[DWORD PTR	EBP]
3  6156	00001EAD  83 C5	04					 ADD	 EBP,CELL_SIZE
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 109
meta.asm



2  6157								 $NEXT
3  6158	00001EB0  AD						 LODSD				 ; fetch address
4  6159	00001EB1  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  6160	00001EB3  FF E3						 JMP	 EBX			 ; execute
2  6161
2  6162					 ;  6.1.1380 EXIT
2  6163								 $DEF	 'EXIT',,,VEF_COMPILE_ONLY
3  6164	00001EB5			 ??0303:
3  6165	00001EB5  04						   DB	 VEF_COMPILE_ONLY
3  6166	00001EB6  04						 DB	 ??0304	- $ - 1
3  6167	00001EB7  45 58	49 54					 DB	 'EXIT'
3  6168	00001EBB			 ??0304:
3  6169	00001EBB  06						 DB	 ??0304	- ??0303
3  6170	00001EBC  20001E9C					 DD	 VOC_LINK
3  6171	00001EC0  20001EC4					   DD	   ??0306 + DESIRED_BASE_EQU
3  6172	00001EC4			 ??0306:
2  6173								 POPRS	 ESI			 ; pop previous	IP from	return stack
3  6174	00001EC4  8B 75	00					 MOV	 ESI,[DWORD PTR	EBP]
3  6175	00001EC7  83 C5	04					 ADD	 EBP,CELL_SIZE
2  6176								 $NEXT
3  6177	00001ECA  AD						 LODSD				 ; fetch address
4  6178	00001ECB  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  6179	00001ECD  FF E3						 JMP	 EBX			 ; execute
2  6180
2  6181					 ;  6.1.0950 CONSTANT
2  6182								 $COLON	 'CONSTANT',$CONSTANT
4  6183	00001ECF			 ??0307:
4  6184	00001ECF  00						   DB	 VEF_USUAL
4  6185	00001ED0  08						 DB	 ??0308	- $ - 1
4  6186	00001ED1  43 4F	4E 53 54 41 4E+				 DB	 'CONSTANT'
   6187		  54
4  6188	00001ED9			 ??0308:
4  6189	00001ED9  0A						 DB	 ??0308	- ??0307
4  6190	00001EDA  20001EB5					 DD	 VOC_LINK
4  6191	00001EDE						   LABEL   $CONSTANT FAR
4  6192	00001EDE  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  6193	00001EE2			 ??030A:
2  6194								 CW	 $LIT
3  6195	00001EE2  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  6196								 CW	 $DOCONST
3  6197	00001EE6  2000010E					 DD	 $DOCONST + DESIRED_BASE_EQU
2  6198								 CW	 $LIT
3  6199	00001EEA  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  6200								 CC	 VEF_USUAL
3  6201	00001EEE  00000000					 DD	 VEF_USUAL
2  6202								 CW	 $PARSE_CHECK_HEADERC
3  6203	00001EF2  200010C4					 DD	 $PARSE_CHECK_HEADERC +	DESIRED_BASE_EQU
2  6204								 CW	 $DROP
3  6205	00001EF6  2000117B					 DD	 $DROP + DESIRED_BASE_EQU
2  6206								 CW	 $COMMA
3  6207	00001EFA  20001E2B					 DD	 $COMMA	+ DESIRED_BASE_EQU
2  6208								 CW	 $EXIT
3  6209	00001EFE  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  6210
2  6211					 ;  6.1.1780 LITERAL
2  6212								 $COLON	 'LITERAL',$LITERAL,<VEF_IMMEDIATE OR VEF_COMPILE_ONLY>
4  6213	00001F02			 ??030B:
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 110
meta.asm



4  6214	00001F02  01						   DB	 VEF_IMMEDIATE
4  6215	00001F03  07						 DB	 ??030C	- $ - 1
4  6216	00001F04  4C 49	54 45 52 41 4C				 DB	 'LITERAL'
4  6217	00001F0B			 ??030C:
4  6218	00001F0B  09						 DB	 ??030C	- ??030B
4  6219	00001F0C  20001ECF					 DD	 VOC_LINK
4  6220	00001F10						   LABEL   $LITERAL FAR
4  6221	00001F10  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  6222	00001F14			 ??030E:
2  6223								 CW	 $LIT
3  6224	00001F14  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  6225								 CW	 $LIT
3  6226	00001F18  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  6227								 CW	 $COMPILEC
3  6228	00001F1C  20001E53					 DD	 $COMPILEC + DESIRED_BASE_EQU
2  6229								 CW	 $COMMA
3  6230	00001F20  20001E2B					 DD	 $COMMA	+ DESIRED_BASE_EQU
2  6231								 CW	 $EXIT
3  6232	00001F24  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  6233
2  6234					 ;  6.1.1650 HERE
2  6235					 ;  addr is the	data-space pointer.
2  6236					 ;  D: -- addr
2  6237								 $COLON	 'HERE',$HERE
4  6238	00001F28			 ??030F:
4  6239	00001F28  00						   DB	 VEF_USUAL
4  6240	00001F29  04						 DB	 ??0310	- $ - 1
4  6241	00001F2A  48 45	52 45					 DB	 'HERE'
4  6242	00001F2E			 ??0310:
4  6243	00001F2E  06						 DB	 ??0310	- ??030F
4  6244	00001F2F  20001F02					 DD	 VOC_LINK
4  6245	00001F33						   LABEL   $HERE FAR
4  6246	00001F33  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  6247	00001F37			 ??0312:
2  6248								 CW	 $DP
3  6249	00001F37  2000035D					 DD	 $DP + DESIRED_BASE_EQU
2  6250								 CW	 $FETCH
3  6251	00001F3B  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  6252								 CW	 $EXIT
3  6253	00001F3F  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  6254
1  6255								 INCLUDE "string.inc"
2  6256					 ;******************************************************************************
2  6257					 ;
2  6258					 ;  string.inc
2  6259					 ;  IKForth
2  6260					 ;
2  6261					 ;  Copyright (C) 1999-2001 Illya Kysil
2  6262					 ;
2  6263					 ;******************************************************************************
2  6264					 ;  String words
2  6265					 ;******************************************************************************
2  6266
2  6267					 ;  17.6.1.0910	CMOVE
2  6268					 ;  D: c-addr1 c-addr2 u --
2  6269					 ;  If u is greater than zero, copy u consecutive characters from the data space
2  6270					 ;  starting at	c-addr1	to that	starting at c-addr2, proceeding	character-by-character
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 111
meta.asm



2  6271					 ;  from lower addresses to higher addresses.
2  6272								 $DEF	 'CMOVE',$CMOVE
3  6273	00001F43			 ??0313:
3  6274	00001F43  00						   DB	 VEF_USUAL
3  6275	00001F44  05						 DB	 ??0314	- $ - 1
3  6276	00001F45  43 4D	4F 56 45				 DB	 'CMOVE'
3  6277	00001F4A			 ??0314:
3  6278	00001F4A  07						 DB	 ??0314	- ??0313
3  6279	00001F4B  20001F28					 DD	 VOC_LINK
3  6280	00001F4F						   LABEL   $CMOVE FAR
3  6281	00001F4F  20001F53					   DD	   ??0316 + DESIRED_BASE_EQU
3  6282	00001F53			 ??0316:
2  6283								 PUSHRS	 EDI
3  6284	00001F53  83 ED	04					 SUB	 EBP,CELL_SIZE
3  6285	00001F56  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
2  6286								 PUSHRS	 ESI
3  6287	00001F59  83 ED	04					 SUB	 EBP,CELL_SIZE
3  6288	00001F5C  89 75	00					 MOV	 [DWORD	PTR EBP],ESI
2  6289								 POPDS	 ECX
3  6290	00001F5F  59						 POP	 ECX
2  6291								 POPDS	 EDI
3  6292	00001F60  5F						 POP	 EDI
2  6293								 POPDS	 ESI
3  6294	00001F61  5E						 POP	 ESI
2  6295	00001F62  0B C9						 OR	 ECX,ECX
2  6296	00001F64  74 03						 JZ	 SHORT CMOVE_EXIT
2  6297	00001F66  FC						 CLD
2  6298	00001F67  F3> A4				     REP MOVSB
2  6299	00001F69			 CMOVE_EXIT:
2  6300								 POPRS	 ESI
3  6301	00001F69  8B 75	00					 MOV	 ESI,[DWORD PTR	EBP]
3  6302	00001F6C  83 C5	04					 ADD	 EBP,CELL_SIZE
2  6303								 POPRS	 EDI
3  6304	00001F6F  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
3  6305	00001F72  83 C5	04					 ADD	 EBP,CELL_SIZE
2  6306								 $NEXT
3  6307	00001F75  AD						 LODSD				 ; fetch address
4  6308	00001F76  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  6309	00001F78  FF E3						 JMP	 EBX			 ; execute
2  6310
2  6311					 ;  17.6.1.0920	CMOVE>
2  6312					 ;  D: c-addr1 c-addr2 u --
2  6313					 ;  If u is greater than zero, copy u consecutive characters from the data space
2  6314					 ;  starting at	c-addr1	to that	starting at c-addr2, proceeding	character-by-character
2  6315					 ;  from higher	addresses to lower addresses.
2  6316								 $DEF	 'CMOVE>',$CMOVEGR
3  6317	00001F7A			 ??0317:
3  6318	00001F7A  00						   DB	 VEF_USUAL
3  6319	00001F7B  06						 DB	 ??0318	- $ - 1
3  6320	00001F7C  43 4D	4F 56 45 3E				 DB	 'CMOVE>'
3  6321	00001F82			 ??0318:
3  6322	00001F82  08						 DB	 ??0318	- ??0317
3  6323	00001F83  20001F43					 DD	 VOC_LINK
3  6324	00001F87						   LABEL   $CMOVEGR FAR
3  6325	00001F87  20001F8B					   DD	   ??031A + DESIRED_BASE_EQU
3  6326	00001F8B			 ??031A:
2  6327								 PUSHRS	 EDI
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 112
meta.asm



3  6328	00001F8B  83 ED	04					 SUB	 EBP,CELL_SIZE
3  6329	00001F8E  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
2  6330								 PUSHRS	 ESI
3  6331	00001F91  83 ED	04					 SUB	 EBP,CELL_SIZE
3  6332	00001F94  89 75	00					 MOV	 [DWORD	PTR EBP],ESI
2  6333								 POPDS	 ECX
3  6334	00001F97  59						 POP	 ECX
2  6335								 POPDS	 EDI
3  6336	00001F98  5F						 POP	 EDI
2  6337	00001F99  03 F9						 ADD	 EDI,ECX
2  6338	00001F9B  4F						 DEC	 EDI
2  6339								 POPDS	 ESI
3  6340	00001F9C  5E						 POP	 ESI
2  6341	00001F9D  03 F1						 ADD	 ESI,ECX
2  6342	00001F9F  4E						 DEC	 ESI
2  6343	00001FA0  0B C9						 OR	 ECX,ECX
2  6344	00001FA2  76 04						 JBE	 SHORT CMOVEGR_EXIT
2  6345	00001FA4  FD						 STD
2  6346	00001FA5  F3> A4				     REP MOVSB
2  6347	00001FA7  FC						 CLD
2  6348	00001FA8			 CMOVEGR_EXIT:
2  6349								 POPRS	 ESI
3  6350	00001FA8  8B 75	00					 MOV	 ESI,[DWORD PTR	EBP]
3  6351	00001FAB  83 C5	04					 ADD	 EBP,CELL_SIZE
2  6352								 POPRS	 EDI
3  6353	00001FAE  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
3  6354	00001FB1  83 C5	04					 ADD	 EBP,CELL_SIZE
2  6355								 $NEXT
3  6356	00001FB4  AD						 LODSD				 ; fetch address
4  6357	00001FB5  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  6358	00001FB7  FF E3						 JMP	 EBX			 ; execute
2  6359
2  6360					 ;  17.6.1.0935	COMPARE
2  6361								 $DEF	 'COMPARE',$COMPARE
3  6362	00001FB9			 ??031B:
3  6363	00001FB9  00						   DB	 VEF_USUAL
3  6364	00001FBA  07						 DB	 ??031C	- $ - 1
3  6365	00001FBB  43 4F	4D 50 41 52 45				 DB	 'COMPARE'
3  6366	00001FC2			 ??031C:
3  6367	00001FC2  09						 DB	 ??031C	- ??031B
3  6368	00001FC3  20001F7A					 DD	 VOC_LINK
3  6369	00001FC7						   LABEL   $COMPARE FAR
3  6370	00001FC7  20001FCB					   DD	   ??031E + DESIRED_BASE_EQU
3  6371	00001FCB			 ??031E:
2  6372								 $CALL	 COMPARE_FUNC
4  6373	00001FCB  83 ED	04					 SUB	 EBP,CELL_SIZE
4  6374	00001FCE  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  6375	00001FD1  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  6376	00001FD7  83 C3	54					 ADD	 EBX,COMPARE_FUNC * CELL_SIZE
3  6377	00001FDA  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  6378	00001FDC  FF D3						 CALL	 EBX
4  6379	00001FDE  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  6380	00001FE1  83 C5	04					 ADD	 EBP,CELL_SIZE
2  6381								 PUSHDS	 EAX
3  6382	00001FE4  50						 PUSH	 EAX
2  6383								 $NEXT
3  6384	00001FE5  AD						 LODSD				 ; fetch address
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 113
meta.asm



4  6385	00001FE6  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  6386	00001FE8  FF E3						 JMP	 EBX			 ; execute
2  6387
2  6388					 ;  6.1.0980 COUNT
2  6389								 $DEF	 'COUNT',$COUNT
3  6390	00001FEA			 ??031F:
3  6391	00001FEA  00						   DB	 VEF_USUAL
3  6392	00001FEB  05						 DB	 ??0320	- $ - 1
3  6393	00001FEC  43 4F	55 4E 54				 DB	 'COUNT'
3  6394	00001FF1			 ??0320:
3  6395	00001FF1  07						 DB	 ??0320	- ??031F
3  6396	00001FF2  20001FB9					 DD	 VOC_LINK
3  6397	00001FF6						   LABEL   $COUNT FAR
3  6398	00001FF6  20001FFA					   DD	   ??0322 + DESIRED_BASE_EQU
3  6399	00001FFA			 ??0322:
2  6400								 POPDS	 EBX
3  6401	00001FFA  5B						 POP	 EBX
2  6402	00001FFB  0F B6	03					 MOVZX	 EAX,[BYTE PTR EBX]
2  6403	00001FFE  43						 INC	 EBX
2  6404								 PUSHDS	 EBX
3  6405	00001FFF  53						 PUSH	 EBX
2  6406								 PUSHDS	 EAX
3  6407	00002000  50						 PUSH	 EAX
2  6408								 $NEXT
3  6409	00002001  AD						 LODSD				 ; fetch address
4  6410	00002002  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  6411	00002004  FF E3						 JMP	 EBX			 ; execute
2  6412
2  6413
1  6414								 INCLUDE "double.inc"
2  6415					 ;******************************************************************************
2  6416					 ;
2  6417					 ;  double.inc
2  6418					 ;  IKForth
2  6419					 ;
2  6420					 ;  Copyright (C) 1999-2001 Illya Kysil
2  6421					 ;
2  6422					 ;******************************************************************************
2  6423					 ;  Double number words
2  6424					 ;******************************************************************************
2  6425
2  6426					 ;  8.6.1.0390 2LITERAL
2  6427								 $COLON	 '2LITERAL',$2LITERAL,<VEF_IMMEDIATE OR	VEF_COMPILE_ONLY>
4  6428	00002006			 ??0323:
4  6429	00002006  01						   DB	 VEF_IMMEDIATE
4  6430	00002007  08						 DB	 ??0324	- $ - 1
4  6431	00002008  32 4C	49 54 45 52 41+				 DB	 '2LITERAL'
   6432		  4C
4  6433	00002010			 ??0324:
4  6434	00002010  0A						 DB	 ??0324	- ??0323
4  6435	00002011  20001FEA					 DD	 VOC_LINK
4  6436	00002015						   LABEL   $2LITERAL FAR
4  6437	00002015  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  6438	00002019			 ??0326:
2  6439								 CW	 $LIT
3  6440	00002019  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  6441								 CW	 $2LIT
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 114
meta.asm



3  6442	0000201D  20000088					 DD	 $2LIT + DESIRED_BASE_EQU
2  6443								 CW	 $COMPILEC
3  6444	00002021  20001E53					 DD	 $COMPILEC + DESIRED_BASE_EQU
2  6445								 CW	 $SWAP
3  6446	00002025  200011EF					 DD	 $SWAP + DESIRED_BASE_EQU
2  6447								 CW	 $COMMA
3  6448	00002029  20001E2B					 DD	 $COMMA	+ DESIRED_BASE_EQU
2  6449								 CW	 $COMMA
3  6450	0000202D  20001E2B					 DD	 $COMMA	+ DESIRED_BASE_EQU
2  6451								 CW	 $EXIT
3  6452	00002031  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  6453
2  6454					 ;  8.6.1.1040 D+
2  6455					 ;  ( d1|ud1 d2|ud2 -- d3|ud3 )
2  6456					 ;  Add	d2|ud2 to d1|ud1, giving the sum d3|ud3.
2  6457								 $DEF	 'D+',$DADD
3  6458	00002035			 ??0327:
3  6459	00002035  00						   DB	 VEF_USUAL
3  6460	00002036  02						 DB	 ??0328	- $ - 1
3  6461	00002037  44 2B						 DB	 'D+'
3  6462	00002039			 ??0328:
3  6463	00002039  04						 DB	 ??0328	- ??0327
3  6464	0000203A  20002006					 DD	 VOC_LINK
3  6465	0000203E						   LABEL   $DADD FAR
3  6466	0000203E  20002042					   DD	   ??032A + DESIRED_BASE_EQU
3  6467	00002042			 ??032A:
2  6468								 POPDS	 ECX
3  6469	00002042  59						 POP	 ECX
2  6470								 POPDS	 EBX
3  6471	00002043  5B						 POP	 EBX
2  6472								 POPDS	 EDX
3  6473	00002044  5A						 POP	 EDX
2  6474								 POPDS	 EAX
3  6475	00002045  58						 POP	 EAX
2  6476	00002046  03 C3						 ADD	 EAX,EBX
2  6477	00002048  13 D1						 ADC	 EDX,ECX
2  6478								 PUSHDS	 EAX
3  6479	0000204A  50						 PUSH	 EAX
2  6480								 PUSHDS	 EDX
3  6481	0000204B  52						 PUSH	 EDX
2  6482								 $NEXT
3  6483	0000204C  AD						 LODSD				 ; fetch address
4  6484	0000204D  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  6485	0000204F  FF E3						 JMP	 EBX			 ; execute
2  6486
2  6487					 ;  8.6.1.1050 D-
2  6488					 ;  ( d1|ud1 d2|ud2 -- d3|ud3 )
2  6489					 ;  Subtract d2|ud2 from d1|ud1, giving	the difference d3|ud3.
2  6490								 $DEF	 'D-',$DSUB
3  6491	00002051			 ??032B:
3  6492	00002051  00						   DB	 VEF_USUAL
3  6493	00002052  02						 DB	 ??032C	- $ - 1
3  6494	00002053  44 2D						 DB	 'D-'
3  6495	00002055			 ??032C:
3  6496	00002055  04						 DB	 ??032C	- ??032B
3  6497	00002056  20002035					 DD	 VOC_LINK
3  6498	0000205A						   LABEL   $DSUB FAR
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 115
meta.asm



3  6499	0000205A  2000205E					   DD	   ??032E + DESIRED_BASE_EQU
3  6500	0000205E			 ??032E:
2  6501								 POPDS	 ECX
3  6502	0000205E  59						 POP	 ECX
2  6503								 POPDS	 EBX
3  6504	0000205F  5B						 POP	 EBX
2  6505								 POPDS	 EDX
3  6506	00002060  5A						 POP	 EDX
2  6507								 POPDS	 EAX
3  6508	00002061  58						 POP	 EAX
2  6509	00002062  2B C3						 SUB	 EAX,EBX
2  6510	00002064  1B D1						 SBB	 EDX,ECX
2  6511								 PUSHDS	 EAX
3  6512	00002066  50						 PUSH	 EAX
2  6513								 PUSHDS	 EDX
3  6514	00002067  52						 PUSH	 EDX
2  6515								 $NEXT
3  6516	00002068  AD						 LODSD				 ; fetch address
4  6517	00002069  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  6518	0000206B  FF E3						 JMP	 EBX			 ; execute
2  6519
2  6520					 ;  8.6.1.1090 D2*
2  6521					 ;  ( xd1 -- xd2 )
2  6522					 ;  xd2	is the result of shifting xd1 one bit toward the most-significant bit,
2  6523					 ;  filling the	vacated	least-significant bit with zero.
2  6524								 $DEF	 'D2*',$D2MUL
3  6525	0000206D			 ??032F:
3  6526	0000206D  00						   DB	 VEF_USUAL
3  6527	0000206E  03						 DB	 ??0330	- $ - 1
3  6528	0000206F  44 32	2A					 DB	 'D2*'
3  6529	00002072			 ??0330:
3  6530	00002072  05						 DB	 ??0330	- ??032F
3  6531	00002073  20002051					 DD	 VOC_LINK
3  6532	00002077						   LABEL   $D2MUL FAR
3  6533	00002077  2000207B					   DD	   ??0332 + DESIRED_BASE_EQU
3  6534	0000207B			 ??0332:
2  6535								 POPDS	 EDX
3  6536	0000207B  5A						 POP	 EDX
2  6537								 POPDS	 EAX
3  6538	0000207C  58						 POP	 EAX
2  6539	0000207D  D1 E0						 SAL	 EAX,1
2  6540	0000207F  D1 D2						 RCL	 EDX,1
2  6541								 PUSHDS	 EAX
3  6542	00002081  50						 PUSH	 EAX
2  6543								 PUSHDS	 EDX
3  6544	00002082  52						 PUSH	 EDX
2  6545								 $NEXT
3  6546	00002083  AD						 LODSD				 ; fetch address
4  6547	00002084  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  6548	00002086  FF E3						 JMP	 EBX			 ; execute
2  6549
2  6550					 ;  8.6.1.1100 D2/
2  6551					 ;  ( xd1 -- xd2 )
2  6552					 ;  xd2	is the result of shifting xd1 one bit toward the least-significant bit,
2  6553					 ;  leaving the	most-significant bit unchanged.
2  6554								 $DEF	 'D2/',$D2DIV
3  6555	00002088			 ??0333:
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 116
meta.asm



3  6556	00002088  00						   DB	 VEF_USUAL
3  6557	00002089  03						 DB	 ??0334	- $ - 1
3  6558	0000208A  44 32	2F					 DB	 'D2/'
3  6559	0000208D			 ??0334:
3  6560	0000208D  05						 DB	 ??0334	- ??0333
3  6561	0000208E  2000206D					 DD	 VOC_LINK
3  6562	00002092						   LABEL   $D2DIV FAR
3  6563	00002092  20002096					   DD	   ??0336 + DESIRED_BASE_EQU
3  6564	00002096			 ??0336:
2  6565								 POPDS	 EDX
3  6566	00002096  5A						 POP	 EDX
2  6567								 POPDS	 EAX
3  6568	00002097  58						 POP	 EAX
2  6569	00002098  D1 FA						 SAR	 EDX,1
2  6570	0000209A  D1 D8						 RCR	 EAX,1
2  6571								 PUSHDS	 EAX
3  6572	0000209C  50						 PUSH	 EAX
2  6573								 PUSHDS	 EDX
3  6574	0000209D  52						 PUSH	 EDX
2  6575								 $NEXT
3  6576	0000209E  AD						 LODSD				 ; fetch address
4  6577	0000209F  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  6578	000020A1  FF E3						 JMP	 EBX			 ; execute
2  6579
2  6580					 ;  8.6.1.1160 DABS
2  6581					 ;  ( d	-- ud )
2  6582					 ;  ud is the absolute value of	d.
2  6583								 $DEF	 'DABS',$DABS
3  6584	000020A3			 ??0337:
3  6585	000020A3  00						   DB	 VEF_USUAL
3  6586	000020A4  04						 DB	 ??0338	- $ - 1
3  6587	000020A5  44 41	42 53					 DB	 'DABS'
3  6588	000020A9			 ??0338:
3  6589	000020A9  06						 DB	 ??0338	- ??0337
3  6590	000020AA  20002088					 DD	 VOC_LINK
3  6591	000020AE						   LABEL   $DABS FAR
3  6592	000020AE  200020B2					   DD	   ??033A + DESIRED_BASE_EQU
3  6593	000020B2			 ??033A:
2  6594								 POPDS	 EDX
3  6595	000020B2  5A						 POP	 EDX
2  6596								 POPDS	 EAX
3  6597	000020B3  58						 POP	 EAX
2  6598	000020B4  0B D2						 OR	 EDX,EDX
2  6599	000020B6  79 0A						 JNS	 SHORT DABS_OK
2  6600	000020B8  83 E8	01					 SUB	 EAX,1
2  6601	000020BB  83 DA	00					 SBB	 EDX,0
2  6602	000020BE  F7 D0						 NOT	 EAX
2  6603	000020C0  F7 D2						 NOT	 EDX
2  6604	000020C2			 DABS_OK:
2  6605								 PUSHDS	 EAX
3  6606	000020C2  50						 PUSH	 EAX
2  6607								 PUSHDS	 EDX
3  6608	000020C3  52						 PUSH	 EDX
2  6609								 $NEXT
3  6610	000020C4  AD						 LODSD				 ; fetch address
4  6611	000020C5  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  6612	000020C7  FF E3						 JMP	 EBX			 ; execute
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 117
meta.asm



2  6613
2  6614					 ;  8.6.1.1210 DMAX
2  6615					 ;  ( d1 d2 -- d3 )
2  6616					 ;  d3 is the greater of d1 and	d2.
2  6617								 $DEF	 'DMAX',$DMAX
3  6618	000020C9			 ??033B:
3  6619	000020C9  00						   DB	 VEF_USUAL
3  6620	000020CA  04						 DB	 ??033C	- $ - 1
3  6621	000020CB  44 4D	41 58					 DB	 'DMAX'
3  6622	000020CF			 ??033C:
3  6623	000020CF  06						 DB	 ??033C	- ??033B
3  6624	000020D0  200020A3					 DD	 VOC_LINK
3  6625	000020D4						   LABEL   $DMAX FAR
3  6626	000020D4  200020D8					   DD	   ??033E + DESIRED_BASE_EQU
3  6627	000020D8			 ??033E:
2  6628								 POPDS	 EDX
3  6629	000020D8  5A						 POP	 EDX
2  6630								 POPDS	 EAX
3  6631	000020D9  58						 POP	 EAX
2  6632								 POPDS	 ECX
3  6633	000020DA  59						 POP	 ECX
2  6634								 POPDS	 EBX
3  6635	000020DB  5B						 POP	 EBX
2  6636	000020DC  3B D1						 CMP	 EDX,ECX
2  6637	000020DE  7F 08						 JG	 SHORT DMAX_OK
2  6638	000020E0  3B C3						 CMP	 EAX,EBX
2  6639	000020E2  7F 04						 JG	 SHORT DMAX_OK
2  6640	000020E4  8B C3						 MOV	 EAX,EBX
2  6641	000020E6  8B D1						 MOV	 EDX,ECX
2  6642	000020E8			 DMAX_OK:
2  6643								 PUSHDS	 EAX
3  6644	000020E8  50						 PUSH	 EAX
2  6645								 PUSHDS	 EDX
3  6646	000020E9  52						 PUSH	 EDX
2  6647								 $NEXT
3  6648	000020EA  AD						 LODSD				 ; fetch address
4  6649	000020EB  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  6650	000020ED  FF E3						 JMP	 EBX			 ; execute
2  6651
2  6652					 ;  8.6.1.1220 DMIN
2  6653					 ;  ( d1 d2 -- d3 )
2  6654					 ;  d3 is the greater of d1 and	d2.
2  6655								 $DEF	 'DMIN',$DMIN
3  6656	000020EF			 ??033F:
3  6657	000020EF  00						   DB	 VEF_USUAL
3  6658	000020F0  04						 DB	 ??0340	- $ - 1
3  6659	000020F1  44 4D	49 4E					 DB	 'DMIN'
3  6660	000020F5			 ??0340:
3  6661	000020F5  06						 DB	 ??0340	- ??033F
3  6662	000020F6  200020C9					 DD	 VOC_LINK
3  6663	000020FA						   LABEL   $DMIN FAR
3  6664	000020FA  200020FE					   DD	   ??0342 + DESIRED_BASE_EQU
3  6665	000020FE			 ??0342:
2  6666								 POPDS	 EDX
3  6667	000020FE  5A						 POP	 EDX
2  6668								 POPDS	 EAX
3  6669	000020FF  58						 POP	 EAX
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 118
meta.asm



2  6670								 POPDS	 ECX
3  6671	00002100  59						 POP	 ECX
2  6672								 POPDS	 EBX
3  6673	00002101  5B						 POP	 EBX
2  6674	00002102  3B D1						 CMP	 EDX,ECX
2  6675	00002104  7C 08						 JL	 SHORT DMIN_OK
2  6676	00002106  3B C3						 CMP	 EAX,EBX
2  6677	00002108  7C 04						 JL	 SHORT DMIN_OK
2  6678	0000210A  8B C3						 MOV	 EAX,EBX
2  6679	0000210C  8B D1						 MOV	 EDX,ECX
2  6680	0000210E			 DMIN_OK:
2  6681								 PUSHDS	 EAX
3  6682	0000210E  50						 PUSH	 EAX
2  6683								 PUSHDS	 EDX
3  6684	0000210F  52						 PUSH	 EDX
2  6685								 $NEXT
3  6686	00002110  AD						 LODSD				 ; fetch address
4  6687	00002111  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  6688	00002113  FF E3						 JMP	 EBX			 ; execute
2  6689
2  6690					 ;  8.6.1.1230 DNEGATE
2  6691					 ;  ( d1 -- d2 )
2  6692					 ;  d2 is the negation of d1.
2  6693								 $DEF	 'DNEGATE',$DNEGATE
3  6694	00002115			 ??0343:
3  6695	00002115  00						   DB	 VEF_USUAL
3  6696	00002116  07						 DB	 ??0344	- $ - 1
3  6697	00002117  44 4E	45 47 41 54 45				 DB	 'DNEGATE'
3  6698	0000211E			 ??0344:
3  6699	0000211E  09						 DB	 ??0344	- ??0343
3  6700	0000211F  200020EF					 DD	 VOC_LINK
3  6701	00002123						   LABEL   $DNEGATE FAR
3  6702	00002123  20002127					   DD	   ??0346 + DESIRED_BASE_EQU
3  6703	00002127			 ??0346:
2  6704								 POPDS	 EDX
3  6705	00002127  5A						 POP	 EDX
2  6706								 POPDS	 EAX
3  6707	00002128  58						 POP	 EAX
2  6708	00002129  83 E8	01					 SUB	 EAX,1
2  6709	0000212C  83 DA	00					 SBB	 EDX,0
2  6710	0000212F  F7 D0						 NOT	 EAX
2  6711	00002131  F7 D2						 NOT	 EDX
2  6712								 PUSHDS	 EAX
3  6713	00002133  50						 PUSH	 EAX
2  6714								 PUSHDS	 EDX
3  6715	00002134  52						 PUSH	 EDX
2  6716								 $NEXT
3  6717	00002135  AD						 LODSD				 ; fetch address
4  6718	00002136  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  6719	00002138  FF E3						 JMP	 EBX			 ; execute
2  6720
2  6721					 ;  8.6.1.1830 M+
2  6722					 ;  ( d1|ud1 n -- d2|ud2 )
2  6723					 ;  Add	n to d1|ud1, giving the	sum d2|ud2.
2  6724								 $DEF	 'M+',$MADD
3  6725	0000213A			 ??0347:
3  6726	0000213A  00						   DB	 VEF_USUAL
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 119
meta.asm



3  6727	0000213B  02						 DB	 ??0348	- $ - 1
3  6728	0000213C  4D 2B						 DB	 'M+'
3  6729	0000213E			 ??0348:
3  6730	0000213E  04						 DB	 ??0348	- ??0347
3  6731	0000213F  20002115					 DD	 VOC_LINK
3  6732	00002143						   LABEL   $MADD FAR
3  6733	00002143  20002147					   DD	   ??034A + DESIRED_BASE_EQU
3  6734	00002147			 ??034A:
2  6735								 POPDS	 EBX
3  6736	00002147  5B						 POP	 EBX
2  6737								 POPDS	 EDX
3  6738	00002148  5A						 POP	 EDX
2  6739								 POPDS	 EAX
3  6740	00002149  58						 POP	 EAX
2  6741	0000214A  03 C3						 ADD	 EAX,EBX
2  6742	0000214C  83 D2	00					 ADC	 EDX,0
2  6743								 PUSHDS	 EAX
3  6744	0000214F  50						 PUSH	 EAX
2  6745								 PUSHDS	 EDX
3  6746	00002150  52						 PUSH	 EDX
2  6747								 $NEXT
3  6748	00002151  AD						 LODSD				 ; fetch address
4  6749	00002152  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  6750	00002154  FF E3						 JMP	 EBX			 ; execute
2  6751
2  6752
1  6753								 INCLUDE "convert.inc"
2  6754					 ;******************************************************************************
2  6755					 ;
2  6756					 ;  convert.inc
2  6757					 ;  IKForth
2  6758					 ;
2  6759					 ;  Copyright (C) 1999-2001 Illya Kysil
2  6760					 ;
2  6761					 ;******************************************************************************
2  6762					 ;  Misc convertion words
2  6763					 ;******************************************************************************
2  6764
2  6765					 ;  6.1.0550 >BODY
2  6766					 ;  Convert CFA	to PFA
2  6767					 ;  D: CFA -- PFA
2  6768								 $COLON	 '>BODY',$TOBODY
4  6769	00002156			 ??034B:
4  6770	00002156  00						   DB	 VEF_USUAL
4  6771	00002157  05						 DB	 ??034C	- $ - 1
4  6772	00002158  3E 42	4F 44 59				 DB	 '>BODY'
4  6773	0000215D			 ??034C:
4  6774	0000215D  07						 DB	 ??034C	- ??034B
4  6775	0000215E  2000213A					 DD	 VOC_LINK
4  6776	00002162						   LABEL   $TOBODY FAR
4  6777	00002162  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  6778	00002166			 ??034E:
2  6779								 CW	 $CELLADD
3  6780	00002166  200017DF					 DD	 $CELLADD + DESIRED_BASE_EQU
2  6781								 CW	 $EXIT
3  6782	0000216A  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  6783
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 120
meta.asm



2  6784					 ;  >NAME
2  6785					 ;  D: xt -- name-addr
2  6786								 $DEF	 '>NAME',$TONAME
3  6787	0000216E			 ??034F:
3  6788	0000216E  00						   DB	 VEF_USUAL
3  6789	0000216F  05						 DB	 ??0350	- $ - 1
3  6790	00002170  3E 4E	41 4D 45				 DB	 '>NAME'
3  6791	00002175			 ??0350:
3  6792	00002175  07						 DB	 ??0350	- ??034F
3  6793	00002176  20002156					 DD	 VOC_LINK
3  6794	0000217A						   LABEL   $TONAME FAR
3  6795	0000217A  2000217E					   DD	   ??0352 + DESIRED_BASE_EQU
3  6796	0000217E			 ??0352:
2  6797								 POPDS	 EAX
3  6798	0000217E  58						 POP	 EAX
2  6799	0000217F  83 E8	05					 SUB	 EAX,5
2  6800	00002182  33 DB						 XOR	 EBX,EBX
2  6801	00002184  8A 18						 MOV	 BL,[BYTE PTR EAX]
2  6802	00002186  2B C3						 SUB	 EAX,EBX
2  6803	00002188  40						 INC	 EAX
2  6804								 PUSHDS	 EAX
3  6805	00002189  50						 PUSH	 EAX
2  6806								 $NEXT
3  6807	0000218A  AD						 LODSD				 ; fetch address
4  6808	0000218B  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  6809	0000218D  FF E3						 JMP	 EBX			 ; execute
2  6810
2  6811					 ;  NAME>
2  6812					 ;  D: name-addr -- xt
2  6813								 $DEF	 'NAME>',$FROMNAME
3  6814	0000218F			 ??0353:
3  6815	0000218F  00						   DB	 VEF_USUAL
3  6816	00002190  05						 DB	 ??0354	- $ - 1
3  6817	00002191  4E 41	4D 45 3E				 DB	 'NAME>'
3  6818	00002196			 ??0354:
3  6819	00002196  07						 DB	 ??0354	- ??0353
3  6820	00002197  2000216E					 DD	 VOC_LINK
3  6821	0000219B						   LABEL   $FROMNAME FAR
3  6822	0000219B  2000219F					   DD	   ??0356 + DESIRED_BASE_EQU
3  6823	0000219F			 ??0356:
2  6824								 POPDS	 EAX
3  6825	0000219F  58						 POP	 EAX
2  6826	000021A0  33 DB						 XOR	 EBX,EBX
2  6827	000021A2  8A 18						 MOV	 BL,[BYTE PTR EAX]
2  6828	000021A4  03 C3						 ADD	 EAX,EBX
2  6829	000021A6  83 C0	06					 ADD	 EAX,6
2  6830								 PUSHDS	 EAX
3  6831	000021A9  50						 PUSH	 EAX
2  6832								 $NEXT
3  6833	000021AA  AD						 LODSD				 ; fetch address
4  6834	000021AB  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  6835	000021AD  FF E3						 JMP	 EBX			 ; execute
2  6836
2  6837					 ;  6.1.0570 >NUMBER
2  6838								 $DEF	 '>NUMBER',$TONUMBER
3  6839	000021AF			 ??0357:
3  6840	000021AF  00						   DB	 VEF_USUAL
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 121
meta.asm



3  6841	000021B0  07						 DB	 ??0358	- $ - 1
3  6842	000021B1  3E 4E	55 4D 42 45 52				 DB	 '>NUMBER'
3  6843	000021B8			 ??0358:
3  6844	000021B8  09						 DB	 ??0358	- ??0357
3  6845	000021B9  2000218F					 DD	 VOC_LINK
3  6846	000021BD						   LABEL   $TONUMBER FAR
3  6847	000021BD  200021C1					   DD	   ??035A + DESIRED_BASE_EQU
3  6848	000021C1			 ??035A:
2  6849								 PUSHRS	 EDI
3  6850	000021C1  83 ED	04					 SUB	 EBP,CELL_SIZE
3  6851	000021C4  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
2  6852	000021C7  8B 5F	1C					 MOV	 EBX,[DWORD PTR	EDI + BASE_VAR]
2  6853								 POPDS	 ECX			 ; u1
3  6854	000021CA  59						 POP	 ECX
2  6855								 POPDS	 EDI			 ; c-addr1
3  6856	000021CB  5F						 POP	 EDI
2  6857								 POPDS	 EDX			 ; ud1
3  6858	000021CC  5A						 POP	 EDX
2  6859								 POPDS	 EAX
3  6860	000021CD  58						 POP	 EAX
2  6861	000021CE			 TN_LOOP:
2  6862	000021CE  0B C9						 OR	 ECX,ECX
2  6863	000021D0  74 4C						 JZ	 SHORT TN_STOP
2  6864								 PUSHRS	 EAX
3  6865	000021D2  83 ED	04					 SUB	 EBP,CELL_SIZE
3  6866	000021D5  89 45	00					 MOV	 [DWORD	PTR EBP],EAX
2  6867	000021D8  8A 07						 MOV	 AL,[BYTE PTR EDI]
2  6868	000021DA  3C 61						 CMP	 AL,'a'
2  6869	000021DC  72 06						 JB	 SHORT TN_CONT		 ; jump	if AL <	'a'
2  6870	000021DE  3C 7A						 CMP	 AL,'z'
2  6871	000021E0  77 02						 JA	 SHORT TN_CONT		 ; jump	if AL >	'z'
2  6872	000021E2  2C 20						 SUB	 AL,'a'	- 'A'		 ; convert to uppercase
2  6873	000021E4			 TN_CONT:
2  6874								 PUSHDS	 EDI
3  6875	000021E4  57						 PUSH	 EDI
2  6876								 PUSHDS	 ECX
3  6877	000021E5  51						 PUSH	 ECX
2  6878	000021E6  BF 20002242					 MOV	 EDI,OFFSET DIGITS_TABLE + DESIRED_BASE_EQU
2  6879	000021EB  8B CB						 MOV	 ECX,EBX
2  6880	000021ED  41						 INC	 ECX
2  6881	000021EE  F2> AE				   REPNE SCASB
2  6882	000021F0  75 04						 JNZ	 SHORT TN_CONT2
2  6883	000021F2  0B C9						 OR	 ECX,ECX
2  6884	000021F4  75 0A						 JNZ	 SHORT TN_CONT1
2  6885	000021F6			 TN_CONT2:
2  6886								 POPDS	 ECX
3  6887	000021F6  59						 POP	 ECX
2  6888								 POPDS	 EDI
3  6889	000021F7  5F						 POP	 EDI
2  6890								 POPRS	 EAX
3  6891	000021F8  8B 45	00					 MOV	 EAX,[DWORD PTR	EBP]
3  6892	000021FB  83 C5	04					 ADD	 EBP,CELL_SIZE
2  6893	000021FE  EB 1E						 JMP	 SHORT TN_STOP
2  6894	00002200			 TN_CONT1:
2  6895								 PUSHDS	 EBX
3  6896	00002200  53						 PUSH	 EBX
2  6897	00002201  2B D9						 SUB	 EBX,ECX
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 122
meta.asm



2  6898	00002203  8B CB						 MOV	 ECX,EBX
2  6899								 POPDS	 EBX
3  6900	00002205  5B						 POP	 EBX
2  6901	00002206  8B C2						 MOV	 EAX,EDX
2  6902	00002208  F7 E3						 MUL	 EBX
2  6903								 PUSHDS	 EAX
3  6904	0000220A  50						 PUSH	 EAX
2  6905								 POPRS	 EAX
3  6906	0000220B  8B 45	00					 MOV	 EAX,[DWORD PTR	EBP]
3  6907	0000220E  83 C5	04					 ADD	 EBP,CELL_SIZE
2  6908	00002211  F7 E3						 MUL	 EBX
2  6909	00002213  03 C1						 ADD	 EAX,ECX
2  6910								 POPDS	 ECX
3  6911	00002215  59						 POP	 ECX
2  6912	00002216  13 D1						 ADC	 EDX,ECX
2  6913								 POPDS	 ECX
3  6914	00002218  59						 POP	 ECX
2  6915	00002219  49						 DEC	 ECX
2  6916								 POPDS	 EDI
3  6917	0000221A  5F						 POP	 EDI
2  6918	0000221B  47						 INC	 EDI
2  6919	0000221C  EB B0						 JMP	 SHORT TN_LOOP
2  6920	0000221E			 TN_STOP:
2  6921								 PUSHDS	 EAX
3  6922	0000221E  50						 PUSH	 EAX
2  6923								 PUSHDS	 EDX
3  6924	0000221F  52						 PUSH	 EDX
2  6925								 PUSHDS	 EDI
3  6926	00002220  57						 PUSH	 EDI
2  6927								 PUSHDS	 ECX
3  6928	00002221  51						 PUSH	 ECX
2  6929								 POPRS	 EDI
3  6930	00002222  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
3  6931	00002225  83 C5	04					 ADD	 EBP,CELL_SIZE
2  6932								 $NEXT
3  6933	00002228  AD						 LODSD				 ; fetch address
4  6934	00002229  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  6935	0000222B  FF E3						 JMP	 EBX			 ; execute
2  6936
2  6937					 ;  DIGITS
2  6938								 $CONST	 'DIGITS',$DIGITS
4  6939	0000222D			 ??035B:
4  6940	0000222D  00						   DB	 VEF_USUAL
4  6941	0000222E  06						 DB	 ??035C	- $ - 1
4  6942	0000222F  44 49	47 49 54 53				 DB	 'DIGITS'
4  6943	00002235			 ??035C:
4  6944	00002235  08						 DB	 ??035C	- ??035B
4  6945	00002236  200021AF					 DD	 VOC_LINK
4  6946	0000223A						   LABEL   $DIGITS FAR
4  6947	0000223A  2000010E					   DD	   $DOCONST + DESIRED_BASE_EQU
4  6948	0000223E			 ??035E:
2  6949								 CW	 DIGITS_TABLE
3  6950	0000223E  20002242					 DD	 DIGITS_TABLE +	DESIRED_BASE_EQU
2  6951	00002242			 DIGITS_TABLE:
2  6952	00002242  30 31	32 33 34 35 36+				 DB	 '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ',0
   6953		  37 38	39 41 42 43 44+
   6954		  45 46	47 48 49 4A 4B+
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 123
meta.asm



   6955		  4C 4D	4E 4F 50 51 52+
   6956		  53 54	55 56 57 58 59+
   6957		  5A 00
2  6958
2  6959					 ;  6.1.2170 S>D
2  6960					 ;  Convert single cell	value to double	cell value
2  6961					 ;  D: a -- aa
2  6962								 $DEF	 'S>D',$STOD
3  6963	00002267			 ??035F:
3  6964	00002267  00						   DB	 VEF_USUAL
3  6965	00002268  03						 DB	 ??0360	- $ - 1
3  6966	00002269  53 3E	44					 DB	 'S>D'
3  6967	0000226C			 ??0360:
3  6968	0000226C  05						 DB	 ??0360	- ??035F
3  6969	0000226D  2000222D					 DD	 VOC_LINK
3  6970	00002271						   LABEL   $STOD FAR
3  6971	00002271  20002275					   DD	   ??0362 + DESIRED_BASE_EQU
3  6972	00002275			 ??0362:
2  6973								 POPDS	 EAX
3  6974	00002275  58						 POP	 EAX
2  6975	00002276  99						 CDQ
2  6976								 PUSHDS	 EAX
3  6977	00002277  50						 PUSH	 EAX
2  6978								 PUSHDS	 EDX
3  6979	00002278  52						 PUSH	 EDX
2  6980								 $NEXT
3  6981	00002279  AD						 LODSD				 ; fetch address
4  6982	0000227A  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  6983	0000227C  FF E3						 JMP	 EBX			 ; execute
2  6984
2  6985
1  6986								 INCLUDE "except.inc"
2  6987					 ;******************************************************************************
2  6988					 ;
2  6989					 ;  except.inc
2  6990					 ;  IKForth
2  6991					 ;
2  6992					 ;  Copyright (C) 1999-2001 Illya Kysil
2  6993					 ;
2  6994					 ;******************************************************************************
2  6995					 ;  EXCEPTION words
2  6996					 ;******************************************************************************
2  6997
2  6998					 ;  9.6.1.0875 CATCH
2  6999								 $COLON	 'CATCH',$CATCH
4  7000	0000227E			 ??0363:
4  7001	0000227E  00						   DB	 VEF_USUAL
4  7002	0000227F  05						 DB	 ??0364	- $ - 1
4  7003	00002280  43 41	54 43 48				 DB	 'CATCH'
4  7004	00002285			 ??0364:
4  7005	00002285  07						 DB	 ??0364	- ??0363
4  7006	00002286  20002267					 DD	 VOC_LINK
4  7007	0000228A						   LABEL   $CATCH FAR
4  7008	0000228A  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  7009	0000228E			 ??0366:
2  7010								 CW	 $SPFETCH
3  7011	0000228E  20001264					 DD	 $SPFETCH + DESIRED_BASE_EQU
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 124
meta.asm



2  7012								 CW	 $TOR
3  7013	00002292  2000128F					 DD	 $TOR +	DESIRED_BASE_EQU
2  7014								 CW	 $EXCEPTION_HANDLER
3  7015	00002296  20000277					 DD	 $EXCEPTION_HANDLER + DESIRED_BASE_EQU
2  7016								 CW	 $FETCH
3  7017	0000229A  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  7018								 CW	 $TOR
3  7019	0000229E  2000128F					 DD	 $TOR +	DESIRED_BASE_EQU
2  7020								 CW	 $RPFETCH
3  7021	000022A2  20001382					 DD	 $RPFETCH + DESIRED_BASE_EQU
2  7022								 CW	 $EXCEPTION_HANDLER
3  7023	000022A6  20000277					 DD	 $EXCEPTION_HANDLER + DESIRED_BASE_EQU
2  7024								 CW	 $STORE
3  7025	000022AA  20001754					 DD	 $STORE	+ DESIRED_BASE_EQU
2  7026								 CW	 $EXECUTE
3  7027	000022AE  20001A9D					 DD	 $EXECUTE + DESIRED_BASE_EQU
2  7028								 CW	 $RFROM
3  7029	000022B2  200012A8					 DD	 $RFROM	+ DESIRED_BASE_EQU
2  7030								 CW	 $EXCEPTION_HANDLER
3  7031	000022B6  20000277					 DD	 $EXCEPTION_HANDLER + DESIRED_BASE_EQU
2  7032								 CW	 $STORE
3  7033	000022BA  20001754					 DD	 $STORE	+ DESIRED_BASE_EQU
2  7034								 CW	 $RFROM
3  7035	000022BE  200012A8					 DD	 $RFROM	+ DESIRED_BASE_EQU
2  7036								 CW	 $DROP
3  7037	000022C2  2000117B					 DD	 $DROP + DESIRED_BASE_EQU
2  7038								 CW	 $ZERO
3  7039	000022C6  20000187					 DD	 $ZERO + DESIRED_BASE_EQU
2  7040								 CW	 $EXIT
3  7041	000022CA  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  7042
2  7043					 ;  (THROW)
2  7044					 ;  D: exc-id --
2  7045								 $COLON	 '(THROW)',$PTHROW
4  7046	000022CE			 ??0367:
4  7047	000022CE  00						   DB	 VEF_USUAL
4  7048	000022CF  07						 DB	 ??0368	- $ - 1
4  7049	000022D0  28 54	48 52 4F 57 29				 DB	 '(THROW)'
4  7050	000022D7			 ??0368:
4  7051	000022D7  09						 DB	 ??0368	- ??0367
4  7052	000022D8  2000227E					 DD	 VOC_LINK
4  7053	000022DC						   LABEL   $PTHROW FAR
4  7054	000022DC  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  7055	000022E0			 ??036A:
2  7056								 CW	 $EXCEPTION_HANDLER
3  7057	000022E0  20000277					 DD	 $EXCEPTION_HANDLER + DESIRED_BASE_EQU
2  7058								 CW	 $FETCH
3  7059	000022E4  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
2  7060								 CW	 $RPSTORE
3  7061	000022E8  20001396					 DD	 $RPSTORE + DESIRED_BASE_EQU
2  7062								 CW	 $RFROM
3  7063	000022EC  200012A8					 DD	 $RFROM	+ DESIRED_BASE_EQU
2  7064								 CW	 $EXCEPTION_HANDLER
3  7065	000022F0  20000277					 DD	 $EXCEPTION_HANDLER + DESIRED_BASE_EQU
2  7066								 CW	 $STORE
3  7067	000022F4  20001754					 DD	 $STORE	+ DESIRED_BASE_EQU
2  7068								 CW	 $RFROM
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 125
meta.asm



3  7069	000022F8  200012A8					 DD	 $RFROM	+ DESIRED_BASE_EQU
2  7070								 CW	 $SWAP
3  7071	000022FC  200011EF					 DD	 $SWAP + DESIRED_BASE_EQU
2  7072								 CW	 $TOR
3  7073	00002300  2000128F					 DD	 $TOR +	DESIRED_BASE_EQU
2  7074								 CW	 $SPSTORE
3  7075	00002304  2000127A					 DD	 $SPSTORE + DESIRED_BASE_EQU
2  7076								 CW	 $DROP
3  7077	00002308  2000117B					 DD	 $DROP + DESIRED_BASE_EQU
2  7078								 CW	 $RFROM
3  7079	0000230C  200012A8					 DD	 $RFROM	+ DESIRED_BASE_EQU
2  7080								 CW	 $EXIT
3  7081	00002310  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  7082
2  7083					 ;  9.6.1.2275 THROW
2  7084								 $COLON	 'THROW',$THROW
4  7085	00002314			 ??036B:
4  7086	00002314  00						   DB	 VEF_USUAL
4  7087	00002315  05						 DB	 ??036C	- $ - 1
4  7088	00002316  54 48	52 4F 57				 DB	 'THROW'
4  7089	0000231B			 ??036C:
4  7090	0000231B  07						 DB	 ??036C	- ??036B
4  7091	0000231C  200022CE					 DD	 VOC_LINK
4  7092	00002320						   LABEL   $THROW FAR
4  7093	00002320  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  7094	00002324			 ??036E:
2  7095								 CW	 $ZERO
3  7096	00002324  20000187					 DD	 $ZERO + DESIRED_BASE_EQU
2  7097								 CW	 $DUP
3  7098	00002328  2000118F					 DD	 $DUP +	DESIRED_BASE_EQU
2  7099								 CW	 $THROW_ADDRESS
3  7100	0000232C  20000293					 DD	 $THROW_ADDRESS	+ DESIRED_BASE_EQU
2  7101								 CW	 $STORE
3  7102	00002330  20001754					 DD	 $STORE	+ DESIRED_BASE_EQU
2  7103								 CW	 $THROW_WORD
3  7104	00002334  200002AC					 DD	 $THROW_WORD + DESIRED_BASE_EQU
2  7105								 CW	 $STORE
3  7106	00002338  20001754					 DD	 $STORE	+ DESIRED_BASE_EQU
2  7107
2  7108								 CW	 $QDUP
3  7109	0000233C  200010EF					 DD	 $QDUP + DESIRED_BASE_EQU
2  7110								 CW	 $QBRANCH
3  7111	00002340  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  7112								 CW	 THROW_EXIT
3  7113	00002344  2000234C					 DD	 THROW_EXIT + DESIRED_BASE_EQU
2  7114								   CW	   $PTHROW
3  7115	00002348  200022DC					 DD	 $PTHROW + DESIRED_BASE_EQU
2  7116	0000234C			 THROW_EXIT:
2  7117								 CW	 $EXIT
3  7118	0000234C  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  7119
1  7120								 INCLUDE "file.inc"
2  7121					 ;******************************************************************************
2  7122					 ;
2  7123					 ;  file.inc
2  7124					 ;  IKForth
2  7125					 ;
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 126
meta.asm



2  7126					 ;  Copyright (C) 1999-2001 Illya Kysil
2  7127					 ;
2  7128					 ;******************************************************************************
2  7129					 ;  FILE access	words
2  7130					 ;******************************************************************************
2  7131
2  7132								 $CONST	 'R/O',$R_O
4  7133	00002350			 ??036F:
4  7134	00002350  00						   DB	 VEF_USUAL
4  7135	00002351  03						 DB	 ??0370	- $ - 1
4  7136	00002352  52 2F	4F					 DB	 'R/O'
4  7137	00002355			 ??0370:
4  7138	00002355  05						 DB	 ??0370	- ??036F
4  7139	00002356  20002314					 DD	 VOC_LINK
4  7140	0000235A						   LABEL   $R_O	FAR
4  7141	0000235A  2000010E					   DD	   $DOCONST + DESIRED_BASE_EQU
4  7142	0000235E			 ??0372:
2  7143								 CC	 0
3  7144	0000235E  00000000					 DD	 0
2  7145
2  7146								 $CONST	 'W/O',$W_O
4  7147	00002362			 ??0373:
4  7148	00002362  00						   DB	 VEF_USUAL
4  7149	00002363  03						 DB	 ??0374	- $ - 1
4  7150	00002364  57 2F	4F					 DB	 'W/O'
4  7151	00002367			 ??0374:
4  7152	00002367  05						 DB	 ??0374	- ??0373
4  7153	00002368  20002350					 DD	 VOC_LINK
4  7154	0000236C						   LABEL   $W_O	FAR
4  7155	0000236C  2000010E					   DD	   $DOCONST + DESIRED_BASE_EQU
4  7156	00002370			 ??0376:
2  7157								 CC	 1
3  7158	00002370  00000001					 DD	 1
2  7159
2  7160								 $CONST	 'R/W',$R_W
4  7161	00002374			 ??0377:
4  7162	00002374  00						   DB	 VEF_USUAL
4  7163	00002375  03						 DB	 ??0378	- $ - 1
4  7164	00002376  52 2F	57					 DB	 'R/W'
4  7165	00002379			 ??0378:
4  7166	00002379  05						 DB	 ??0378	- ??0377
4  7167	0000237A  20002362					 DD	 VOC_LINK
4  7168	0000237E						   LABEL   $R_W	FAR
4  7169	0000237E  2000010E					   DD	   $DOCONST + DESIRED_BASE_EQU
4  7170	00002382			 ??037A:
2  7171								 CC	 2
3  7172	00002382  00000002					 DD	 2
2  7173
2  7174								 $DEF	 'CLOSE-FILE',$CLOSE_FILE
3  7175	00002386			 ??037B:
3  7176	00002386  00						   DB	 VEF_USUAL
3  7177	00002387  0A						 DB	 ??037C	- $ - 1
3  7178	00002388  43 4C	4F 53 45 2D 46+				 DB	 'CLOSE-FILE'
   7179		  49 4C	45
3  7180	00002392			 ??037C:
3  7181	00002392  0C						 DB	 ??037C	- ??037B
3  7182	00002393  20002374					 DD	 VOC_LINK
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 127
meta.asm



3  7183	00002397						   LABEL   $CLOSE_FILE FAR
3  7184	00002397  2000239B					   DD	   ??037E + DESIRED_BASE_EQU
3  7185	0000239B			 ??037E:
2  7186								 $CALL	 FILE_CLOSE_FUNC
4  7187	0000239B  83 ED	04					 SUB	 EBP,CELL_SIZE
4  7188	0000239E  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  7189	000023A1  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  7190	000023A7  83 C3	28					 ADD	 EBX,FILE_CLOSE_FUNC * CELL_SIZE
3  7191	000023AA  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  7192	000023AC  FF D3						 CALL	 EBX
4  7193	000023AE  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  7194	000023B1  83 C5	04					 ADD	 EBP,CELL_SIZE
2  7195								 $CALL	 GET_LAST_ERROR_FUNC
4  7196	000023B4  83 ED	04					 SUB	 EBP,CELL_SIZE
4  7197	000023B7  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  7198	000023BA  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  7199	000023C0  83 C3	00					 ADD	 EBX,GET_LAST_ERROR_FUNC * CELL_SIZE
3  7200	000023C3  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  7201	000023C5  FF D3						 CALL	 EBX
4  7202	000023C7  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  7203	000023CA  83 C5	04					 ADD	 EBP,CELL_SIZE
2  7204	000023CD  50						 PUSH	 EAX
2  7205								 $NEXT
3  7206	000023CE  AD						 LODSD				 ; fetch address
4  7207	000023CF  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  7208	000023D1  FF E3						 JMP	 EBX			 ; execute
2  7209
2  7210								 $DEF	 'CREATE-FILE',$CREATE_FILE
3  7211	000023D3			 ??037F:
3  7212	000023D3  00						   DB	 VEF_USUAL
3  7213	000023D4  0B						 DB	 ??0380	- $ - 1
3  7214	000023D5  43 52	45 41 54 45 2D+				 DB	 'CREATE-FILE'
   7215		  46 49	4C 45
3  7216	000023E0			 ??0380:
3  7217	000023E0  0D						 DB	 ??0380	- ??037F
3  7218	000023E1  20002386					 DD	 VOC_LINK
3  7219	000023E5						   LABEL   $CREATE_FILE	FAR
3  7220	000023E5  200023E9					   DD	   ??0382 + DESIRED_BASE_EQU
3  7221	000023E9			 ??0382:
2  7222								 $CALL	 FILE_CREATE_FUNC
4  7223	000023E9  83 ED	04					 SUB	 EBP,CELL_SIZE
4  7224	000023EC  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  7225	000023EF  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  7226	000023F5  83 C3	2C					 ADD	 EBX,FILE_CREATE_FUNC *	CELL_SIZE
3  7227	000023F8  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  7228	000023FA  FF D3						 CALL	 EBX
4  7229	000023FC  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  7230	000023FF  83 C5	04					 ADD	 EBP,CELL_SIZE
2  7231	00002402  50						 PUSH	 EAX
2  7232								 $CALL	 GET_LAST_ERROR_FUNC
4  7233	00002403  83 ED	04					 SUB	 EBP,CELL_SIZE
4  7234	00002406  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  7235	00002409  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  7236	0000240F  83 C3	00					 ADD	 EBX,GET_LAST_ERROR_FUNC * CELL_SIZE
3  7237	00002412  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  7238	00002414  FF D3						 CALL	 EBX
4  7239	00002416  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 128
meta.asm



4  7240	00002419  83 C5	04					 ADD	 EBP,CELL_SIZE
2  7241	0000241C  50						 PUSH	 EAX
2  7242								 $NEXT
3  7243	0000241D  AD						 LODSD				 ; fetch address
4  7244	0000241E  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  7245	00002420  FF E3						 JMP	 EBX			 ; execute
2  7246
2  7247								 $DEF	 'FILE-POSITION',$FILE_POSITION
3  7248	00002422			 ??0383:
3  7249	00002422  00						   DB	 VEF_USUAL
3  7250	00002423  0D						 DB	 ??0384	- $ - 1
3  7251	00002424  46 49	4C 45 2D 50 4F+				 DB	 'FILE-POSITION'
   7252		  53 49	54 49 4F 4E
3  7253	00002431			 ??0384:
3  7254	00002431  0F						 DB	 ??0384	- ??0383
3  7255	00002432  200023D3					 DD	 VOC_LINK
3  7256	00002436						   LABEL   $FILE_POSITION FAR
3  7257	00002436  2000243A					   DD	   ??0386 + DESIRED_BASE_EQU
3  7258	0000243A			 ??0386:
2  7259								 $CALL	 FILE_POSITION_FUNC
4  7260	0000243A  83 ED	04					 SUB	 EBP,CELL_SIZE
4  7261	0000243D  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  7262	00002440  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  7263	00002446  83 C3	30					 ADD	 EBX,FILE_POSITION_FUNC	* CELL_SIZE
3  7264	00002449  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  7265	0000244B  FF D3						 CALL	 EBX
4  7266	0000244D  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  7267	00002450  83 C5	04					 ADD	 EBP,CELL_SIZE
2  7268	00002453  50						 PUSH	 EAX
2  7269	00002454  52						 PUSH	 EDX
2  7270								 $CALL	 GET_LAST_ERROR_FUNC
4  7271	00002455  83 ED	04					 SUB	 EBP,CELL_SIZE
4  7272	00002458  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  7273	0000245B  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  7274	00002461  83 C3	00					 ADD	 EBX,GET_LAST_ERROR_FUNC * CELL_SIZE
3  7275	00002464  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  7276	00002466  FF D3						 CALL	 EBX
4  7277	00002468  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  7278	0000246B  83 C5	04					 ADD	 EBP,CELL_SIZE
2  7279	0000246E  50						 PUSH	 EAX
2  7280								 $NEXT
3  7281	0000246F  AD						 LODSD				 ; fetch address
4  7282	00002470  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  7283	00002472  FF E3						 JMP	 EBX			 ; execute
2  7284
2  7285								 $DEF	 'OPEN-FILE',$OPEN_FILE
3  7286	00002474			 ??0387:
3  7287	00002474  00						   DB	 VEF_USUAL
3  7288	00002475  09						 DB	 ??0388	- $ - 1
3  7289	00002476  4F 50	45 4E 2D 46 49+				 DB	 'OPEN-FILE'
   7290		  4C 45
3  7291	0000247F			 ??0388:
3  7292	0000247F  0B						 DB	 ??0388	- ??0387
3  7293	00002480  20002422					 DD	 VOC_LINK
3  7294	00002484						   LABEL   $OPEN_FILE FAR
3  7295	00002484  20002488					   DD	   ??038A + DESIRED_BASE_EQU
3  7296	00002488			 ??038A:
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 129
meta.asm



2  7297								 $CALL	 FILE_OPEN_FUNC
4  7298	00002488  83 ED	04					 SUB	 EBP,CELL_SIZE
4  7299	0000248B  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  7300	0000248E  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  7301	00002494  83 C3	34					 ADD	 EBX,FILE_OPEN_FUNC * CELL_SIZE
3  7302	00002497  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  7303	00002499  FF D3						 CALL	 EBX
4  7304	0000249B  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  7305	0000249E  83 C5	04					 ADD	 EBP,CELL_SIZE
2  7306	000024A1  50						 PUSH	 EAX
2  7307								 $CALL	 GET_LAST_ERROR_FUNC
4  7308	000024A2  83 ED	04					 SUB	 EBP,CELL_SIZE
4  7309	000024A5  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  7310	000024A8  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  7311	000024AE  83 C3	00					 ADD	 EBX,GET_LAST_ERROR_FUNC * CELL_SIZE
3  7312	000024B1  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  7313	000024B3  FF D3						 CALL	 EBX
4  7314	000024B5  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  7315	000024B8  83 C5	04					 ADD	 EBP,CELL_SIZE
2  7316	000024BB  50						 PUSH	 EAX
2  7317								 $NEXT
3  7318	000024BC  AD						 LODSD				 ; fetch address
4  7319	000024BD  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  7320	000024BF  FF E3						 JMP	 EBX			 ; execute
2  7321
2  7322								 $DEF	 'READ-FILE',$READ_FILE
3  7323	000024C1			 ??038B:
3  7324	000024C1  00						   DB	 VEF_USUAL
3  7325	000024C2  09						 DB	 ??038C	- $ - 1
3  7326	000024C3  52 45	41 44 2D 46 49+				 DB	 'READ-FILE'
   7327		  4C 45
3  7328	000024CC			 ??038C:
3  7329	000024CC  0B						 DB	 ??038C	- ??038B
3  7330	000024CD  20002474					 DD	 VOC_LINK
3  7331	000024D1						   LABEL   $READ_FILE FAR
3  7332	000024D1  200024D5					   DD	   ??038E + DESIRED_BASE_EQU
3  7333	000024D5			 ??038E:
2  7334								 $CALL	 FILE_READ_FUNC
4  7335	000024D5  83 ED	04					 SUB	 EBP,CELL_SIZE
4  7336	000024D8  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  7337	000024DB  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  7338	000024E1  83 C3	38					 ADD	 EBX,FILE_READ_FUNC * CELL_SIZE
3  7339	000024E4  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  7340	000024E6  FF D3						 CALL	 EBX
4  7341	000024E8  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  7342	000024EB  83 C5	04					 ADD	 EBP,CELL_SIZE
2  7343	000024EE  50						 PUSH	 EAX
2  7344								 $CALL	 GET_LAST_ERROR_FUNC
4  7345	000024EF  83 ED	04					 SUB	 EBP,CELL_SIZE
4  7346	000024F2  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  7347	000024F5  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  7348	000024FB  83 C3	00					 ADD	 EBX,GET_LAST_ERROR_FUNC * CELL_SIZE
3  7349	000024FE  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  7350	00002500  FF D3						 CALL	 EBX
4  7351	00002502  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  7352	00002505  83 C5	04					 ADD	 EBP,CELL_SIZE
2  7353	00002508  50						 PUSH	 EAX
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 130
meta.asm



2  7354								 $NEXT
3  7355	00002509  AD						 LODSD				 ; fetch address
4  7356	0000250A  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  7357	0000250C  FF E3						 JMP	 EBX			 ; execute
2  7358
2  7359								 $DEF	 'REPOSITION-FILE',$REPOSITION_FILE
3  7360	0000250E			 ??038F:
3  7361	0000250E  00						   DB	 VEF_USUAL
3  7362	0000250F  0F						 DB	 ??0390	- $ - 1
3  7363	00002510  52 45	50 4F 53 49 54+				 DB	 'REPOSITION-FILE'
   7364		  49 4F	4E 2D 46 49 4C+
   7365		  45
3  7366	0000251F			 ??0390:
3  7367	0000251F  11						 DB	 ??0390	- ??038F
3  7368	00002520  200024C1					 DD	 VOC_LINK
3  7369	00002524						   LABEL   $REPOSITION_FILE FAR
3  7370	00002524  20002528					   DD	   ??0392 + DESIRED_BASE_EQU
3  7371	00002528			 ??0392:
2  7372								 $CALL	 FILE_REPOSITION_FUNC
4  7373	00002528  83 ED	04					 SUB	 EBP,CELL_SIZE
4  7374	0000252B  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  7375	0000252E  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  7376	00002534  83 C3	3C					 ADD	 EBX,FILE_REPOSITION_FUNC * CELL_SIZE
3  7377	00002537  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  7378	00002539  FF D3						 CALL	 EBX
4  7379	0000253B  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  7380	0000253E  83 C5	04					 ADD	 EBP,CELL_SIZE
2  7381								 $CALL	 GET_LAST_ERROR_FUNC
4  7382	00002541  83 ED	04					 SUB	 EBP,CELL_SIZE
4  7383	00002544  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  7384	00002547  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  7385	0000254D  83 C3	00					 ADD	 EBX,GET_LAST_ERROR_FUNC * CELL_SIZE
3  7386	00002550  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  7387	00002552  FF D3						 CALL	 EBX
4  7388	00002554  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  7389	00002557  83 C5	04					 ADD	 EBP,CELL_SIZE
2  7390	0000255A  50						 PUSH	 EAX
2  7391								 $NEXT
3  7392	0000255B  AD						 LODSD				 ; fetch address
4  7393	0000255C  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  7394	0000255E  FF E3						 JMP	 EBX			 ; execute
2  7395
2  7396								 $DEF	 'WRITE-FILE',$WRITE_FILE
3  7397	00002560			 ??0393:
3  7398	00002560  00						   DB	 VEF_USUAL
3  7399	00002561  0A						 DB	 ??0394	- $ - 1
3  7400	00002562  57 52	49 54 45 2D 46+				 DB	 'WRITE-FILE'
   7401		  49 4C	45
3  7402	0000256C			 ??0394:
3  7403	0000256C  0C						 DB	 ??0394	- ??0393
3  7404	0000256D  2000250E					 DD	 VOC_LINK
3  7405	00002571						   LABEL   $WRITE_FILE FAR
3  7406	00002571  20002575					   DD	   ??0396 + DESIRED_BASE_EQU
3  7407	00002575			 ??0396:
2  7408								 $CALL	 FILE_WRITE_FUNC
4  7409	00002575  83 ED	04					 SUB	 EBP,CELL_SIZE
4  7410	00002578  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 131
meta.asm



3  7411	0000257B  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  7412	00002581  83 C3	40					 ADD	 EBX,FILE_WRITE_FUNC * CELL_SIZE
3  7413	00002584  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  7414	00002586  FF D3						 CALL	 EBX
4  7415	00002588  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  7416	0000258B  83 C5	04					 ADD	 EBP,CELL_SIZE
2  7417								 $CALL	 GET_LAST_ERROR_FUNC
4  7418	0000258E  83 ED	04					 SUB	 EBP,CELL_SIZE
4  7419	00002591  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  7420	00002594  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  7421	0000259A  83 C3	00					 ADD	 EBX,GET_LAST_ERROR_FUNC * CELL_SIZE
3  7422	0000259D  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  7423	0000259F  FF D3						 CALL	 EBX
4  7424	000025A1  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  7425	000025A4  83 C5	04					 ADD	 EBP,CELL_SIZE
2  7426	000025A7  50						 PUSH	 EAX
2  7427								 $NEXT
3  7428	000025A8  AD						 LODSD				 ; fetch address
4  7429	000025A9  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  7430	000025AB  FF E3						 JMP	 EBX			 ; execute
2  7431
2  7432								 $DEF	 'READ-LINE',$READ_LINE
3  7433	000025AD			 ??0397:
3  7434	000025AD  00						   DB	 VEF_USUAL
3  7435	000025AE  09						 DB	 ??0398	- $ - 1
3  7436	000025AF  52 45	41 44 2D 4C 49+				 DB	 'READ-LINE'
   7437		  4E 45
3  7438	000025B8			 ??0398:
3  7439	000025B8  0B						 DB	 ??0398	- ??0397
3  7440	000025B9  20002560					 DD	 VOC_LINK
3  7441	000025BD						   LABEL   $READ_LINE FAR
3  7442	000025BD  200025C1					   DD	   ??039A + DESIRED_BASE_EQU
3  7443	000025C1			 ??039A:
2  7444								 $CALL	 FILE_READ_LINE_FUNC
4  7445	000025C1  83 ED	04					 SUB	 EBP,CELL_SIZE
4  7446	000025C4  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  7447	000025C7  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  7448	000025CD  83 C3	44					 ADD	 EBX,FILE_READ_LINE_FUNC * CELL_SIZE
3  7449	000025D0  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  7450	000025D2  FF D3						 CALL	 EBX
4  7451	000025D4  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  7452	000025D7  83 C5	04					 ADD	 EBP,CELL_SIZE
2  7453	000025DA  50						 PUSH	 EAX
2  7454	000025DB  52						 PUSH	 EDX
2  7455								 $CALL	 GET_LAST_ERROR_FUNC
4  7456	000025DC  83 ED	04					 SUB	 EBP,CELL_SIZE
4  7457	000025DF  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  7458	000025E2  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  7459	000025E8  83 C3	00					 ADD	 EBX,GET_LAST_ERROR_FUNC * CELL_SIZE
3  7460	000025EB  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  7461	000025ED  FF D3						 CALL	 EBX
4  7462	000025EF  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  7463	000025F2  83 C5	04					 ADD	 EBP,CELL_SIZE
2  7464	000025F5  50						 PUSH	 EAX
2  7465								 $NEXT
3  7466	000025F6  AD						 LODSD				 ; fetch address
4  7467	000025F7  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 132
meta.asm



4  7468	000025F9  FF E3						 JMP	 EBX			 ; execute
2  7469
2  7470					 ;  INCLUDED
2  7471					 ;  D: c-addr count --
2  7472								 $COLON	 'INCLUDED',$INCLUDED
4  7473	000025FB			 ??039B:
4  7474	000025FB  00						   DB	 VEF_USUAL
4  7475	000025FC  08						 DB	 ??039C	- $ - 1
4  7476	000025FD  49 4E	43 4C 55 44 45+				 DB	 'INCLUDED'
   7477		  44
4  7478	00002605			 ??039C:
4  7479	00002605  0A						 DB	 ??039C	- ??039B
4  7480	00002606  200025AD					 DD	 VOC_LINK
4  7481	0000260A						   LABEL   $INCLUDED FAR
4  7482	0000260A  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  7483	0000260E			 ??039E:
2  7484								 CW	 $R_O
3  7485	0000260E  2000235A					 DD	 $R_O +	DESIRED_BASE_EQU
2  7486								 CW	 $OPEN_FILE
3  7487	00002612  20002484					 DD	 $OPEN_FILE + DESIRED_BASE_EQU
2  7488								 CW	 $THROW
3  7489	00002616  20002320					 DD	 $THROW	+ DESIRED_BASE_EQU
2  7490								 CW	 $INCLUDE_FILE
3  7491	0000261A  20002635					 DD	 $INCLUDE_FILE + DESIRED_BASE_EQU
2  7492								 CW	 $EXIT
3  7493	0000261E  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  7494
2  7495								 $COLON	 'INCLUDE-FILE',$INCLUDE_FILE
4  7496	00002622			 ??039F:
4  7497	00002622  00						   DB	 VEF_USUAL
4  7498	00002623  0C						 DB	 ??03A0	- $ - 1
4  7499	00002624  49 4E	43 4C 55 44 45+				 DB	 'INCLUDE-FILE'
   7500		  2D 46	49 4C 45
4  7501	00002630			 ??03A0:
4  7502	00002630  0E						 DB	 ??03A0	- ??039F
4  7503	00002631  200025FB					 DD	 VOC_LINK
4  7504	00002635						   LABEL   $INCLUDE_FILE FAR
4  7505	00002635  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
4  7506	00002639			 ??03A2:
2  7507								 CW	 $INPUTTOR
3  7508	00002639  200006DD					 DD	 $INPUTTOR + DESIRED_BASE_EQU
2  7509								 CW	 $SOURCE_ID_STORE
3  7510	0000263D  20000559					 DD	 $SOURCE_ID_STORE + DESIRED_BASE_EQU
2  7511								 CW	 $ZERO
3  7512	00002641  20000187					 DD	 $ZERO + DESIRED_BASE_EQU
2  7513								 CW	 $BLK
3  7514	00002645  20001B17					 DD	 $BLK +	DESIRED_BASE_EQU
2  7515								 CW	 $STORE
3  7516	00002649  20001754					 DD	 $STORE	+ DESIRED_BASE_EQU
2  7517								 CW	 $ZERO
3  7518	0000264D  20000187					 DD	 $ZERO + DESIRED_BASE_EQU
2  7519								 CW	 $STOD
3  7520	00002651  20002271					 DD	 $STOD + DESIRED_BASE_EQU
2  7521								 CW	 $CURRENT_FILE_POSITION
3  7522	00002655  20000214					 DD	 $CURRENT_FILE_POSITION	+ DESIRED_BASE_EQU
2  7523								 CW	 $2STORE
3  7524	00002659  2000177E					 DD	 $2STORE + DESIRED_BASE_EQU
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 133
meta.asm



2  7525	0000265D			 INCLUDE_FILE_LOOP:
2  7526								 CW	 $SOURCE_ID
3  7527	0000265D  2000053C					 DD	 $SOURCE_ID + DESIRED_BASE_EQU
2  7528								 CW	 $FILE_POSITION
3  7529	00002661  20002436					 DD	 $FILE_POSITION	+ DESIRED_BASE_EQU
2  7530								 CW	 $DROP
3  7531	00002665  2000117B					 DD	 $DROP + DESIRED_BASE_EQU
2  7532								 CW	 $CURRENT_FILE_POSITION
3  7533	00002669  20000214					 DD	 $CURRENT_FILE_POSITION	+ DESIRED_BASE_EQU
2  7534								 CW	 $2STORE
3  7535	0000266D  2000177E					 DD	 $2STORE + DESIRED_BASE_EQU
2  7536
2  7537								 CW	 $ZERO			 ; FOR THROW
3  7538	00002671  20000187					 DD	 $ZERO + DESIRED_BASE_EQU
2  7539								 CW	 $REFILL
3  7540	00002675  20000607					 DD	 $REFILL + DESIRED_BASE_EQU
2  7541								 CW	 $QBRANCH
3  7542	00002679  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  7543								 CW	 INCLUDE_FILE_EXIT
3  7544	0000267D  2000269D					 DD	 INCLUDE_FILE_EXIT + DESIRED_BASE_EQU
2  7545								   CW	   $DROP
3  7546	00002681  2000117B					 DD	 $DROP + DESIRED_BASE_EQU
2  7547								   CW	   $LIT
3  7548	00002685  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  7549								   CW	   $INTERPRET
3  7550	00002689  20000DB9					 DD	 $INTERPRET + DESIRED_BASE_EQU
2  7551								   CW	   $CATCH
3  7552	0000268D  2000228A					 DD	 $CATCH	+ DESIRED_BASE_EQU
2  7553								   CW	   $QDUP
3  7554	00002691  200010EF					 DD	 $QDUP + DESIRED_BASE_EQU
2  7555								 CW	 $QBRANCH
3  7556	00002695  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
2  7557								 CW	 INCLUDE_FILE_LOOP
3  7558	00002699  2000265D					 DD	 INCLUDE_FILE_LOOP + DESIRED_BASE_EQU
2  7559	0000269D			 INCLUDE_FILE_EXIT:
2  7560								 CW	 $SOURCE_ID
3  7561	0000269D  2000053C					 DD	 $SOURCE_ID + DESIRED_BASE_EQU
2  7562								 CW	 $CLOSE_FILE
3  7563	000026A1  20002397					 DD	 $CLOSE_FILE + DESIRED_BASE_EQU
2  7564								 CW	 $DROP
3  7565	000026A5  2000117B					 DD	 $DROP + DESIRED_BASE_EQU
2  7566								 CW	 $INPUTFROMR
3  7567	000026A9  20000727					 DD	 $INPUTFROMR + DESIRED_BASE_EQU
2  7568								 CW	 $THROW
3  7569	000026AD  20002320					 DD	 $THROW	+ DESIRED_BASE_EQU
2  7570								 CW	 $EXIT
3  7571	000026B1  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
2  7572
2  7573					 ;  11.6.1.2147	RESIZE-FILE
2  7574					 ;  ( ud fileid	-- ior )
2  7575					 ;  Set	the size of the	file identified	by fileid to ud. ior is	the
2  7576					 ;  implementation-defined I/O result code.
2  7577					 ;  If the resultant file is larger than the file before the operation,
2  7578					 ;  the	portion	of the file added as a result of the operation might not have
2  7579					 ;  been written. At the conclusion of the operation, FILE-SIZE	returns
2  7580					 ;  the	value ud and FILE-POSITION returns an unspecified value.
2  7581								 $DEF	 'RESIZE-FILE',$RESIZE_FILE
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 134
meta.asm



3  7582	000026B5			 ??03A3:
3  7583	000026B5  00						   DB	 VEF_USUAL
3  7584	000026B6  0B						 DB	 ??03A4	- $ - 1
3  7585	000026B7  52 45	53 49 5A 45 2D+				 DB	 'RESIZE-FILE'
   7586		  46 49	4C 45
3  7587	000026C2			 ??03A4:
3  7588	000026C2  0D						 DB	 ??03A4	- ??03A3
3  7589	000026C3  20002622					 DD	 VOC_LINK
3  7590	000026C7						   LABEL   $RESIZE_FILE	FAR
3  7591	000026C7  200026CB					   DD	   ??03A6 + DESIRED_BASE_EQU
3  7592	000026CB			 ??03A6:
2  7593								 $CALL	 FILE_RESIZE_FUNC
4  7594	000026CB  83 ED	04					 SUB	 EBP,CELL_SIZE
4  7595	000026CE  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  7596	000026D1  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  7597	000026D7  83 C3	48					 ADD	 EBX,FILE_RESIZE_FUNC *	CELL_SIZE
3  7598	000026DA  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  7599	000026DC  FF D3						 CALL	 EBX
4  7600	000026DE  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  7601	000026E1  83 C5	04					 ADD	 EBP,CELL_SIZE
2  7602								 $CALL	 GET_LAST_ERROR_FUNC
4  7603	000026E4  83 ED	04					 SUB	 EBP,CELL_SIZE
4  7604	000026E7  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  7605	000026EA  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  7606	000026F0  83 C3	00					 ADD	 EBX,GET_LAST_ERROR_FUNC * CELL_SIZE
3  7607	000026F3  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  7608	000026F5  FF D3						 CALL	 EBX
4  7609	000026F7  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  7610	000026FA  83 C5	04					 ADD	 EBP,CELL_SIZE
2  7611	000026FD  50						 PUSH	 EAX
2  7612								 $NEXT
3  7613	000026FE  AD						 LODSD				 ; fetch address
4  7614	000026FF  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  7615	00002701  FF E3						 JMP	 EBX			 ; execute
2  7616
2  7617
1  7618								 INCLUDE "facility.inc"
2  7619					 ;******************************************************************************
2  7620					 ;
2  7621					 ;  facility.inc
2  7622					 ;  IKForth
2  7623					 ;
2  7624					 ;  Copyright (C) 1999-2001 Illya Kysil
2  7625					 ;
2  7626					 ;******************************************************************************
2  7627					 ;  FACILITY words
2  7628					 ;******************************************************************************
2  7629
2  7630					 ;  10.6.1.0742	AT-XY
2  7631								 $DEF	 'AT-XY',$AT_XY
3  7632	00002703			 ??03A7:
3  7633	00002703  00						   DB	 VEF_USUAL
3  7634	00002704  05						 DB	 ??03A8	- $ - 1
3  7635	00002705  41 54	2D 58 59				 DB	 'AT-XY'
3  7636	0000270A			 ??03A8:
3  7637	0000270A  07						 DB	 ??03A8	- ??03A7
3  7638	0000270B  200026B5					 DD	 VOC_LINK
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 135
meta.asm



3  7639	0000270F						   LABEL   $AT_XY FAR
3  7640	0000270F  20002713					   DD	   ??03AA + DESIRED_BASE_EQU
3  7641	00002713			 ??03AA:
2  7642								 $CALL	 AT_XY_FUNC
4  7643	00002713  83 ED	04					 SUB	 EBP,CELL_SIZE
4  7644	00002716  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  7645	00002719  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  7646	0000271F  83 C3	4C					 ADD	 EBX,AT_XY_FUNC	* CELL_SIZE
3  7647	00002722  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  7648	00002724  FF D3						 CALL	 EBX
4  7649	00002726  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  7650	00002729  83 C5	04					 ADD	 EBP,CELL_SIZE
2  7651								 $NEXT
3  7652	0000272C  AD						 LODSD				 ; fetch address
4  7653	0000272D  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  7654	0000272F  FF E3						 JMP	 EBX			 ; execute
2  7655
2  7656					 ;  10.6.1.2005	PAGE
2  7657								 $DEF	 'PAGE'
3  7658	00002731			 ??03AB:
3  7659	00002731  00						   DB	 VEF_USUAL
3  7660	00002732  04						 DB	 ??03AC	- $ - 1
3  7661	00002733  50 41	47 45					 DB	 'PAGE'
3  7662	00002737			 ??03AC:
3  7663	00002737  06						 DB	 ??03AC	- ??03AB
3  7664	00002738  20002703					 DD	 VOC_LINK
3  7665	0000273C  20002740					   DD	   ??03AE + DESIRED_BASE_EQU
3  7666	00002740			 ??03AE:
2  7667								 $CALL	 PAGE_FUNC
4  7668	00002740  83 ED	04					 SUB	 EBP,CELL_SIZE
4  7669	00002743  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
3  7670	00002746  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  7671	0000274C  83 C3	58					 ADD	 EBX,PAGE_FUNC * CELL_SIZE
3  7672	0000274F  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  7673	00002751  FF D3						 CALL	 EBX
4  7674	00002753  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  7675	00002756  83 C5	04					 ADD	 EBP,CELL_SIZE
2  7676								 $NEXT
3  7677	00002759  AD						 LODSD				 ; fetch address
4  7678	0000275A  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  7679	0000275C  FF E3						 JMP	 EBX			 ; execute
2  7680
2  7681					 ;  (BYE)
2  7682								 $DEF	 '(BYE)',$PBYE
3  7683	0000275E			 ??03AF:
3  7684	0000275E  00						   DB	 VEF_USUAL
3  7685	0000275F  05						 DB	 ??03B0	- $ - 1
3  7686	00002760  28 42	59 45 29				 DB	 '(BYE)'
3  7687	00002765			 ??03B0:
3  7688	00002765  07						 DB	 ??03B0	- ??03AF
3  7689	00002766  20002731					 DD	 VOC_LINK
3  7690	0000276A						   LABEL   $PBYE FAR
3  7691	0000276A  2000276E					   DD	   ??03B2 + DESIRED_BASE_EQU
3  7692	0000276E			 ??03B2:
2  7693								 $CALL	 BYE_FUNC
4  7694	0000276E  83 ED	04					 SUB	 EBP,CELL_SIZE
4  7695	00002771  89 7D	00					 MOV	 [DWORD	PTR EBP],EDI
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 136
meta.asm



3  7696	00002774  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
3  7697	0000277A  83 C3	10					 ADD	 EBX,BYE_FUNC *	CELL_SIZE
3  7698	0000277D  8B 1B						 MOV	 EBX,[DWORD PTR	EBX]
3  7699	0000277F  FF D3						 CALL	 EBX
4  7700	00002781  8B 7D	00					 MOV	 EDI,[DWORD PTR	EBP]
4  7701	00002784  83 C5	04					 ADD	 EBP,CELL_SIZE
2  7702								 $NEXT
3  7703	00002787  AD						 LODSD				 ; fetch address
4  7704	00002788  8B 18						 MOV	 EBX,[DWORD PTR	EAX]
4  7705	0000278A  FF E3						 JMP	 EBX			 ; execute
2  7706
2  7707
1  7708
   7709
   7710	0000278C			 START:
   7711								 POPDS	 EAX
1  7712	0000278C  58						 POP	 EAX
   7713								 POPDS	 <[DWORD PTR SF_VAR + DESIRED_BASE_EQU]>
1  7714	0000278D  8F 05	20000316				 POP	 [DWORD	PTR SF_VAR + DESIRED_BASE_EQU]
   7715								 POPDS	 <[DWORD PTR #SF_VAR + DESIRED_BASE_EQU]>
1  7716	00002793  8F 05	20000305				 POP	 [DWORD	PTR #SF_VAR + DESIRED_BASE_EQU]
   7717								 PUSHDS	 EAX
1  7718	00002799  50						 PUSH	 EAX
   7719								 PUSHDS	 EBX
1  7720	0000279A  53						 PUSH	 EBX
   7721								 PUSHDS	 <[DWORD PTR MAIN_PROC + DESIRED_BASE_EQU]>
1  7722	0000279B  FF 35	200003AC				 PUSH	 [DWORD	PTR MAIN_PROC +	DESIRED_BASE_EQU]
   7723								 PUSHDS	 FALSE
1  7724	000027A1  6A 00						 PUSH	 FALSE
   7725								 PUSHDS	 0
1  7726	000027A3  6A 00						 PUSH	 0
   7727	000027A5  8B 1D	20000020				 MOV	 EBX,[DWORD PTR	FUNC_TABLE_PTR + DESIRED_BASE_EQU]
   7728	000027AB  83 C3	50					 ADD	 EBX,START_THREAD_FUNC * CELL_SIZE
   7729	000027AE  FF 13						 CALL	 [DWORD	PTR EBX]
   7730								 POPDS	 EBX
1  7731	000027B0  5B						 POP	 EBX
   7732	000027B1  C3						 RET
   7733
   7734								 $COLON	 'DO-FORTH',$DO_FORTH,VEF_HIDDEN
2  7735	000027B2			 ??03B3:
2  7736	000027B2  02						   DB	 VEF_HIDDEN
2  7737	000027B3  08						 DB	 ??03B4	- $ - 1
2  7738	000027B4  44 4F	2D 46 4F 52 54+				 DB	 'DO-FORTH'
   7739		  48
2  7740	000027BC			 ??03B4:
2  7741	000027BC  0A						 DB	 ??03B4	- ??03B3
2  7742	000027BD  2000275E					 DD	 VOC_LINK
2  7743	000027C1						   LABEL   $DO_FORTH FAR
2  7744	000027C1  200000C7					   DD	   $ENTER + DESIRED_BASE_EQU
2  7745	000027C5			 ??03B6:
   7746								 CW	 $INIT_USER
1  7747	000027C5  200003DE					 DD	 $INIT_USER + DESIRED_BASE_EQU
   7748								 CW	 $SF
1  7749	000027C9  20000312					 DD	 $SF + DESIRED_BASE_EQU
   7750								 CW	 $FETCH
1  7751	000027CD  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
   7752								 CW	 $#SF
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 137
meta.asm



1  7753	000027D1  20000301					 DD	 $#SF +	DESIRED_BASE_EQU
   7754								 CW	 $FETCH
1  7755	000027D5  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
   7756								 CW	 $LIT
1  7757	000027D9  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
   7758								 CW	 $INCLUDED
1  7759	000027DD  2000260A					 DD	 $INCLUDED + DESIRED_BASE_EQU
   7760								 CW	 $CATCH
1  7761	000027E1  2000228A					 DD	 $CATCH	+ DESIRED_BASE_EQU
   7762								 CW	 $QBRANCH
1  7763	000027E5  2000003E					 DD	 $QBRANCH + DESIRED_BASE_EQU
   7764								 CW	 DO_FORTH_NO_EXCEPTIONS
1  7765	000027E9  200028A8					 DD	 DO_FORTH_NO_EXCEPTIONS	+ DESIRED_BASE_EQU
   7766								 $CR
2  7767	000027ED  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  7768	000027F1  0000000D					 DD	 13
2  7769	000027F5  2000185B					 DD	 $EMIT + DESIRED_BASE_EQU
2  7770	000027F9  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  7771	000027FD  0000000A					 DD	 10
2  7772	00002801  2000185B					 DD	 $EMIT + DESIRED_BASE_EQU
   7773								 $WRITE	 <Exception caught while INCLUDing [>
2  7774	00002805  200018B7					 DD	 $PTYPE	+ DESIRED_BASE_EQU
1  7775	00002809  22 45	78 63 65 70 74+				 DB	 @@03B7	- $ - 1,'Exception caught while	INCLUDing ['
   7776		  69 6F	6E 20 63 61 75+
   7777		  67 68	74 20 77 68 69+
   7778		  6C 65	20 49 4E 43 4C+
   7779		  55 44	69 6E 67 20 5B
1  7780	0000282C			 @@03B7:
   7781								 CW	 $SF
1  7782	0000282C  20000312					 DD	 $SF + DESIRED_BASE_EQU
   7783								 CW	 $FETCH
1  7784	00002830  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
   7785								 CW	 $#SF
1  7786	00002834  20000301					 DD	 $#SF +	DESIRED_BASE_EQU
   7787								 CW	 $FETCH
1  7788	00002838  20001769					 DD	 $FETCH	+ DESIRED_BASE_EQU
   7789								 CW	 $TYPE
1  7790	0000283C  20001888					 DD	 $TYPE + DESIRED_BASE_EQU
   7791								 $WRITE	 <]>
2  7792	00002840  200018B7					 DD	 $PTYPE	+ DESIRED_BASE_EQU
1  7793	00002844  01 5D						 DB	 @@03B8	- $ - 1,']'
1  7794	00002846			 @@03B8:
   7795								 CW	 $2DROP
1  7796	00002846  2000110C					 DD	 $2DROP	+ DESIRED_BASE_EQU
   7797								 $CR
2  7798	0000284A  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  7799	0000284E  0000000D					 DD	 13
2  7800	00002852  2000185B					 DD	 $EMIT + DESIRED_BASE_EQU
2  7801	00002856  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  7802	0000285A  0000000A					 DD	 10
2  7803	0000285E  2000185B					 DD	 $EMIT + DESIRED_BASE_EQU
   7804								 $WRITE	 <Latest vocabulary entry: >
2  7805	00002862  200018B7					 DD	 $PTYPE	+ DESIRED_BASE_EQU
1  7806	00002866  19 4C	61 74 65 73 74+				 DB	 @@03B9	- $ - 1,'Latest	vocabulary entry: '
   7807		  20 76	6F 63 61 62 75+
   7808		  6C 61	72 79 20 65 6E+
   7809		  74 72	79 3A 20
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 138
meta.asm



1  7810	00002880			 @@03B9:
   7811								 CW	 $LATEST_FETCH
1  7812	00002880  20000E5C					 DD	 $LATEST_FETCH + DESIRED_BASE_EQU
   7813								 CW	 $1ADD
1  7814	00002884  200013EB					 DD	 $1ADD + DESIRED_BASE_EQU
   7815								 CW	 $COUNT
1  7816	00002888  20001FF6					 DD	 $COUNT	+ DESIRED_BASE_EQU
   7817								 CW	 $TYPE
1  7818	0000288C  20001888					 DD	 $TYPE + DESIRED_BASE_EQU
   7819								 $CR
2  7820	00002890  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  7821	00002894  0000000D					 DD	 13
2  7822	00002898  2000185B					 DD	 $EMIT + DESIRED_BASE_EQU
2  7823	0000289C  20000072					 DD	 $LIT +	DESIRED_BASE_EQU
2  7824	000028A0  0000000A					 DD	 10
2  7825	000028A4  2000185B					 DD	 $EMIT + DESIRED_BASE_EQU
   7826	000028A8			 DO_FORTH_NO_EXCEPTIONS:
   7827								 CW	 $PBYE
1  7828	000028A8  2000276A					 DD	 $PBYE + DESIRED_BASE_EQU
   7829								 CW	 $EXIT
1  7830	000028AC  20001EA6					 DD	 $EXIT + DESIRED_BASE_EQU
   7831
   7832		  =MAIN:200027B2	 LATEST_WORD		 = VOC_LINK
   7833	000028B0			 HERE:
   7834
   7835	000028B0						 ENDS	 MAIN
   7836								 END	 START
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 139
Symbol Table




Symbol Name			  Type	 Value

#EVAL_VAR			  Number 0030
#LINE_VAR			  Number 0040
#SF_VAR				  Near32 MAIN:0305
#TIB_VAR			  Number 00C4
$#EVAL				  Far32	 MAIN:01F0
$#LINE				  Far32	 MAIN:023B
$#SF				  Far32	 MAIN:0301
$#TIB				  Far32	 MAIN:01C9
$1ADD				  Far32	 MAIN:13EB
$1SUB				  Far32	 MAIN:1400
$2DIV				  Far32	 MAIN:142B
$2DROP				  Far32	 MAIN:110C
$2DUP				  Far32	 MAIN:1122
$2FETCH				  Far32	 MAIN:1796
$2LIT				  Far32	 MAIN:0088
$2LITERAL			  Far32	 MAIN:2015
$2MUL				  Far32	 MAIN:1415
$2OVER				  Far32	 MAIN:1140
$2RFETCH			  Far32	 MAIN:131A
$2RFROM				  Far32	 MAIN:12F9
$2STORE				  Far32	 MAIN:177E
$2SWAP				  Far32	 MAIN:115F
$2TOR				  Far32	 MAIN:12D8
$ABS				  Far32	 MAIN:1442
$ACCEPT				  Far32	 MAIN:182D
$ADD				  Far32	 MAIN:13BE
$ALLOT				  Far32	 MAIN:1E6B
$AND				  Far32	 MAIN:1518
$AT_XY				  Far32	 MAIN:270F
$BASE				  Far32	 MAIN:0384
$BL				  Far32	 MAIN:0395
$BLK				  Far32	 MAIN:1B17
$BLOCK				  Far32	 MAIN:1B75
$BRANCH				  Far32	 MAIN:005C
$CASE_SENSITIVE			  Far32	 MAIN:01A4
$CATCH				  Far32	 MAIN:228A
$CCOMMA				  Far32	 MAIN:1E84
$CELLADD			  Far32	 MAIN:17DF
$CELLS				  Far32	 MAIN:17F9
$CFETCH				  Far32	 MAIN:17C4
$CHARADD			  Far32	 MAIN:1814
$CHECK_DUPLICATE_NAME		  Far32	 MAIN:0F38
$CHECK_HEADERC			  Far32	 MAIN:108A
$CHECK_NAME			  Far32	 MAIN:0E9D
$CLOSE_FILE			  Far32	 MAIN:2397
$CMOVE				  Far32	 MAIN:1F4F
$CMOVEGR			  Far32	 MAIN:1F87
$COMMA				  Far32	 MAIN:1E2B
$COMPARE			  Far32	 MAIN:1FC7
$COMPILEC			  Far32	 MAIN:1E53
$COMP_TICK			  Far32	 MAIN:0982
$CONSTANT			  Far32	 MAIN:1EDE
$COUNT				  Far32	 MAIN:1FF6
$CREATE_FILE			  Far32	 MAIN:23E5
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 140
Symbol Table



$CREATE_REPORT			  Far32	 MAIN:0E01
$CREATE_WOD			  Far32	 MAIN:0E28
$CSTORE				  Far32	 MAIN:17AE
$CURRENT			  Far32	 MAIN:02EF
$CURRENT_FILE_POSITION		  Far32	 MAIN:0214
$D2DIV				  Far32	 MAIN:2092
$D2MUL				  Far32	 MAIN:2077
$DABS				  Far32	 MAIN:20AE
$DADD				  Far32	 MAIN:203E
$DIGITS				  Far32	 MAIN:223A
$DMAX				  Far32	 MAIN:20D4
$DMIN				  Far32	 MAIN:20FA
$DNEGATE			  Far32	 MAIN:2123
$DOCONST			  Far32	 MAIN:010E
$DODEFER			  Far32	 MAIN:014A
$DOUSER				  Far32	 MAIN:012A
$DOVAR				  Far32	 MAIN:00AD
$DO_2LIT			  Far32	 MAIN:0CE0
$DO_COMP_DEFINED		  Far32	 MAIN:0AED
$DO_DEFINED			  Far32	 MAIN:0B22
$DO_FORTH			  Far32	 MAIN:27C1
$DO_INT_DEFINED			  Far32	 MAIN:0A93
$DO_LIT				  Far32	 MAIN:0C46
$DP				  Far32	 MAIN:035D
$DROP				  Far32	 MAIN:117B
$DSUB				  Far32	 MAIN:205A
$DUP				  Far32	 MAIN:118F
$EMIT				  Far32	 MAIN:185B
$ENTER				  Far32	 MAIN:00C7
$EQ				  Far32	 MAIN:1640
$EVAL				  Far32	 MAIN:01DC
$EXCEPTION_HANDLER		  Far32	 MAIN:0277
$EXECUTE			  Far32	 MAIN:1A9D
$EXIT				  Far32	 MAIN:1EA6
$FALSE				  Far32	 MAIN:15D3
$FETCH				  Far32	 MAIN:1769
$FILE_POSITION			  Far32	 MAIN:2436
$FIND				  Far32	 MAIN:1A20
$FIND_FORTH			  Far32	 MAIN:19D1
$FORTH_WORDLIST			  Far32	 MAIN:18F0
$FREE_LIBRARY			  Far32	 MAIN:0816
$FROMNAME			  Far32	 MAIN:219B
$GR				  Far32	 MAIN:161E
$HEADERC			  Far32	 MAIN:1066
$HERE				  Far32	 MAIN:1F33
$I				  Far32	 MAIN:1A57
$ILC2L				  Far32	 MAIN:0C76
$ILCL				  Far32	 MAIN:0BE5
$ILCS				  Far32	 MAIN:0B5E
$INCLUDED			  Far32	 MAIN:260A
$INCLUDE_FILE			  Far32	 MAIN:2635
$INIT_USER			  Far32	 MAIN:03DE
$INPUTFROMR			  Far32	 MAIN:0727
$INPUTTOR			  Far32	 MAIN:06DD
$INTERPRET			  Far32	 MAIN:0DB9
$INTERPRET_LITERAL		  Far32	 MAIN:0D14
$INTERPRET_WORD			  Far32	 MAIN:0D69
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 141
Symbol Table



$INT_COMP_TO_COMP		  Far32	 MAIN:0962
$INT_COMP_TO_INT		  Far32	 MAIN:093E
$INVERT				  Far32	 MAIN:1533
$IS_INT_COMPQ			  Far32	 MAIN:0913
$ITICK				  Far32	 MAIN:1A82
$J				  Far32	 MAIN:1A6C
$LATEST_FETCH			  Far32	 MAIN:0E5C
$LATEST_STORE			  Far32	 MAIN:0E7B
$LE				  Far32	 MAIN:15FC
$LEAVE				  Far32	 MAIN:1A34
$LINE				  Far32	 MAIN:0227
$LIT				  Far32	 MAIN:0072
$LITERAL			  Far32	 MAIN:1F10
$LOAD_LIBRARY			  Far32	 MAIN:07E1
$LSHIFT				  Far32	 MAIN:1460
$MADD				  Far32	 MAIN:2143
$MAIN				  Far32	 MAIN:03A8
$MAX_NAME_LENGTH		  Far32	 MAIN:0E46
$MMUL				  Far32	 MAIN:1492
$MUL				  Far32	 MAIN:13A8
$NEGATE				  Far32	 MAIN:14AE
$NIP				  Far32	 MAIN:11A6
$NOEQ				  Far32	 MAIN:1663
$OPEN_FILE			  Far32	 MAIN:2484
$OR				  Far32	 MAIN:1549
$OVER				  Far32	 MAIN:11BD
$PADDLOOP			  Far32	 MAIN:04E9
$PARSE				  Far32	 MAIN:1D04
$PARSE_CHECK_HEADERC		  Far32	 MAIN:10C4
$PBYE				  Far32	 MAIN:276A
$PCFA_C				  Far32	 MAIN:1020
$PDO				  Far32	 MAIN:044A
$PDO_INT_COMP			  Far32	 MAIN:0169
$PHEADERC			  Far32	 MAIN:0FA3
$PICK				  Far32	 MAIN:1207
$PLOOP				  Far32	 MAIN:04AA
$POCKET				  Far32	 MAIN:02D9
$POSTPONE			  Far32	 MAIN:0A2D
$POSTPONEC			  Far32	 MAIN:0A0A
$PPARSE				  Far32	 MAIN:1CCA
$PQDO				  Far32	 MAIN:0474
$PSQUOTE			  Far32	 MAIN:1D3F
$PTHROW				  Far32	 MAIN:22DC
$PTYPE				  Far32	 MAIN:18B7
$PWORD				  Far32	 MAIN:1C0F
$QBRANCH			  Far32	 MAIN:003E
$QDUP				  Far32	 MAIN:10EF
$READ_FILE			  Far32	 MAIN:24D1
$READ_LINE			  Far32	 MAIN:25BD
$REFILL				  Far32	 MAIN:0607
$REPORT_NAME			  Far32	 MAIN:0EF7
$REPOSITION_FILE		  Far32	 MAIN:2524
$RESIZE_FILE			  Far32	 MAIN:26C7
$RFETCH				  Far32	 MAIN:12C1
$RFROM				  Far32	 MAIN:12A8
$ROT				  Far32	 MAIN:11D5
$RP0				  Far32	 MAIN:1367
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 142
Symbol Table



$RPFETCH			  Far32	 MAIN:1382
$RPSTORE			  Far32	 MAIN:1396
$RSHIFT				  Far32	 MAIN:147B
$R_O				  Far32	 MAIN:235A
$R_PICK				  Far32	 MAIN:1338
$R_W				  Far32	 MAIN:237E
$SEARCH_WORDLIST		  Far32	 MAIN:1916
$SF				  Far32	 MAIN:0312
$SMDIVREM			  Far32	 MAIN:14C8
$SMUDGE				  Far32	 MAIN:040D
$SOURCE				  Far32	 MAIN:0572
$SOURCE_ID			  Far32	 MAIN:053C
$SOURCE_ID_STORE		  Far32	 MAIN:0559
$SP0				  Far32	 MAIN:124E
$SPFETCH			  Far32	 MAIN:1264
$SPSTORE			  Far32	 MAIN:127A
$SQUOTE				  Far32	 MAIN:1DFB
$SQUOTE_BUFFER			  Far32	 MAIN:02C4
$SQ_COMP			  Far32	 MAIN:1D79
$SQ_INT				  Far32	 MAIN:1DC2
$STATE				  Far32	 MAIN:0371
$STOD				  Far32	 MAIN:2271
$STORE				  Far32	 MAIN:1754
$SUB				  Far32	 MAIN:13D4
$SWAP				  Far32	 MAIN:11EF
$THREAD				  Far32	 MAIN:08DC
$THREAD_EXIT			  Far32	 MAIN:0884
$THROW				  Far32	 MAIN:2320
$THROW_ADDRESS			  Far32	 MAIN:0293
$THROW_WORD			  Far32	 MAIN:02AC
$TIB				  Far32	 MAIN:01B6
$TOBODY				  Far32	 MAIN:2162
$TOGGLE				  Far32	 MAIN:0432
$TOIN				  Far32	 MAIN:1BFA
$TONAME				  Far32	 MAIN:217A
$TONUMBER			  Far32	 MAIN:21BD
$TONUMBER_SIGNED		  Far32	 MAIN:0A76
$TOR				  Far32	 MAIN:128F
$TRUE				  Far32	 MAIN:15E9
$TUCK				  Far32	 MAIN:1220
$TYPE				  Far32	 MAIN:1888
$UDDIV				  Far32	 MAIN:1579
$UGR				  Far32	 MAIN:1732
$ULE				  Far32	 MAIN:170F
$UMDIVMOD			  Far32	 MAIN:14FE
$UMMUL				  Far32	 MAIN:14E2
$WORD				  Far32	 MAIN:1C88
$WRITE_FILE			  Far32	 MAIN:2571
$W_O				  Far32	 MAIN:236C
$XOR				  Far32	 MAIN:1561
$ZERO				  Far32	 MAIN:0187
$ZEROEQ				  Far32	 MAIN:16A8
$ZEROGR				  Far32	 MAIN:16ED
$ZEROLE				  Far32	 MAIN:1686
$ZERONOEQ			  Far32	 MAIN:16CB
??0000				  Near32 MAIN:0030
??0001				  Near32 MAIN:0039
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 143
Symbol Table



??0003				  Near32 MAIN:0042
??0004				  Near32 MAIN:004F
??0005				  Near32 MAIN:0057
??0007				  Near32 MAIN:0060
??0008				  Near32 MAIN:0068
??0009				  Near32 MAIN:006D
??000B				  Near32 MAIN:0076
??000C				  Near32 MAIN:007D
??000D				  Near32 MAIN:0083
??000F				  Near32 MAIN:008C
??0010				  Near32 MAIN:0095
??0011				  Near32 MAIN:00A4
??0013				  Near32 MAIN:00AD
??0014				  Near32 MAIN:00B6
??0015				  Near32 MAIN:00BE
??0017				  Near32 MAIN:00C7
??0018				  Near32 MAIN:00D7
??0019				  Near32 MAIN:00E4
??001B				  Near32 MAIN:00ED
??001C				  Near32 MAIN:00F6
??001D				  Near32 MAIN:0105
??001F				  Near32 MAIN:010E
??0020				  Near32 MAIN:0116
??0021				  Near32 MAIN:0121
??0023				  Near32 MAIN:012A
??0024				  Near32 MAIN:0135
??0025				  Near32 MAIN:0141
??0027				  Near32 MAIN:014A
??0028				  Near32 MAIN:0151
??0029				  Near32 MAIN:0160
??002B				  Near32 MAIN:0169
??002C				  Near32 MAIN:017F
??002D				  Near32 MAIN:0182
??002F				  Near32 MAIN:018B
??0030				  Near32 MAIN:018F
??0031				  Near32 MAIN:019F
??0033				  Near32 MAIN:01A8
??0034				  Near32 MAIN:01AC
??0035				  Near32 MAIN:01B1
??0037				  Near32 MAIN:01BA
??0038				  Near32 MAIN:01BE
??0039				  Near32 MAIN:01C4
??003B				  Near32 MAIN:01CD
??003C				  Near32 MAIN:01D1
??003D				  Near32 MAIN:01D7
??003F				  Near32 MAIN:01E0
??0040				  Near32 MAIN:01E4
??0041				  Near32 MAIN:01EB
??0043				  Near32 MAIN:01F4
??0044				  Near32 MAIN:01F8
??0045				  Near32 MAIN:020F
??0047				  Near32 MAIN:0218
??0048				  Near32 MAIN:021C
??0049				  Near32 MAIN:0222
??004B				  Near32 MAIN:022B
??004C				  Near32 MAIN:022F
??004D				  Near32 MAIN:0236
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 144
Symbol Table



??004F				  Near32 MAIN:023F
??0050				  Near32 MAIN:0243
??0051				  Near32 MAIN:0252
??0053				  Near32 MAIN:025B
??0054				  Near32 MAIN:025F
??0055				  Near32 MAIN:0272
??0057				  Near32 MAIN:027B
??0058				  Near32 MAIN:027F
??0059				  Near32 MAIN:028E
??005B				  Near32 MAIN:0297
??005C				  Near32 MAIN:029B
??005D				  Near32 MAIN:02A7
??005F				  Near32 MAIN:02B0
??0060				  Near32 MAIN:02B4
??0061				  Near32 MAIN:02BF
??0063				  Near32 MAIN:02C8
??0064				  Near32 MAIN:02CC
??0065				  Near32 MAIN:02D4
??0067				  Near32 MAIN:02DD
??0068				  Near32 MAIN:02E1
??0069				  Near32 MAIN:02EA
??006B				  Near32 MAIN:02F3
??006C				  Near32 MAIN:02F7
??006D				  Near32 MAIN:02FC
??006F				  Near32 MAIN:0305
??0070				  Near32 MAIN:0309
??0071				  Near32 MAIN:030D
??0073				  Near32 MAIN:0316
??0074				  Near32 MAIN:031A
??0075				  Near32 MAIN:032A
??0077				  Near32 MAIN:0333
??0078				  Near32 MAIN:0337
??0079				  Near32 MAIN:0347
??007B				  Near32 MAIN:0350
??007C				  Near32 MAIN:0354
??007D				  Near32 MAIN:0358
??007F				  Near32 MAIN:0361
??0080				  Near32 MAIN:0365
??0081				  Near32 MAIN:036C
??0083				  Near32 MAIN:0375
??0084				  Near32 MAIN:0379
??0085				  Near32 MAIN:037F
??0087				  Near32 MAIN:0388
??0088				  Near32 MAIN:038C
??0089				  Near32 MAIN:0390
??008B				  Near32 MAIN:0399
??008C				  Near32 MAIN:039D
??008D				  Near32 MAIN:03A3
??008F				  Near32 MAIN:03AC
??0090				  Near32 MAIN:03B0
??0091				  Near32 MAIN:03C1
??0093				  Near32 MAIN:03CA
??0094				  Near32 MAIN:03CE
??0095				  Near32 MAIN:03D9
??0097				  Near32 MAIN:03E2
??0098				  Near32 MAIN:0400
??0099				  Near32 MAIN:0408
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 145
Symbol Table



??009B				  Near32 MAIN:0411
??009C				  Near32 MAIN:0425
??009D				  Near32 MAIN:042D
??009F				  Near32 MAIN:0436
??00A0				  Near32 MAIN:043F
??00A1				  Near32 MAIN:0445
??00A3				  Near32 MAIN:044E
??00A4				  Near32 MAIN:0468
??00A5				  Near32 MAIN:046F
??00A7				  Near32 MAIN:0478
??00A8				  Near32 MAIN:049D
??00A9				  Near32 MAIN:04A5
??00AB				  Near32 MAIN:04AE
??00AC				  Near32 MAIN:04DB
??00AD				  Near32 MAIN:04E4
??00AF				  Near32 MAIN:04ED
??00B0				  Near32 MAIN:052C
??00B1				  Near32 MAIN:0537
??00B3				  Near32 MAIN:0540
??00B4				  Near32 MAIN:0548
??00B5				  Near32 MAIN:0554
??00B7				  Near32 MAIN:055D
??00B8				  Near32 MAIN:0565
??00B9				  Near32 MAIN:056D
??00BB				  Near32 MAIN:0576
??00BC				  Near32 MAIN:05FA
??00BD				  Near32 MAIN:0602
??00BF				  Near32 MAIN:060B
??00C0				  Near32 MAIN:06CF
??00C1				  Near32 MAIN:06D8
??00C3				  Near32 MAIN:06E1
??00C4				  Near32 MAIN:0719
??00C5				  Near32 MAIN:0722
??00C7				  Near32 MAIN:072B
??00C8				  Near32 MAIN:0797
??00C9				  Near32 MAIN:07A5
??00CB				  Near32 MAIN:07AE
??00CC				  Near32 MAIN:07CD
??00CD				  Near32 MAIN:07DC
??00CF				  Near32 MAIN:07E5
??00D0				  Near32 MAIN:0804
??00D1				  Near32 MAIN:0811
??00D3				  Near32 MAIN:081A
??00D4				  Near32 MAIN:0838
??00D5				  Near32 MAIN:084A
??00D7				  Near32 MAIN:0853
??00D8				  Near32 MAIN:0872
??00D9				  Near32 MAIN:087F
??00DB				  Near32 MAIN:0888
??00DC				  Near32 MAIN:08CF
??00DD				  Near32 MAIN:08D7
??00DF				  Near32 MAIN:08E0
??00E0				  Near32 MAIN:0900
??00E1				  Near32 MAIN:090E
??00E3				  Near32 MAIN:0917
??00E4				  Near32 MAIN:092B
??00E5				  Near32 MAIN:0939
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 146
Symbol Table



??00E7				  Near32 MAIN:0942
??00E8				  Near32 MAIN:094E
??00E9				  Near32 MAIN:095D
??00EB				  Near32 MAIN:0966
??00EC				  Near32 MAIN:0976
??00ED				  Near32 MAIN:097D
??00EF				  Near32 MAIN:0986
??00F0				  Near32 MAIN:09FA
??00F1				  Near32 MAIN:0A05
??00F3				  Near32 MAIN:0A0E
??00F4				  Near32 MAIN:0A1E
??00F5				  Near32 MAIN:0A28
??00F7				  Near32 MAIN:0A31
??00F8				  Near32 MAIN:0A3D
??00F9				  Near32 MAIN:0A48
??00FB				  Near32 MAIN:0A51
??00FC				  Near32 MAIN:0A61
??00FD				  Near32 MAIN:0A71
??00FF				  Near32 MAIN:0A7A
??0100				  Near32 MAIN:0A7E
??0101				  Near32 MAIN:0A8E
??0103				  Near32 MAIN:0A97
??0104				  Near32 MAIN:0AD7
??0105				  Near32 MAIN:0AE8
??0107				  Near32 MAIN:0AF1
??0108				  Near32 MAIN:0B11
??0109				  Near32 MAIN:0B1D
??010B				  Near32 MAIN:0B26
??010C				  Near32 MAIN:0B4A
??010D				  Near32 MAIN:0B59
??010F				  Near32 MAIN:0B62
??0110				  Near32 MAIN:0BD2
??0111				  Near32 MAIN:0BE0
??0113				  Near32 MAIN:0BE9
??0114				  Near32 MAIN:0C39
??0115				  Near32 MAIN:0C41
??0117				  Near32 MAIN:0C4A
??0118				  Near32 MAIN:0C62
??0119				  Near32 MAIN:0C71
??011B				  Near32 MAIN:0C7A
??011C				  Near32 MAIN:0CD2
??011D				  Near32 MAIN:0CDB
??011F				  Near32 MAIN:0CE4
??0120				  Near32 MAIN:0CFC
??0121				  Near32 MAIN:0D0F
??0123				  Near32 MAIN:0D18
??0124				  Near32 MAIN:0D54
??0125				  Near32 MAIN:0D64
??0127				  Near32 MAIN:0D6D
??0128				  Near32 MAIN:0DA9
??0129				  Near32 MAIN:0DB4
??012B				  Near32 MAIN:0DBD
??012C				  Near32 MAIN:0DED
??012D				  Near32 MAIN:0DFC
??012F				  Near32 MAIN:0E05
??0130				  Near32 MAIN:0E09
??0131				  Near32 MAIN:0E23
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 147
Symbol Table



??0133				  Near32 MAIN:0E2C
??0134				  Near32 MAIN:0E30
??0135				  Near32 MAIN:0E41
??0137				  Near32 MAIN:0E4A
??0138				  Near32 MAIN:0E4E
??0139				  Near32 MAIN:0E57
??013B				  Near32 MAIN:0E60
??013C				  Near32 MAIN:0E6D
??013D				  Near32 MAIN:0E76
??013F				  Near32 MAIN:0E7F
??0140				  Near32 MAIN:0E8C
??0141				  Near32 MAIN:0E98
??0143				  Near32 MAIN:0EA1
??0144				  Near32 MAIN:0EE5
??0145				  Near32 MAIN:0EF2
??0147				  Near32 MAIN:0EFB
??0149				  Near32 MAIN:0F1D
??014A				  Near32 MAIN:0F33
??014C				  Near32 MAIN:0F3C
??014F				  Near32 MAIN:0F93
??0150				  Near32 MAIN:0F9E
??0152				  Near32 MAIN:0FA7
??0153				  Near32 MAIN:1013
??0154				  Near32 MAIN:101B
??0156				  Near32 MAIN:1024
??0157				  Near32 MAIN:1058
??0158				  Near32 MAIN:1061
??015A				  Near32 MAIN:106A
??015B				  Near32 MAIN:1076
??015C				  Near32 MAIN:1085
??015E				  Near32 MAIN:108E
??015F				  Near32 MAIN:10AA
??0160				  Near32 MAIN:10BF
??0162				  Near32 MAIN:10C8
??0163				  Near32 MAIN:10E4
??0164				  Near32 MAIN:10EA
??0166				  Near32 MAIN:10F3
??0167				  Near32 MAIN:1100
??0168				  Near32 MAIN:1107
??016A				  Near32 MAIN:1110
??016B				  Near32 MAIN:1117
??016C				  Near32 MAIN:111D
??016E				  Near32 MAIN:1126
??016F				  Near32 MAIN:1134
??0170				  Near32 MAIN:113B
??0172				  Near32 MAIN:1144
??0173				  Near32 MAIN:1153
??0174				  Near32 MAIN:115A
??0176				  Near32 MAIN:1163
??0177				  Near32 MAIN:1170
??0178				  Near32 MAIN:1176
??017A				  Near32 MAIN:117F
??017B				  Near32 MAIN:1185
??017C				  Near32 MAIN:118A
??017E				  Near32 MAIN:1193
??017F				  Near32 MAIN:119C
??0180				  Near32 MAIN:11A1
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 148
Symbol Table



??0182				  Near32 MAIN:11AA
??0183				  Near32 MAIN:11B2
??0184				  Near32 MAIN:11B8
??0186				  Near32 MAIN:11C1
??0187				  Near32 MAIN:11CB
??0188				  Near32 MAIN:11D0
??018A				  Near32 MAIN:11D9
??018B				  Near32 MAIN:11E4
??018C				  Near32 MAIN:11EA
??018E				  Near32 MAIN:11F3
??018F				  Near32 MAIN:11FC
??0190				  Near32 MAIN:1202
??0192				  Near32 MAIN:120B
??0193				  Near32 MAIN:1215
??0194				  Near32 MAIN:121B
??0196				  Near32 MAIN:1224
??0197				  Near32 MAIN:122E
??0198				  Near32 MAIN:1237
??019A				  Near32 MAIN:1240
??019B				  Near32 MAIN:1244
??019C				  Near32 MAIN:1249
??019E				  Near32 MAIN:1252
??019F				  Near32 MAIN:125A
??01A0				  Near32 MAIN:125F
??01A2				  Near32 MAIN:1268
??01A3				  Near32 MAIN:1270
??01A4				  Near32 MAIN:1275
??01A6				  Near32 MAIN:127E
??01A7				  Near32 MAIN:1286
??01A8				  Near32 MAIN:128A
??01AA				  Near32 MAIN:1293
??01AB				  Near32 MAIN:129F
??01AC				  Near32 MAIN:12A3
??01AE				  Near32 MAIN:12AC
??01AF				  Near32 MAIN:12B8
??01B0				  Near32 MAIN:12BC
??01B2				  Near32 MAIN:12C5
??01B3				  Near32 MAIN:12CE
??01B4				  Near32 MAIN:12D3
??01B6				  Near32 MAIN:12DC
??01B7				  Near32 MAIN:12EF
??01B8				  Near32 MAIN:12F4
??01BA				  Near32 MAIN:12FD
??01BB				  Near32 MAIN:1310
??01BC				  Near32 MAIN:1315
??01BE				  Near32 MAIN:131E
??01BF				  Near32 MAIN:132B
??01C0				  Near32 MAIN:1333
??01C2				  Near32 MAIN:133C
??01C3				  Near32 MAIN:1347
??01C4				  Near32 MAIN:1350
??01C6				  Near32 MAIN:1359
??01C7				  Near32 MAIN:135D
??01C8				  Near32 MAIN:1362
??01CA				  Near32 MAIN:136B
??01CB				  Near32 MAIN:1378
??01CC				  Near32 MAIN:137D
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 149
Symbol Table



??01CE				  Near32 MAIN:1386
??01CF				  Near32 MAIN:138C
??01D0				  Near32 MAIN:1391
??01D2				  Near32 MAIN:139A
??01D3				  Near32 MAIN:13A0
??01D4				  Near32 MAIN:13A3
??01D6				  Near32 MAIN:13AC
??01D7				  Near32 MAIN:13B6
??01D8				  Near32 MAIN:13B9
??01DA				  Near32 MAIN:13C2
??01DB				  Near32 MAIN:13CC
??01DC				  Near32 MAIN:13CF
??01DE				  Near32 MAIN:13D8
??01DF				  Near32 MAIN:13E2
??01E0				  Near32 MAIN:13E6
??01E2				  Near32 MAIN:13EF
??01E3				  Near32 MAIN:13F7
??01E4				  Near32 MAIN:13FB
??01E6				  Near32 MAIN:1404
??01E7				  Near32 MAIN:140C
??01E8				  Near32 MAIN:1410
??01EA				  Near32 MAIN:1419
??01EB				  Near32 MAIN:1422
??01EC				  Near32 MAIN:1426
??01EE				  Near32 MAIN:142F
??01EF				  Near32 MAIN:1438
??01F0				  Near32 MAIN:143D
??01F2				  Near32 MAIN:1446
??01F3				  Near32 MAIN:1453
??01F4				  Near32 MAIN:145B
??01F6				  Near32 MAIN:1464
??01F7				  Near32 MAIN:146E
??01F8				  Near32 MAIN:1476
??01FA				  Near32 MAIN:147F
??01FB				  Near32 MAIN:1489
??01FC				  Near32 MAIN:148D
??01FE				  Near32 MAIN:1496
??01FF				  Near32 MAIN:14A1
??0200				  Near32 MAIN:14A9
??0202				  Near32 MAIN:14B2
??0203				  Near32 MAIN:14BB
??0204				  Near32 MAIN:14C3
??0206				  Near32 MAIN:14CC
??0207				  Near32 MAIN:14D8
??0208				  Near32 MAIN:14DD
??020A				  Near32 MAIN:14E6
??020B				  Near32 MAIN:14F1
??020C				  Near32 MAIN:14F9
??020E				  Near32 MAIN:1502
??020F				  Near32 MAIN:150E
??0210				  Near32 MAIN:1513
??0212				  Near32 MAIN:151C
??0213				  Near32 MAIN:1526
??0214				  Near32 MAIN:152E
??0216				  Near32 MAIN:1537
??0217				  Near32 MAIN:1540
??0218				  Near32 MAIN:1544
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 150
Symbol Table



??021A				  Near32 MAIN:154D
??021B				  Near32 MAIN:1557
??021C				  Near32 MAIN:155C
??021E				  Near32 MAIN:1565
??021F				  Near32 MAIN:156F
??0220				  Near32 MAIN:1574
??0222				  Near32 MAIN:157D
??0223				  Near32 MAIN:15C7
??0224				  Near32 MAIN:15CE
??0226				  Near32 MAIN:15D7
??0227				  Near32 MAIN:15DE
??0228				  Near32 MAIN:15E4
??022A				  Near32 MAIN:15ED
??022B				  Near32 MAIN:15F4
??022C				  Near32 MAIN:15F7
??022E				  Near32 MAIN:1600
??022F				  Near32 MAIN:1616
??0230				  Near32 MAIN:1619
??0232				  Near32 MAIN:1622
??0233				  Near32 MAIN:1638
??0234				  Near32 MAIN:163B
??0236				  Near32 MAIN:1644
??0237				  Near32 MAIN:165A
??0238				  Near32 MAIN:165E
??023A				  Near32 MAIN:1667
??023B				  Near32 MAIN:167D
??023C				  Near32 MAIN:1681
??023E				  Near32 MAIN:168A
??023F				  Near32 MAIN:169F
??0240				  Near32 MAIN:16A3
??0242				  Near32 MAIN:16AC
??0243				  Near32 MAIN:16C1
??0244				  Near32 MAIN:16C6
??0246				  Near32 MAIN:16CF
??0247				  Near32 MAIN:16E4
??0248				  Near32 MAIN:16E8
??024A				  Near32 MAIN:16F1
??024B				  Near32 MAIN:1706
??024C				  Near32 MAIN:170A
??024E				  Near32 MAIN:1713
??024F				  Near32 MAIN:1729
??0250				  Near32 MAIN:172D
??0252				  Near32 MAIN:1736
??0253				  Near32 MAIN:174C
??0254				  Near32 MAIN:174F
??0256				  Near32 MAIN:1758
??0257				  Near32 MAIN:1761
??0258				  Near32 MAIN:1764
??025A				  Near32 MAIN:176D
??025B				  Near32 MAIN:1775
??025C				  Near32 MAIN:1779
??025E				  Near32 MAIN:1782
??025F				  Near32 MAIN:178D
??0260				  Near32 MAIN:1791
??0262				  Near32 MAIN:179A
??0263				  Near32 MAIN:17A5
??0264				  Near32 MAIN:17A9
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 151
Symbol Table



??0266				  Near32 MAIN:17B2
??0267				  Near32 MAIN:17BB
??0268				  Near32 MAIN:17BF
??026A				  Near32 MAIN:17C8
??026B				  Near32 MAIN:17D3
??026C				  Near32 MAIN:17DA
??026E				  Near32 MAIN:17E3
??026F				  Near32 MAIN:17ED
??0270				  Near32 MAIN:17F4
??0272				  Near32 MAIN:17FD
??0273				  Near32 MAIN:1808
??0274				  Near32 MAIN:180F
??0276				  Near32 MAIN:1818
??0277				  Near32 MAIN:1820
??0278				  Near32 MAIN:1828
??027A				  Near32 MAIN:1831
??027B				  Near32 MAIN:1850
??027C				  Near32 MAIN:1856
??027E				  Near32 MAIN:185F
??027F				  Near32 MAIN:187D
??0280				  Near32 MAIN:1883
??0282				  Near32 MAIN:188C
??0283				  Near32 MAIN:18AA
??0284				  Near32 MAIN:18B2
??0286				  Near32 MAIN:18BB
??0287				  Near32 MAIN:18DB
??0288				  Near32 MAIN:18EB
??028A				  Near32 MAIN:18F4
??028B				  Near32 MAIN:1900
??028C				  Near32 MAIN:1911
??028E				  Near32 MAIN:191A
??028F				  Near32 MAIN:19C0
??0290				  Near32 MAIN:19CC
??0292				  Near32 MAIN:19D5
??0293				  Near32 MAIN:1A15
??0294				  Near32 MAIN:1A1B
??0296				  Near32 MAIN:1A24
??0297				  Near32 MAIN:1A28
??0298				  Near32 MAIN:1A2F
??029A				  Near32 MAIN:1A38
??029B				  Near32 MAIN:1A4F
??029C				  Near32 MAIN:1A52
??029E				  Near32 MAIN:1A5B
??029F				  Near32 MAIN:1A64
??02A0				  Near32 MAIN:1A67
??02A2				  Near32 MAIN:1A70
??02A3				  Near32 MAIN:1A79
??02A4				  Near32 MAIN:1A7D
??02A6				  Near32 MAIN:1A86
??02A7				  Near32 MAIN:1A8F
??02A8				  Near32 MAIN:1A98
??02AA				  Near32 MAIN:1AA1
??02AB				  Near32 MAIN:1AA6
??02AC				  Near32 MAIN:1AB2
??02AE				  Near32 MAIN:1ABB
??02AF				  Near32 MAIN:1AD9
??02B0				  Near32 MAIN:1AE6
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 152
Symbol Table



??02B2				  Near32 MAIN:1AEF
??02B3				  Near32 MAIN:1B0D
??02B4				  Near32 MAIN:1B12
??02B6				  Near32 MAIN:1B1B
??02B7				  Near32 MAIN:1B1F
??02B8				  Near32 MAIN:1B27
??02BA				  Near32 MAIN:1B30
??02BB				  Near32 MAIN:1B34
??02BC				  Near32 MAIN:1B43
??02BE				  Near32 MAIN:1B4C
??02BF				  Near32 MAIN:1B50
??02C0				  Near32 MAIN:1B5C
??02C2				  Near32 MAIN:1B65
??02C3				  Near32 MAIN:1B69
??02C4				  Near32 MAIN:1B70
??02C6				  Near32 MAIN:1B79
??02C7				  Near32 MAIN:1BF0
??02C8				  Near32 MAIN:1BF5
??02CA				  Near32 MAIN:1BFE
??02CB				  Near32 MAIN:1C02
??02CC				  Near32 MAIN:1C0A
??02CE				  Near32 MAIN:1C13
??02CF				  Near32 MAIN:1C7D
??02D0				  Near32 MAIN:1C83
??02D2				  Near32 MAIN:1C8C
??02D3				  Near32 MAIN:1CBC
??02D4				  Near32 MAIN:1CC5
??02D6				  Near32 MAIN:1CCE
??02D7				  Near32 MAIN:1CF8
??02D8				  Near32 MAIN:1CFF
??02DA				  Near32 MAIN:1D08
??02DB				  Near32 MAIN:1D34
??02DC				  Near32 MAIN:1D3A
??02DE				  Near32 MAIN:1D43
??02DF				  Near32 MAIN:1D6B
??02E0				  Near32 MAIN:1D74
??02E2				  Near32 MAIN:1D7D
??02E3				  Near32 MAIN:1DB5
??02E4				  Near32 MAIN:1DBD
??02E6				  Near32 MAIN:1DC6
??02E7				  Near32 MAIN:1DF2
??02E8				  Near32 MAIN:1DF6
??02EA				  Near32 MAIN:1DFF
??02EB				  Near32 MAIN:1E07
??02EC				  Near32 MAIN:1E0A
??02EE				  Near32 MAIN:1E13
??02EF				  Near32 MAIN:1E23
??02F0				  Near32 MAIN:1E26
??02F2				  Near32 MAIN:1E2F
??02F3				  Near32 MAIN:1E44
??02F4				  Near32 MAIN:1E4E
??02F6				  Near32 MAIN:1E57
??02F7				  Near32 MAIN:1E5F
??02F8				  Near32 MAIN:1E66
??02FA				  Near32 MAIN:1E6F
??02FB				  Near32 MAIN:1E7B
??02FC				  Near32 MAIN:1E7F
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 153
Symbol Table



??02FE				  Near32 MAIN:1E88
??02FF				  Near32 MAIN:1E9C
??0300				  Near32 MAIN:1EA1
??0302				  Near32 MAIN:1EAA
??0303				  Near32 MAIN:1EB5
??0304				  Near32 MAIN:1EBB
??0306				  Near32 MAIN:1EC4
??0307				  Near32 MAIN:1ECF
??0308				  Near32 MAIN:1ED9
??030A				  Near32 MAIN:1EE2
??030B				  Near32 MAIN:1F02
??030C				  Near32 MAIN:1F0B
??030E				  Near32 MAIN:1F14
??030F				  Near32 MAIN:1F28
??0310				  Near32 MAIN:1F2E
??0312				  Near32 MAIN:1F37
??0313				  Near32 MAIN:1F43
??0314				  Near32 MAIN:1F4A
??0316				  Near32 MAIN:1F53
??0317				  Near32 MAIN:1F7A
??0318				  Near32 MAIN:1F82
??031A				  Near32 MAIN:1F8B
??031B				  Near32 MAIN:1FB9
??031C				  Near32 MAIN:1FC2
??031E				  Near32 MAIN:1FCB
??031F				  Near32 MAIN:1FEA
??0320				  Near32 MAIN:1FF1
??0322				  Near32 MAIN:1FFA
??0323				  Near32 MAIN:2006
??0324				  Near32 MAIN:2010
??0326				  Near32 MAIN:2019
??0327				  Near32 MAIN:2035
??0328				  Near32 MAIN:2039
??032A				  Near32 MAIN:2042
??032B				  Near32 MAIN:2051
??032C				  Near32 MAIN:2055
??032E				  Near32 MAIN:205E
??032F				  Near32 MAIN:206D
??0330				  Near32 MAIN:2072
??0332				  Near32 MAIN:207B
??0333				  Near32 MAIN:2088
??0334				  Near32 MAIN:208D
??0336				  Near32 MAIN:2096
??0337				  Near32 MAIN:20A3
??0338				  Near32 MAIN:20A9
??033A				  Near32 MAIN:20B2
??033B				  Near32 MAIN:20C9
??033C				  Near32 MAIN:20CF
??033E				  Near32 MAIN:20D8
??033F				  Near32 MAIN:20EF
??0340				  Near32 MAIN:20F5
??0342				  Near32 MAIN:20FE
??0343				  Near32 MAIN:2115
??0344				  Near32 MAIN:211E
??0346				  Near32 MAIN:2127
??0347				  Near32 MAIN:213A
??0348				  Near32 MAIN:213E
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 154
Symbol Table



??034A				  Near32 MAIN:2147
??034B				  Near32 MAIN:2156
??034C				  Near32 MAIN:215D
??034E				  Near32 MAIN:2166
??034F				  Near32 MAIN:216E
??0350				  Near32 MAIN:2175
??0352				  Near32 MAIN:217E
??0353				  Near32 MAIN:218F
??0354				  Near32 MAIN:2196
??0356				  Near32 MAIN:219F
??0357				  Near32 MAIN:21AF
??0358				  Near32 MAIN:21B8
??035A				  Near32 MAIN:21C1
??035B				  Near32 MAIN:222D
??035C				  Near32 MAIN:2235
??035E				  Near32 MAIN:223E
??035F				  Near32 MAIN:2267
??0360				  Near32 MAIN:226C
??0362				  Near32 MAIN:2275
??0363				  Near32 MAIN:227E
??0364				  Near32 MAIN:2285
??0366				  Near32 MAIN:228E
??0367				  Near32 MAIN:22CE
??0368				  Near32 MAIN:22D7
??036A				  Near32 MAIN:22E0
??036B				  Near32 MAIN:2314
??036C				  Near32 MAIN:231B
??036E				  Near32 MAIN:2324
??036F				  Near32 MAIN:2350
??0370				  Near32 MAIN:2355
??0372				  Near32 MAIN:235E
??0373				  Near32 MAIN:2362
??0374				  Near32 MAIN:2367
??0376				  Near32 MAIN:2370
??0377				  Near32 MAIN:2374
??0378				  Near32 MAIN:2379
??037A				  Near32 MAIN:2382
??037B				  Near32 MAIN:2386
??037C				  Near32 MAIN:2392
??037E				  Near32 MAIN:239B
??037F				  Near32 MAIN:23D3
??0380				  Near32 MAIN:23E0
??0382				  Near32 MAIN:23E9
??0383				  Near32 MAIN:2422
??0384				  Near32 MAIN:2431
??0386				  Near32 MAIN:243A
??0387				  Near32 MAIN:2474
??0388				  Near32 MAIN:247F
??038A				  Near32 MAIN:2488
??038B				  Near32 MAIN:24C1
??038C				  Near32 MAIN:24CC
??038E				  Near32 MAIN:24D5
??038F				  Near32 MAIN:250E
??0390				  Near32 MAIN:251F
??0392				  Near32 MAIN:2528
??0393				  Near32 MAIN:2560
??0394				  Near32 MAIN:256C
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 155
Symbol Table



??0396				  Near32 MAIN:2575
??0397				  Near32 MAIN:25AD
??0398				  Near32 MAIN:25B8
??039A				  Near32 MAIN:25C1
??039B				  Near32 MAIN:25FB
??039C				  Near32 MAIN:2605
??039E				  Near32 MAIN:260E
??039F				  Near32 MAIN:2622
??03A0				  Near32 MAIN:2630
??03A2				  Near32 MAIN:2639
??03A3				  Near32 MAIN:26B5
??03A4				  Near32 MAIN:26C2
??03A6				  Near32 MAIN:26CB
??03A7				  Near32 MAIN:2703
??03A8				  Near32 MAIN:270A
??03AA				  Near32 MAIN:2713
??03AB				  Near32 MAIN:2731
??03AC				  Near32 MAIN:2737
??03AE				  Near32 MAIN:2740
??03AF				  Near32 MAIN:275E
??03B0				  Near32 MAIN:2765
??03B2				  Near32 MAIN:276E
??03B3				  Near32 MAIN:27B2
??03B4				  Near32 MAIN:27BC
??03B6				  Near32 MAIN:27C5
??DATE				  Text	 "12-17-01"
??FILENAME			  Text	 "meta	  "
??TIME				  Text	 "22:07:55"
??VERSION			  Number 0502
@@0148				  Near32 MAIN:0F19
@@014D				  Near32 MAIN:0F81
@@014E				  Near32 MAIN:0F8F
@@03B7				  Near32 MAIN:282C
@@03B8				  Near32 MAIN:2846
@@03B9				  Near32 MAIN:2880
@@UC				  Near32 MAIN:19BF
@CPU				  Text	 090DH
@CURSEG				  Text	 MAIN
@FILENAME			  Text	 META
@WORDSIZE			  Text	 4
ABSOK				  Near32 MAIN:144D
ACCEPT_FUNC			  Number 0007
AT_XY_FUNC			  Number 0013
BASE_VAR			  Number 001C
BLK_VAR				  Number 014C
BLOCK_NUM_VAR			  Number 0150
BLOCK_READ			  Near32 MAIN:1BC0
BLOCK_UPDATED_VAR		  Number 0154
BLOCK_VAR			  Number 0158
BYE_FUNC			  Number 0004
CASE_SENSITIVE_VAR		  Number 0028
CDN_OK				  Near32 MAIN:0F8F
CELL_SIZE			  Text	 4
CMOVEGR_EXIT			  Near32 MAIN:1FA8
CMOVE_EXIT			  Near32 MAIN:1F69
CMP_CONT			  Near32 MAIN:1957
CMP_EXIT			  Near32 MAIN:1969
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 156
Symbol Table



CMP_LOOP			  Near32 MAIN:1943
COMPARE_FUNC			  Number 0015
CT_EXIT				  Near32 MAIN:09F6
CT_FOUND			  Near32 MAIN:09AE
CT_IMM				  Near32 MAIN:09EE
CT_NO_I_C			  Near32 MAIN:09D2
CURRENT_VAR			  Number 0148
CURR_FILE_POS_VAR		  Number 0038
D2L_EXIT			  Near32 MAIN:0CF8
DABS_OK				  Near32 MAIN:20C2
DATA_STACK_SIZE			  Text	 00001000h
DCD_EXIT			  Near32 MAIN:0B0D
DCD_NOT_IMMEDIATE		  Near32 MAIN:0B09
DD_EXIT				  Near32 MAIN:0B46
DD_INTERPRETATION		  Near32 MAIN:0B42
DESIRED_BASE_EQU		  Text	 20000000h
DESIRED_SIZE_EQU		  Text	 00040000h
DESIRED_SIZE_VAR		  Near32 MAIN:0014
DID_INTERPRET			  Near32 MAIN:0ACB
DIGITS_TABLE			  Near32 MAIN:2242
DL_EXIT				  Near32 MAIN:0C5E
DMAX_OK				  Near32 MAIN:20E8
DMIN_OK				  Near32 MAIN:210E
DO_FORTH_NO_EXCEPTIONS		  Near32 MAIN:28A8
DO_THREAD			  Near32 MAIN:08C3
DP_VAR				  Near32 MAIN:0361
EBP_VAR				  Number 000C
EBX_VAR				  Number 0010
EDI_VAR				  Number 0004
EMIT_FUNC			  Number 0005
EQ_YES				  Near32 MAIN:1654
ESI_VAR				  Number 0008
ESP_VAR				  Number 0014
EVAL_VAR			  Number 0034
EXCEPTION_HANDLER_VAR		  Number 0558
EXECUTOR_XT			  Near32 MAIN:1048
FALSE				  Text	 0
FF_EXIT				  Near32 MAIN:1A11
FF_FOUND			  Near32 MAIN:1A09
FILE_CLOSE_FUNC			  Number 000A
FILE_CREATE_FUNC		  Number 000B
FILE_OPEN_FUNC			  Number 000D
FILE_POSITION_FUNC		  Number 000C
FILE_READ_FUNC			  Number 000E
FILE_READ_LINE_FUNC		  Number 0011
FILE_REPOSITION_FUNC		  Number 000F
FILE_RESIZE_FUNC		  Number 0012
FILE_WRITE_FUNC			  Number 0010
FORTH_WORDLIST_EQU		  Near32 MAIN:18F4
FREE_LIBRARY_FUNC		  Number 0002
FUNC_AREA_SIZE			  Number 0017
FUNC_TABLE			  Near32 MAIN:002C
FUNC_TABLE_PTR			  Near32 MAIN:0020
GET_LAST_ERROR_FUNC		  Number 0000
GET_PROC_ADDRESS_FUNC		  Number 0003
GR_YES				  Near32 MAIN:1632
HERE				  Near32 MAIN:28B0
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 157
Symbol Table



ILC2L_EXIT			  Near32 MAIN:0CCE
ILC2L_EXIT1			  Near32 MAIN:0CC6
ILC2L_EXIT2			  Near32 MAIN:0CC2
ILC2L_UNSIGNED			  Near32 MAIN:0CB6
ILCL_EXIT			  Near32 MAIN:0C35
ILCL_NO				  Near32 MAIN:0C31
ILCL_UNSIGNED			  Near32 MAIN:0C25
ILCS_EXIT			  Near32 MAIN:0BCE
ILCS_SIGNED			  Near32 MAIN:0BAE
ILCS_UNSIGNED			  Near32 MAIN:0BBE
IL_CHECK_2LIT			  Near32 MAIN:0D34
IL_UNKNOWN			  Near32 MAIN:0D4C
INCLUDE_FILE_EXIT		  Near32 MAIN:269D
INCLUDE_FILE_LOOP		  Near32 MAIN:265D
INPUTFROMR_EXIT			  Near32 MAIN:078F
INT_EXIT			  Near32 MAIN:0DE5
INT_LOOP			  Near32 MAIN:0DBD
IW_EXIT				  Near32 MAIN:0DA5
IW_NOT_FOUND			  Near32 MAIN:0D89
LASTWORD			  Number MAIN:27B2
LATEST_WORD			  Number MAIN:200027B2
LE_YES				  Near32 MAIN:1610
LINE_VAR			  Number 0044
LOAD_LIBRARY_FUNC		  Number 0001
MAIN_PROC			  Near32 MAIN:03AC
MAX_LINE_LENGTH			  Text	 128
MAX_NAME_LENGTH			  Text	 32
MAX_ORDER_COUNT			  Text	 16
MAX_TIB_LENGTH			  Text	 128
NAME_EXIT			  Near32 MAIN:0FEF
NAME_OK				  Near32 MAIN:0EE1
NAME_ZEROGR			  Near32 MAIN:0EBD
NOEQ_YES			  Near32 MAIN:1677
NOQBRANCH			  Near32 MAIN:004A
NO_NAME				  Near32 MAIN:0FEB
NO_REPORT			  Near32 MAIN:0F19
PADDLOOP_LOOP_CONT		  Near32 MAIN:0506
PADDLOOP_LOOP_EXIT		  Near32 MAIN:0515
PADDLOOP_NEGATIVE		  Near32 MAIN:0526
PAGE_FUNC			  Number 0016
PDIC_INT			  Near32 MAIN:0179
PLOOP_NOEQ			  Near32 MAIN:04CE
POCKET_VAR			  Number 0964
PPARSE_EXIT			  Near32 MAIN:1CEC
PPARSE_LOOP			  Near32 MAIN:1CDA
PQDO_EXIT			  Near32 MAIN:0496
PWORD_ADDCHAR			  Near32 MAIN:1C52
PWORD_EXIT			  Near32 MAIN:1C5F
PWORD_LOOP			  Near32 MAIN:1C36
PWORD_NOT_IN_WORD		  Near32 MAIN:1C57
QDUPZERO			  Near32 MAIN:10FB
READ_BLOCK_FUNC			  Number 0008
REFILL_EVAL_EXIT		  Near32 MAIN:069B
REFILL_EXIT			  Near32 MAIN:06CB
REFILL_FROM_FILE		  Near32 MAIN:066B
REFILL_FROM_USER		  Near32 MAIN:06A3
REFILL_NOT_BLOCK		  Near32 MAIN:0643
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 158
Symbol Table



RETURN_ADDR_VAR			  Number 0000
RETURN_STACK_SIZE		  Text	 00001000h
RSTACK_VAR			  Number 1A68
SF_VAR				  Near32 MAIN:0316
SIGN				  Near32 MAIN:0000
SOURCE_EXIT			  Near32 MAIN:05F6
SOURCE_ID_VAR			  Number 0024
SOURCE_NOT_BLOCK		  Near32 MAIN:059E
SOURCE_NOT_EVALUATE		  Near32 MAIN:05C6
SOURCE_NOT_EVALUATE_EXIT	  Near32 MAIN:05F6
SOURCE_NOT_USER			  Near32 MAIN:05EA
SOURCE_NOT_USER_EXIT		  Near32 MAIN:05F6
SQUOTE_BUFFER_VAR		  Number 0564
START				  Near32 MAIN:278C
START_THREAD_FUNC		  Number 0014
STATE_VAR			  Number 0018
SW_FOUND			  Near32 MAIN:1979
SW_FOUND_IMMEDIATE		  Near32 MAIN:1986
SW_LOOP				  Near32 MAIN:192E
SW_NEXT				  Near32 MAIN:196C
SW_NOT_FOUND			  Near32 MAIN:19A2
THREAD_PROC			  Near32 MAIN:089A
THROW_ADDRESS_VAR		  Number 055C
THROW_EXIT			  Near32 MAIN:234C
THROW_WORD_VAR			  Number 0560
TIB_VAR				  Number 00C8
TN_CONT				  Near32 MAIN:21E4
TN_CONT1			  Near32 MAIN:2200
TN_CONT2			  Near32 MAIN:21F6
TN_LOOP				  Near32 MAIN:21CE
TN_STOP				  Near32 MAIN:221E
TOIN_VAR			  Number 0020
TONUMBER_SIGNED_VAR		  Number 002C
TRUE				  Text	 0FFFFFFFFh
TYPE_FUNC			  Number 0006
UD_DIV				  Near32 MAIN:15A9
UD_LOOP				  Near32 MAIN:1597
UD_NEXT				  Near32 MAIN:15AE
UGR_YES				  Near32 MAIN:1746
ULE_YES				  Near32 MAIN:1723
UPCASE				  Near32 MAIN:19B5
USER_AREA_SIZE			  Number 1A6C
USER_AREA_SIZE0			  Text	 00010000h
VEF_COMPILE_ONLY		  Text	 04h
VEF_HIDDEN			  Text	 02h
VEF_IMMEDIATE			  Text	 01h
VEF_USUAL			  Text	 00h
VOC_LINK			  Number MAIN:200027B2
WRITE_BLOCK_FUNC		  Number 0009
ZEROEQ_YES			  Near32 MAIN:16BB
ZEROGR_YES			  Near32 MAIN:1700
ZEROLE_YES			  Near32 MAIN:1699
ZERONOEQ_YES			  Near32 MAIN:16DE
Turbo Assembler	 Version 5.2	    12-17-01 22:07:56	    Page 159
Symbol Table




Macro Name

$CALL
$COLON
$CONST
$CR
$DEF
$DEFER
$FUNC
$JMP
$NEXT
$USER
$VAR
$WRITE
CC
CW
FETCHDS
FETCHRS
FUNC_ALIGN
FUNC_ALLOC
POPDS
POPRS
PUSHDS
PUSHRS
_ALIGN
_ALLOC
_VAR

Groups & Segments		  Bit Size Align  Combine Class

MAIN				  32  28B0 Para	  none
