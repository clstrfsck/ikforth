# kernel.0

Import('env')
senv = env.Clone()

senv.Command('FKernel.img', '#build/image/FKernel.img',  Copy('$TARGET', '$SOURCE'))
senv.Command('FKernel.exe', '#build/loader/FKernel.exe', Copy('$TARGET', '$SOURCE'))

kernel_0_src = senv.Glob('#src/*.f')
kernel_0_src.extend(senv.Glob('#src/*.4th'))
kernel_0_src.extend(senv.Glob('#src/kernel/*.f'))
kernel_0_src.extend(senv.Glob('#src/kernel/*.4th'))
kernel_0_src.extend(senv.Glob('#src/kernel.0/*.f'))
kernel_0_src.extend(senv.Glob('#src/kernel.0/*.4th'))
kernel_0_src.extend(senv.Glob('#lib/ansi/*.f'))
kernel_0_src.extend(senv.Glob('#lib/ansi/*.4th'))
kernel_0_src.extend(senv.Glob('#lib/term/*.4th'))
kernel_0_src.extend(senv.Glob('#lib/win32/*.f'))
kernel_0_src.extend(senv.Glob('#lib/win32/*.4th'))
kernel_0_src.extend(senv.Glob('#lib/~ik/*.f'))
kernel_0_src.extend(senv.Glob('#lib/~ik/*.4th'))
kernel_0_src.extend(senv.Glob('#lib/~js/486asm/*.F'))
kernel_0_src.extend(senv.Glob('#lib/~js/486asm/*.4th'))

kernel_0_deps = senv.Glob('*.f')
kernel_0_deps.extend(kernel_0_src)

senv.Command('IKForth.img',
        'FKernel.exe',
        'IKFORTHTERMINIT=${TERMINIT} ${BUILD_LAUNCHER} ${SOURCE} ${TARGET}')
senv.Depends('IKForth.img', ['FKernel.img', 'FKernel.exe', kernel_0_deps])
