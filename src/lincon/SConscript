# lincon

Import('env')
senv = env.Clone()
senv['STATIC_AND_SHARED_OBJECTS_ARE_THE_SAME'] = True

senv.Append(LINKFLAGS = ['-m32', '-Wl,--no-as-needed', '-pthread'])

senv.Append(CCFLAGS = ['-mregparm=0', '-Wall', '-zq', '-march=i586', '-m32', '-fpermissive', '-pedantic', '-nodefaultlibs', '-fno-exceptions'])

if senv['DEBUG'] == 'TRUE':
    senv.Append(LINKFLAGS = ['-g3', '-Og'])
else:
    senv.Append(LINKFLAGS = ['-Wl,--strip-all', '-g0', '-O3'])

if senv['TSYS'] == 'nt':
    senv.Replace(tools = ['mingw'])
    senv.Replace(CC   = 'mingw32-gcc')
    senv.Replace(LINK = 'mingw32-gcc')
    senv.Replace(SHLIBPREFIX = '')
    senv.Replace(SHLIBSUFFIX = '.dll')
    senv.Append(CCFLAGS = ['-mconsole'])
    senv.Append(CPPPATH = ['/usr/include'])

if senv['TSYS'] == 'linux':
    senv.Append(CCFLAGS = [])
    senv.Append(LINKFLAGS = ['-ldl'])
    senv.Replace(SHLIBSUFFIX = '.so')

linconPreProcessSrc = ['lincon.c']
linconExec = '${SHLIBPREFIX}lincon${SHLIBSUFFIX}'
linconPath = '#build/lincon/' + linconExec

penv = senv.Clone()
penv.Replace(CCFLAGS = [])
linconProcessSrc = penv.PreProcess(linconPreProcessSrc)

linconLib = senv.SharedLibrary('lincon', linconProcessSrc)
senv.Alias('lincon', linconLib)

Return('linconPath')
